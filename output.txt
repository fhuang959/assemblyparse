{'__PRETTY_FUNCTION__.4571:': {'code': ['.string\t"worker_post"',
                                        '.align 16',
                                        '.type\t__PRETTY_FUNCTION__.4945, '
                                        '@object',
                                        '.size\t__PRETTY_FUNCTION__.4945, 16'],
                               'fCalled': [],
                               'fNames': []},
 '__PRETTY_FUNCTION__.4945:': {'code': ['.string\t"worker_pipeline"',
                                        '.align 8',
                                        '.type\t__func__.4979, @object',
                                        '.size\t__func__.4979, 11'],
                               'fCalled': [],
                               'fNames': []},
 '__PRETTY_FUNCTION__.5011:': {'code': ['.string\t"mm_idx_str"',
                                        '.align 8',
                                        '.type\t__PRETTY_FUNCTION__.5066, '
                                        '@object',
                                        '.size\t__PRETTY_FUNCTION__.5066, 12'],
                               'fCalled': [],
                               'fNames': []},
 '__PRETTY_FUNCTION__.5066:': {'code': ['.string\t"mm_idx_load"',
                                        '.align 8',
                                        '.type\t__PRETTY_FUNCTION__.5265, '
                                        '@object',
                                        '.size\t__PRETTY_FUNCTION__.5265, 12'],
                               'fCalled': [],
                               'fNames': []},
 '__PRETTY_FUNCTION__.5265:': {'code': ['.string\t"rs_sort_bed"',
                                        '.align 8',
                                        '.LC0:',
                                        '.long\t171798692',
                                        '.long\t1072210903',
                                        '.align 8',
                                        '.LC1:',
                                        '.long\t0',
                                        '.long\t1071644672',
                                        '.align 8',
                                        '.LC3:',
                                        '.long\t0',
                                        '.long\t1079574528',
                                        '.align 8',
                                        '.LC7:',
                                        '.long\t0',
                                        '.long\t1072693248',
                                        '.ident\t"GCC: (Ubuntu '
                                        '7.4.0-1ubuntu1~18.04.1) 7.4.0"',
                                        '.section\t'
                                        '.note.GNU-stack,"",@progbits'],
                               'fCalled': [],
                               'fNames': []},
 '__ac_HASH_UPPER:': {'code': ['.long\t171798692',
                               '.long\t1072210903',
                               '.text',
                               '.type\t__ac_X31_hash_string, @function'],
                      'fCalled': [],
                      'fNames': []},
 '__ac_X31_hash_string:': {'code': ['.LFB8:',
                                    '.cfi_startproc',
                                    'pushq\t%rbp',
                                    '.cfi_def_cfa_offset 16',
                                    '.cfi_offset 6, -16',
                                    'movq\t%rsp, %rbp',
                                    '.cfi_def_cfa_register 6',
                                    'movq\t%rdi, -24(%rbp)',
                                    'movq\t-24(%rbp), %rax',
                                    'movzbl\t(%rax), %eax',
                                    'movsbl\t%al, %eax',
                                    'movl\t%eax, -4(%rbp)',
                                    'cmpl\t$0, -4(%rbp)',
                                    'je\t.L2',
                                    'addq\t$1, -24(%rbp)',
                                    'jmp\t.L3',
                                    '.L4:',
                                    'movl\t-4(%rbp), %eax',
                                    'sall\t$5, %eax',
                                    'subl\t-4(%rbp), %eax',
                                    'movl\t%eax, %edx',
                                    'movq\t-24(%rbp), %rax',
                                    'movzbl\t(%rax), %eax',
                                    'movsbl\t%al, %eax',
                                    'addl\t%edx, %eax',
                                    'movl\t%eax, -4(%rbp)',
                                    'addq\t$1, -24(%rbp)',
                                    '.L3:',
                                    'movq\t-24(%rbp), %rax',
                                    'movzbl\t(%rax), %eax',
                                    'testb\t%al, %al',
                                    'jne\t.L4',
                                    '.L2:',
                                    'movl\t-4(%rbp), %eax',
                                    'popq\t%rbp',
                                    '.cfi_def_cfa 7, 8',
                                    'ret',
                                    '.cfi_endproc',
                                    '.LFE8:',
                                    '.size\t__ac_X31_hash_string, '
                                    '.-__ac_X31_hash_string',
                                    '.type\tkh_init_idx, @function'],
                           'fCalled': [],
                           'fNames': []},
 '__func__.4485:': {'code': ['.string\t"mm_idx_stat"',
                             '.align 8',
                             '.type\t__PRETTY_FUNCTION__.4571, @object',
                             '.size\t__PRETTY_FUNCTION__.4571, 12'],
                    'fCalled': [],
                    'fNames': []},
 '__func__.4979:': {'code': ['.string\t"mm_idx_gen"',
                             '.align 8',
                             '.type\t__PRETTY_FUNCTION__.5011, @object',
                             '.size\t__PRETTY_FUNCTION__.5011, 11'],
                    'fCalled': [],
                    'fNames': []},
 'kh_destroy_idx:': {'code': ['.LFB11:',
                              '.cfi_startproc',
                              'pushq\t%rbp',
                              '.cfi_def_cfa_offset 16',
                              '.cfi_offset 6, -16',
                              'movq\t%rsp, %rbp',
                              '.cfi_def_cfa_register 6',
                              'subq\t$16, %rsp',
                              'movq\t%rdi, -8(%rbp)',
                              'cmpq\t$0, -8(%rbp)',
                              'je\t.L10',
                              'movq\t-8(%rbp), %rax',
                              'movq\t24(%rax), %rax',
                              'movq\t%rax, %rsi',
                              'movl\t$0, %edi',
                              'call\tkfree@PLT',
                              'movq\t-8(%rbp), %rax',
                              'movq\t16(%rax), %rax',
                              'movq\t%rax, %rsi',
                              'movl\t$0, %edi',
                              'call\tkfree@PLT',
                              'movq\t-8(%rbp), %rax',
                              'movq\t32(%rax), %rax',
                              'movq\t%rax, %rsi',
                              'movl\t$0, %edi',
                              'call\tkfree@PLT',
                              'movq\t-8(%rbp), %rax',
                              'movq\t%rax, %rsi',
                              'movl\t$0, %edi',
                              'call\tkfree@PLT',
                              '.L10:',
                              'nop',
                              'leave',
                              '.cfi_def_cfa 7, 8',
                              'ret',
                              '.cfi_endproc',
                              '.LFE11:',
                              '.size\tkh_destroy_idx, .-kh_destroy_idx',
                              '.type\tkh_get_idx, @function'],
                     'fCalled': ['kfree@PLT:',
                                 'kfree@PLT:',
                                 'kfree@PLT:',
                                 'kfree@PLT:'],
                     'fNames': []},
 'kh_destroy_str:': {'code': ['.LFB18:',
                              '.cfi_startproc',
                              'pushq\t%rbp',
                              '.cfi_def_cfa_offset 16',
                              '.cfi_offset 6, -16',
                              'movq\t%rsp, %rbp',
                              '.cfi_def_cfa_register 6',
                              'subq\t$16, %rsp',
                              'movq\t%rdi, -8(%rbp)',
                              'cmpq\t$0, -8(%rbp)',
                              'je\t.L62',
                              'movq\t-8(%rbp), %rax',
                              'movq\t24(%rax), %rax',
                              'movq\t%rax, %rsi',
                              'movl\t$0, %edi',
                              'call\tkfree@PLT',
                              'movq\t-8(%rbp), %rax',
                              'movq\t16(%rax), %rax',
                              'movq\t%rax, %rsi',
                              'movl\t$0, %edi',
                              'call\tkfree@PLT',
                              'movq\t-8(%rbp), %rax',
                              'movq\t32(%rax), %rax',
                              'movq\t%rax, %rsi',
                              'movl\t$0, %edi',
                              'call\tkfree@PLT',
                              'movq\t-8(%rbp), %rax',
                              'movq\t%rax, %rsi',
                              'movl\t$0, %edi',
                              'call\tkfree@PLT',
                              '.L62:',
                              'nop',
                              'leave',
                              '.cfi_def_cfa 7, 8',
                              'ret',
                              '.cfi_endproc',
                              '.LFE18:',
                              '.size\tkh_destroy_str, .-kh_destroy_str',
                              '.type\tkh_get_str, @function'],
                     'fCalled': ['kfree@PLT:',
                                 'kfree@PLT:',
                                 'kfree@PLT:',
                                 'kfree@PLT:'],
                     'fNames': []},
 'kh_get_idx:': {'code': ['.LFB13:',
                          '.cfi_startproc',
                          'pushq\t%rbp',
                          '.cfi_def_cfa_offset 16',
                          '.cfi_offset 6, -16',
                          'movq\t%rsp, %rbp',
                          '.cfi_def_cfa_register 6',
                          'movq\t%rdi, -40(%rbp)',
                          'movq\t%rsi, -48(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'testl\t%eax, %eax',
                          'je\t.L12',
                          'movl\t$0, -16(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'subl\t$1, %eax',
                          'movl\t%eax, -12(%rbp)',
                          'movq\t-48(%rbp), %rax',
                          'shrq\t%rax',
                          'movl\t%eax, -8(%rbp)',
                          'movl\t-8(%rbp), %eax',
                          'andl\t-12(%rbp), %eax',
                          'movl\t%eax, -20(%rbp)',
                          'movl\t-20(%rbp), %eax',
                          'movl\t%eax, -4(%rbp)',
                          'jmp\t.L13',
                          '.L16:',
                          'addl\t$1, -16(%rbp)',
                          'movl\t-16(%rbp), %edx',
                          'movl\t-20(%rbp), %eax',
                          'addl\t%edx, %eax',
                          'andl\t-12(%rbp), %eax',
                          'movl\t%eax, -20(%rbp)',
                          'movl\t-20(%rbp), %eax',
                          'cmpl\t-4(%rbp), %eax',
                          'jne\t.L13',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'jmp\t.L14',
                          '.L13:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-20(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$2, %eax',
                          'testl\t%eax, %eax',
                          'jne\t.L15',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-20(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$1, %eax',
                          'testl\t%eax, %eax',
                          'jne\t.L16',
                          'movq\t-40(%rbp), %rax',
                          'movq\t24(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'shrq\t%rax',
                          'movq\t%rax, %rdx',
                          'movq\t-48(%rbp), %rax',
                          'shrq\t%rax',
                          'cmpq\t%rax, %rdx',
                          'jne\t.L16',
                          '.L15:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-20(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$3, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L17',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'jmp\t.L14',
                          '.L17:',
                          'movl\t-20(%rbp), %eax',
                          'jmp\t.L14',
                          '.L12:',
                          'movl\t$0, %eax',
                          '.L14:',
                          'popq\t%rbp',
                          '.cfi_def_cfa 7, 8',
                          'ret',
                          '.cfi_endproc',
                          '.LFE13:',
                          '.size\tkh_get_idx, .-kh_get_idx',
                          '.type\tkh_resize_idx, @function'],
                 'fCalled': [],
                 'fNames': []},
 'kh_get_str:': {'__ac_X31_hash_string:': ['.LFB8:',
                                           '.cfi_startproc',
                                           'pushq\t%rbp',
                                           '.cfi_def_cfa_offset 16',
                                           '.cfi_offset 6, -16',
                                           'movq\t%rsp, %rbp',
                                           '.cfi_def_cfa_register 6',
                                           'movq\t%rdi, -24(%rbp)',
                                           'movq\t-24(%rbp), %rax',
                                           'movzbl\t(%rax), %eax',
                                           'movsbl\t%al, %eax',
                                           'movl\t%eax, -4(%rbp)',
                                           'cmpl\t$0, -4(%rbp)',
                                           'je\t.L2',
                                           'addq\t$1, -24(%rbp)',
                                           'jmp\t.L3',
                                           '.L4:',
                                           'movl\t-4(%rbp), %eax',
                                           'sall\t$5, %eax',
                                           'subl\t-4(%rbp), %eax',
                                           'movl\t%eax, %edx',
                                           'movq\t-24(%rbp), %rax',
                                           'movzbl\t(%rax), %eax',
                                           'movsbl\t%al, %eax',
                                           'addl\t%edx, %eax',
                                           'movl\t%eax, -4(%rbp)',
                                           'addq\t$1, -24(%rbp)',
                                           '.L3:',
                                           'movq\t-24(%rbp), %rax',
                                           'movzbl\t(%rax), %eax',
                                           'testb\t%al, %al',
                                           'jne\t.L4',
                                           '.L2:',
                                           'movl\t-4(%rbp), %eax',
                                           'popq\t%rbp',
                                           '.cfi_def_cfa 7, 8',
                                           'ret',
                                           '.cfi_endproc',
                                           '.LFE8:',
                                           '.size\t__ac_X31_hash_string, '
                                           '.-__ac_X31_hash_string',
                                           '.type\tkh_init_idx, @function'],
                 'code': ['.LFB20:',
                          '.cfi_startproc',
                          'pushq\t%rbp',
                          '.cfi_def_cfa_offset 16',
                          '.cfi_offset 6, -16',
                          'movq\t%rsp, %rbp',
                          '.cfi_def_cfa_register 6',
                          'subq\t$48, %rsp',
                          'movq\t%rdi, -40(%rbp)',
                          'movq\t%rsi, -48(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'testl\t%eax, %eax',
                          'je\t.L64',
                          'movl\t$0, -16(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'subl\t$1, %eax',
                          'movl\t%eax, -12(%rbp)',
                          'movq\t-48(%rbp), %rax',
                          'movq\t%rax, %rdi',
                          'call\t__ac_X31_hash_string',
                          'movl\t%eax, -8(%rbp)',
                          'movl\t-8(%rbp), %eax',
                          'andl\t-12(%rbp), %eax',
                          'movl\t%eax, -20(%rbp)',
                          'movl\t-20(%rbp), %eax',
                          'movl\t%eax, -4(%rbp)',
                          'jmp\t.L65',
                          '.L68:',
                          'addl\t$1, -16(%rbp)',
                          'movl\t-16(%rbp), %edx',
                          'movl\t-20(%rbp), %eax',
                          'addl\t%edx, %eax',
                          'andl\t-12(%rbp), %eax',
                          'movl\t%eax, -20(%rbp)',
                          'movl\t-20(%rbp), %eax',
                          'cmpl\t-4(%rbp), %eax',
                          'jne\t.L65',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'jmp\t.L66',
                          '.L65:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-20(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$2, %eax',
                          'testl\t%eax, %eax',
                          'jne\t.L67',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-20(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$1, %eax',
                          'testl\t%eax, %eax',
                          'jne\t.L68',
                          'movq\t-40(%rbp), %rax',
                          'movq\t24(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'movq\t-48(%rbp), %rdx',
                          'movq\t%rdx, %rsi',
                          'movq\t%rax, %rdi',
                          'call\tstrcmp@PLT',
                          'testl\t%eax, %eax',
                          'jne\t.L68',
                          '.L67:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-20(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$3, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L69',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'jmp\t.L66',
                          '.L69:',
                          'movl\t-20(%rbp), %eax',
                          'jmp\t.L66',
                          '.L64:',
                          'movl\t$0, %eax',
                          '.L66:',
                          'leave',
                          '.cfi_def_cfa 7, 8',
                          'ret',
                          '.cfi_endproc',
                          '.LFE20:',
                          '.size\tkh_get_str, .-kh_get_str',
                          '.type\tkh_resize_str, @function'],
                 'fCalled': ['__ac_X31_hash_string:', 'strcmp@PLT:'],
                 'fNames': ['__ac_X31_hash_string:']},
 'kh_init_idx:': {'code': ['.LFB10:',
                           '.cfi_startproc',
                           'pushq\t%rbp',
                           '.cfi_def_cfa_offset 16',
                           '.cfi_offset 6, -16',
                           'movq\t%rsp, %rbp',
                           '.cfi_def_cfa_register 6',
                           'movl\t$40, %edx',
                           'movl\t$1, %esi',
                           'movl\t$0, %edi',
                           'call\tkcalloc@PLT',
                           'popq\t%rbp',
                           '.cfi_def_cfa 7, 8',
                           'ret',
                           '.cfi_endproc',
                           '.LFE10:',
                           '.size\tkh_init_idx, .-kh_init_idx',
                           '.type\tkh_destroy_idx, @function'],
                  'fCalled': ['kcalloc@PLT:'],
                  'fNames': []},
 'kh_init_str:': {'code': ['.LFB17:',
                           '.cfi_startproc',
                           'pushq\t%rbp',
                           '.cfi_def_cfa_offset 16',
                           '.cfi_offset 6, -16',
                           'movq\t%rsp, %rbp',
                           '.cfi_def_cfa_register 6',
                           'movl\t$40, %edx',
                           'movl\t$1, %esi',
                           'movl\t$0, %edi',
                           'call\tkcalloc@PLT',
                           'popq\t%rbp',
                           '.cfi_def_cfa 7, 8',
                           'ret',
                           '.cfi_endproc',
                           '.LFE17:',
                           '.size\tkh_init_str, .-kh_init_str',
                           '.type\tkh_destroy_str, @function'],
                  'fCalled': ['kcalloc@PLT:'],
                  'fNames': []},
 'kh_put_idx:': {'code': ['.LFB15:',
                          '.cfi_startproc',
                          'pushq\t%rbp',
                          '.cfi_def_cfa_offset 16',
                          '.cfi_offset 6, -16',
                          'movq\t%rsp, %rbp',
                          '.cfi_def_cfa_register 6',
                          'subq\t$64, %rsp',
                          'movq\t%rdi, -40(%rbp)',
                          'movq\t%rsi, -48(%rbp)',
                          'movq\t%rdx, -56(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t8(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t12(%rax), %eax',
                          'cmpl\t%eax, %edx',
                          'jb\t.L45',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t4(%rax), %eax',
                          'addl\t%eax, %eax',
                          'cmpl\t%eax, %edx',
                          'jbe\t.L46',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'leal\t-1(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t%edx, %esi',
                          'movq\t%rax, %rdi',
                          'call\tkh_resize_idx',
                          'testl\t%eax, %eax',
                          'jns\t.L45',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$-1, (%rax)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'jmp\t.L47',
                          '.L46:',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'leal\t1(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t%edx, %esi',
                          'movq\t%rax, %rdi',
                          'call\tkh_resize_idx',
                          'testl\t%eax, %eax',
                          'jns\t.L45',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$-1, (%rax)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'jmp\t.L47',
                          '.L45:',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'subl\t$1, %eax',
                          'movl\t%eax, -12(%rbp)',
                          'movl\t$0, -16(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'movl\t%eax, -20(%rbp)',
                          'movl\t-20(%rbp), %eax',
                          'movl\t%eax, -28(%rbp)',
                          'movq\t-48(%rbp), %rax',
                          'shrq\t%rax',
                          'movl\t%eax, -8(%rbp)',
                          'movl\t-8(%rbp), %eax',
                          'andl\t-12(%rbp), %eax',
                          'movl\t%eax, -24(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$2, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L48',
                          'movl\t-24(%rbp), %eax',
                          'movl\t%eax, -28(%rbp)',
                          'jmp\t.L49',
                          '.L48:',
                          'movl\t-24(%rbp), %eax',
                          'movl\t%eax, -4(%rbp)',
                          'jmp\t.L50',
                          '.L53:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$1, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L51',
                          'movl\t-24(%rbp), %eax',
                          'movl\t%eax, -20(%rbp)',
                          '.L51:',
                          'addl\t$1, -16(%rbp)',
                          'movl\t-16(%rbp), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%edx, %eax',
                          'andl\t-12(%rbp), %eax',
                          'movl\t%eax, -24(%rbp)',
                          'movl\t-24(%rbp), %eax',
                          'cmpl\t-4(%rbp), %eax',
                          'jne\t.L50',
                          'movl\t-20(%rbp), %eax',
                          'movl\t%eax, -28(%rbp)',
                          'jmp\t.L52',
                          '.L50:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$2, %eax',
                          'testl\t%eax, %eax',
                          'jne\t.L52',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$1, %eax',
                          'testl\t%eax, %eax',
                          'jne\t.L53',
                          'movq\t-40(%rbp), %rax',
                          'movq\t24(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'shrq\t%rax',
                          'movq\t%rax, %rdx',
                          'movq\t-48(%rbp), %rax',
                          'shrq\t%rax',
                          'cmpq\t%rax, %rdx',
                          'jne\t.L53',
                          '.L52:',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'cmpl\t%eax, -28(%rbp)',
                          'jne\t.L49',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$2, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L54',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'cmpl\t%eax, -20(%rbp)',
                          'je\t.L54',
                          'movl\t-20(%rbp), %eax',
                          'movl\t%eax, -28(%rbp)',
                          'jmp\t.L49',
                          '.L54:',
                          'movl\t-24(%rbp), %eax',
                          'movl\t%eax, -28(%rbp)',
                          '.L49:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-28(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$2, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L55',
                          'movq\t-40(%rbp), %rax',
                          'movq\t24(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rax, %rdx',
                          'movq\t-48(%rbp), %rax',
                          'movq\t%rax, (%rdx)',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-28(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t$3, %esi',
                          'movl\t%eax, %ecx',
                          'salq\t%cl, %rsi',
                          'movq\t%rsi, %rax',
                          'notl\t%eax',
                          'movl\t%eax, %esi',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %ecx',
                          'shrl\t$4, %ecx',
                          'movl\t%ecx, %ecx',
                          'salq\t$2, %rcx',
                          'addq\t%rcx, %rax',
                          'andl\t%esi, %edx',
                          'movl\t%edx, (%rax)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t4(%rax), %eax',
                          'leal\t1(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t%edx, 4(%rax)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t8(%rax), %eax',
                          'leal\t1(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t%edx, 8(%rax)',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$1, (%rax)',
                          'jmp\t.L56',
                          '.L55:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-28(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$1, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L57',
                          'movq\t-40(%rbp), %rax',
                          'movq\t24(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rax, %rdx',
                          'movq\t-48(%rbp), %rax',
                          'movq\t%rax, (%rdx)',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-28(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t$3, %esi',
                          'movl\t%eax, %ecx',
                          'salq\t%cl, %rsi',
                          'movq\t%rsi, %rax',
                          'notl\t%eax',
                          'movl\t%eax, %esi',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %ecx',
                          'shrl\t$4, %ecx',
                          'movl\t%ecx, %ecx',
                          'salq\t$2, %rcx',
                          'addq\t%rcx, %rax',
                          'andl\t%esi, %edx',
                          'movl\t%edx, (%rax)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t4(%rax), %eax',
                          'leal\t1(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t%edx, 4(%rax)',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$2, (%rax)',
                          'jmp\t.L56',
                          '.L57:',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$0, (%rax)',
                          '.L56:',
                          'movl\t-28(%rbp), %eax',
                          '.L47:',
                          'leave',
                          '.cfi_def_cfa 7, 8',
                          'ret',
                          '.cfi_endproc',
                          '.LFE15:',
                          '.size\tkh_put_idx, .-kh_put_idx',
                          '.type\tkh_init_str, @function'],
                 'fCalled': ['kh_resize_idx:', 'kh_resize_idx:'],
                 'fNames': ['kh_resize_idx:', 'kh_resize_idx:'],
                 'kh_resize_idx:': ['.file\t"index.c"',
                                    '.text',
                                    '.section\t.rodata',
                                    '.align 8',
                                    '.type\t__ac_HASH_UPPER, @object',
                                    '.size\t__ac_HASH_UPPER, 8']},
 'kh_put_str:': {'__ac_X31_hash_string:': ['.file\t"index.c"',
                                           '.text',
                                           '.section\t.rodata',
                                           '.align 8',
                                           '.type\t__ac_HASH_UPPER, @object',
                                           '.size\t__ac_HASH_UPPER, 8'],
                 'code': ['.LFB22:',
                          '.cfi_startproc',
                          'pushq\t%rbp',
                          '.cfi_def_cfa_offset 16',
                          '.cfi_offset 6, -16',
                          'movq\t%rsp, %rbp',
                          '.cfi_def_cfa_register 6',
                          'subq\t$64, %rsp',
                          'movq\t%rdi, -40(%rbp)',
                          'movq\t%rsi, -48(%rbp)',
                          'movq\t%rdx, -56(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t8(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t12(%rax), %eax',
                          'cmpl\t%eax, %edx',
                          'jb\t.L97',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t4(%rax), %eax',
                          'addl\t%eax, %eax',
                          'cmpl\t%eax, %edx',
                          'jbe\t.L98',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'leal\t-1(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t%edx, %esi',
                          'movq\t%rax, %rdi',
                          'call\tkh_resize_str',
                          'testl\t%eax, %eax',
                          'jns\t.L97',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$-1, (%rax)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'jmp\t.L99',
                          '.L98:',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'leal\t1(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t%edx, %esi',
                          'movq\t%rax, %rdi',
                          'call\tkh_resize_str',
                          'testl\t%eax, %eax',
                          'jns\t.L97',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$-1, (%rax)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'jmp\t.L99',
                          '.L97:',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'subl\t$1, %eax',
                          'movl\t%eax, -12(%rbp)',
                          'movl\t$0, -16(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'movl\t%eax, -20(%rbp)',
                          'movl\t-20(%rbp), %eax',
                          'movl\t%eax, -28(%rbp)',
                          'movq\t-48(%rbp), %rax',
                          'movq\t%rax, %rdi',
                          'call\t__ac_X31_hash_string',
                          'movl\t%eax, -8(%rbp)',
                          'movl\t-8(%rbp), %eax',
                          'andl\t-12(%rbp), %eax',
                          'movl\t%eax, -24(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$2, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L100',
                          'movl\t-24(%rbp), %eax',
                          'movl\t%eax, -28(%rbp)',
                          'jmp\t.L101',
                          '.L100:',
                          'movl\t-24(%rbp), %eax',
                          'movl\t%eax, -4(%rbp)',
                          'jmp\t.L102',
                          '.L105:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$1, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L103',
                          'movl\t-24(%rbp), %eax',
                          'movl\t%eax, -20(%rbp)',
                          '.L103:',
                          'addl\t$1, -16(%rbp)',
                          'movl\t-16(%rbp), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%edx, %eax',
                          'andl\t-12(%rbp), %eax',
                          'movl\t%eax, -24(%rbp)',
                          'movl\t-24(%rbp), %eax',
                          'cmpl\t-4(%rbp), %eax',
                          'jne\t.L102',
                          'movl\t-20(%rbp), %eax',
                          'movl\t%eax, -28(%rbp)',
                          'jmp\t.L104',
                          '.L102:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$2, %eax',
                          'testl\t%eax, %eax',
                          'jne\t.L104',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$1, %eax',
                          'testl\t%eax, %eax',
                          'jne\t.L105',
                          'movq\t-40(%rbp), %rax',
                          'movq\t24(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'movq\t-48(%rbp), %rdx',
                          'movq\t%rdx, %rsi',
                          'movq\t%rax, %rdi',
                          'call\tstrcmp@PLT',
                          'testl\t%eax, %eax',
                          'jne\t.L105',
                          '.L104:',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'cmpl\t%eax, -28(%rbp)',
                          'jne\t.L101',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-24(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-24(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$2, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L106',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'cmpl\t%eax, -20(%rbp)',
                          'je\t.L106',
                          'movl\t-20(%rbp), %eax',
                          'movl\t%eax, -28(%rbp)',
                          'jmp\t.L101',
                          '.L106:',
                          'movl\t-24(%rbp), %eax',
                          'movl\t%eax, -28(%rbp)',
                          '.L101:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-28(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$2, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L107',
                          'movq\t-40(%rbp), %rax',
                          'movq\t24(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rax, %rdx',
                          'movq\t-48(%rbp), %rax',
                          'movq\t%rax, (%rdx)',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-28(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t$3, %esi',
                          'movl\t%eax, %ecx',
                          'salq\t%cl, %rsi',
                          'movq\t%rsi, %rax',
                          'notl\t%eax',
                          'movl\t%eax, %esi',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %ecx',
                          'shrl\t$4, %ecx',
                          'movl\t%ecx, %ecx',
                          'salq\t$2, %rcx',
                          'addq\t%rcx, %rax',
                          'andl\t%esi, %edx',
                          'movl\t%edx, (%rax)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t4(%rax), %eax',
                          'leal\t1(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t%edx, 4(%rax)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t8(%rax), %eax',
                          'leal\t1(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t%edx, 8(%rax)',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$1, (%rax)',
                          'jmp\t.L108',
                          '.L107:',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-28(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t%eax, %ecx',
                          'shrl\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'andl\t$1, %eax',
                          'testl\t%eax, %eax',
                          'je\t.L109',
                          'movq\t-40(%rbp), %rax',
                          'movq\t24(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rax, %rdx',
                          'movq\t-48(%rbp), %rax',
                          'movq\t%rax, (%rdx)',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %edx',
                          'shrl\t$4, %edx',
                          'movl\t%edx, %edx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-28(%rbp), %eax',
                          'addl\t%eax, %eax',
                          'andl\t$30, %eax',
                          'movl\t$3, %esi',
                          'movl\t%eax, %ecx',
                          'salq\t%cl, %rsi',
                          'movq\t%rsi, %rax',
                          'notl\t%eax',
                          'movl\t%eax, %esi',
                          'movq\t-40(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movl\t-28(%rbp), %ecx',
                          'shrl\t$4, %ecx',
                          'movl\t%ecx, %ecx',
                          'salq\t$2, %rcx',
                          'addq\t%rcx, %rax',
                          'andl\t%esi, %edx',
                          'movl\t%edx, (%rax)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t4(%rax), %eax',
                          'leal\t1(%rax), %edx',
                          'movq\t-40(%rbp), %rax',
                          'movl\t%edx, 4(%rax)',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$2, (%rax)',
                          'jmp\t.L108',
                          '.L109:',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$0, (%rax)',
                          '.L108:',
                          'movl\t-28(%rbp), %eax',
                          '.L99:',
                          'leave',
                          '.cfi_def_cfa 7, 8',
                          'ret',
                          '.cfi_endproc',
                          '.LFE22:',
                          '.size\tkh_put_str, .-kh_put_str',
                          '.globl\tmm_idx_init',
                          '.type\tmm_idx_init, @function'],
                 'fCalled': ['kh_resize_str:',
                             'kh_resize_str:',
                             '__ac_X31_hash_string:',
                             'strcmp@PLT:'],
                 'fNames': ['kh_resize_str:',
                            'kh_resize_str:',
                            '__ac_X31_hash_string:'],
                 'kh_resize_str:': ['.file\t"index.c"',
                                    '.text',
                                    '.section\t.rodata',
                                    '.align 8',
                                    '.type\t__ac_HASH_UPPER, @object',
                                    '.size\t__ac_HASH_UPPER, 8']},
 'kh_resize_idx:': {'code': ['.LFB14:',
                             '.cfi_startproc',
                             'pushq\t%rbp',
                             '.cfi_def_cfa_offset 16',
                             '.cfi_offset 6, -16',
                             'movq\t%rsp, %rbp',
                             '.cfi_def_cfa_register 6',
                             'subq\t$96, %rsp',
                             'movq\t%rdi, -88(%rbp)',
                             'movl\t%esi, -92(%rbp)',
                             'movq\t$0, -56(%rbp)',
                             'movl\t$1, -76(%rbp)',
                             'subl\t$1, -92(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t%eax',
                             'orl\t%eax, -92(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$2, %eax',
                             'orl\t%eax, -92(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'orl\t%eax, -92(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$8, %eax',
                             'orl\t%eax, -92(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$16, %eax',
                             'orl\t%eax, -92(%rbp)',
                             'addl\t$1, -92(%rbp)',
                             'cmpl\t$3, -92(%rbp)',
                             'ja\t.L20',
                             'movl\t$4, -92(%rbp)',
                             '.L20:',
                             'movq\t-88(%rbp), %rax',
                             'movl\t4(%rax), %ecx',
                             'movl\t-92(%rbp), %eax',
                             'testq\t%rax, %rax',
                             'js\t.L21',
                             'cvtsi2sdq\t%rax, %xmm0',
                             'jmp\t.L22',
                             '.L21:',
                             'movq\t%rax, %rdx',
                             'shrq\t%rdx',
                             'andl\t$1, %eax',
                             'orq\t%rax, %rdx',
                             'cvtsi2sdq\t%rdx, %xmm0',
                             'addsd\t%xmm0, %xmm0',
                             '.L22:',
                             'movsd\t.LC0(%rip), %xmm1',
                             'mulsd\t%xmm1, %xmm0',
                             'movsd\t.LC1(%rip), %xmm1',
                             'addsd\t%xmm1, %xmm0',
                             'cvttsd2siq\t%xmm0, %rax',
                             'cmpl\t%eax, %ecx',
                             'jb\t.L23',
                             'movl\t$0, -76(%rbp)',
                             'jmp\t.L24',
                             '.L23:',
                             'cmpl\t$15, -92(%rbp)',
                             'jbe\t.L25',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'movl\t%eax, %eax',
                             'salq\t$2, %rax',
                             'jmp\t.L26',
                             '.L25:',
                             'movl\t$4, %eax',
                             '.L26:',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkmalloc@PLT',
                             'movq\t%rax, -56(%rbp)',
                             'cmpq\t$0, -56(%rbp)',
                             'jne\t.L27',
                             'movl\t$-1, %eax',
                             'jmp\t.L28',
                             '.L27:',
                             'cmpl\t$15, -92(%rbp)',
                             'jbe\t.L29',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'movl\t%eax, %eax',
                             'leaq\t0(,%rax,4), %rdx',
                             'jmp\t.L30',
                             '.L29:',
                             'movl\t$4, %edx',
                             '.L30:',
                             'movq\t-56(%rbp), %rax',
                             'movl\t$170, %esi',
                             'movq\t%rax, %rdi',
                             'call\tmemset@PLT',
                             'movq\t-88(%rbp), %rax',
                             'movl\t(%rax), %eax',
                             'cmpl\t%eax, -92(%rbp)',
                             'jbe\t.L24',
                             'movl\t-92(%rbp), %eax',
                             'leaq\t0(,%rax,8), %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkrealloc@PLT',
                             'movq\t%rax, -32(%rbp)',
                             'cmpq\t$0, -32(%rbp)',
                             'jne\t.L31',
                             'movq\t-56(%rbp), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkfree@PLT',
                             'movl\t$-1, %eax',
                             'jmp\t.L28',
                             '.L31:',
                             'movq\t-88(%rbp), %rax',
                             'movq\t-32(%rbp), %rdx',
                             'movq\t%rdx, 24(%rax)',
                             'movl\t-92(%rbp), %eax',
                             'leaq\t0(,%rax,8), %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkrealloc@PLT',
                             'movq\t%rax, -24(%rbp)',
                             'cmpq\t$0, -24(%rbp)',
                             'jne\t.L32',
                             'movq\t-56(%rbp), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkfree@PLT',
                             'movl\t$-1, %eax',
                             'jmp\t.L28',
                             '.L32:',
                             'movq\t-88(%rbp), %rax',
                             'movq\t-24(%rbp), %rdx',
                             'movq\t%rdx, 32(%rax)',
                             '.L24:',
                             'cmpl\t$0, -76(%rbp)',
                             'je\t.L33',
                             'movl\t$0, -76(%rbp)',
                             'jmp\t.L34',
                             '.L40:',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-76(%rbp), %edx',
                             'shrl\t$4, %edx',
                             'movl\t%edx, %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-76(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t%eax, %ecx',
                             'shrl\t%cl, %edx',
                             'movl\t%edx, %eax',
                             'andl\t$3, %eax',
                             'testl\t%eax, %eax',
                             'jne\t.L35',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movl\t-76(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rdx, %rax',
                             'movq\t(%rax), %rax',
                             'movq\t%rax, -48(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'subl\t$1, %eax',
                             'movl\t%eax, -64(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movl\t-76(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rdx, %rax',
                             'movq\t(%rax), %rax',
                             'movq\t%rax, -40(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-76(%rbp), %edx',
                             'shrl\t$4, %edx',
                             'movl\t%edx, %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-76(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t$1, %esi',
                             'movl\t%eax, %ecx',
                             'salq\t%cl, %rsi',
                             'movq\t%rsi, %rax',
                             'movl\t%eax, %esi',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-76(%rbp), %ecx',
                             'shrl\t$4, %ecx',
                             'movl\t%ecx, %ecx',
                             'salq\t$2, %rcx',
                             'addq\t%rcx, %rax',
                             'orl\t%esi, %edx',
                             'movl\t%edx, (%rax)',
                             '.L39:',
                             'movl\t$0, -68(%rbp)',
                             'movq\t-48(%rbp), %rax',
                             'shrq\t%rax',
                             'movl\t%eax, -60(%rbp)',
                             'movl\t-60(%rbp), %eax',
                             'andl\t-64(%rbp), %eax',
                             'movl\t%eax, -72(%rbp)',
                             'jmp\t.L36',
                             '.L37:',
                             'addl\t$1, -68(%rbp)',
                             'movl\t-68(%rbp), %edx',
                             'movl\t-72(%rbp), %eax',
                             'addl\t%edx, %eax',
                             'andl\t-64(%rbp), %eax',
                             'movl\t%eax, -72(%rbp)',
                             '.L36:',
                             'movl\t-72(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'movl\t%eax, %eax',
                             'leaq\t0(,%rax,4), %rdx',
                             'movq\t-56(%rbp), %rax',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-72(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t%eax, %ecx',
                             'shrl\t%cl, %edx',
                             'movl\t%edx, %eax',
                             'andl\t$2, %eax',
                             'testl\t%eax, %eax',
                             'je\t.L37',
                             'movl\t-72(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'movl\t%eax, %eax',
                             'leaq\t0(,%rax,4), %rdx',
                             'movq\t-56(%rbp), %rax',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-72(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t$2, %esi',
                             'movl\t%eax, %ecx',
                             'salq\t%cl, %rsi',
                             'movq\t%rsi, %rax',
                             'notl\t%eax',
                             'movl\t%eax, %ecx',
                             'movl\t-72(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'movl\t%eax, %eax',
                             'leaq\t0(,%rax,4), %rsi',
                             'movq\t-56(%rbp), %rax',
                             'addq\t%rsi, %rax',
                             'andl\t%ecx, %edx',
                             'movl\t%edx, (%rax)',
                             'movq\t-88(%rbp), %rax',
                             'movl\t(%rax), %eax',
                             'cmpl\t%eax, -72(%rbp)',
                             'jnb\t.L38',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-72(%rbp), %edx',
                             'shrl\t$4, %edx',
                             'movl\t%edx, %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-72(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t%eax, %ecx',
                             'shrl\t%cl, %edx',
                             'movl\t%edx, %eax',
                             'andl\t$3, %eax',
                             'testl\t%eax, %eax',
                             'jne\t.L38',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movl\t-72(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rdx, %rax',
                             'movq\t(%rax), %rax',
                             'movq\t%rax, -16(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movl\t-72(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rax, %rdx',
                             'movq\t-48(%rbp), %rax',
                             'movq\t%rax, (%rdx)',
                             'movq\t-16(%rbp), %rax',
                             'movq\t%rax, -48(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movl\t-72(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rdx, %rax',
                             'movq\t(%rax), %rax',
                             'movq\t%rax, -8(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movl\t-72(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rax, %rdx',
                             'movq\t-40(%rbp), %rax',
                             'movq\t%rax, (%rdx)',
                             'movq\t-8(%rbp), %rax',
                             'movq\t%rax, -40(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-72(%rbp), %edx',
                             'shrl\t$4, %edx',
                             'movl\t%edx, %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-72(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t$1, %esi',
                             'movl\t%eax, %ecx',
                             'salq\t%cl, %rsi',
                             'movq\t%rsi, %rax',
                             'movl\t%eax, %esi',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-72(%rbp), %ecx',
                             'shrl\t$4, %ecx',
                             'movl\t%ecx, %ecx',
                             'salq\t$2, %rcx',
                             'addq\t%rcx, %rax',
                             'orl\t%esi, %edx',
                             'movl\t%edx, (%rax)',
                             'jmp\t.L39',
                             '.L38:',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movl\t-72(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rax, %rdx',
                             'movq\t-48(%rbp), %rax',
                             'movq\t%rax, (%rdx)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movl\t-72(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rax, %rdx',
                             'movq\t-40(%rbp), %rax',
                             'movq\t%rax, (%rdx)',
                             'nop',
                             '.L35:',
                             'addl\t$1, -76(%rbp)',
                             '.L34:',
                             'movq\t-88(%rbp), %rax',
                             'movl\t(%rax), %eax',
                             'cmpl\t%eax, -76(%rbp)',
                             'jne\t.L40',
                             'movq\t-88(%rbp), %rax',
                             'movl\t(%rax), %eax',
                             'cmpl\t%eax, -92(%rbp)',
                             'jnb\t.L41',
                             'movl\t-92(%rbp), %eax',
                             'leaq\t0(,%rax,8), %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkrealloc@PLT',
                             'movq\t%rax, %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t%rdx, 24(%rax)',
                             'movl\t-92(%rbp), %eax',
                             'leaq\t0(,%rax,8), %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkrealloc@PLT',
                             'movq\t%rax, %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t%rdx, 32(%rax)',
                             '.L41:',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkfree@PLT',
                             'movq\t-88(%rbp), %rax',
                             'movq\t-56(%rbp), %rdx',
                             'movq\t%rdx, 16(%rax)',
                             'movq\t-88(%rbp), %rax',
                             'movl\t-92(%rbp), %edx',
                             'movl\t%edx, (%rax)',
                             'movq\t-88(%rbp), %rax',
                             'movl\t4(%rax), %edx',
                             'movq\t-88(%rbp), %rax',
                             'movl\t%edx, 8(%rax)',
                             'movq\t-88(%rbp), %rax',
                             'movl\t(%rax), %eax',
                             'movl\t%eax, %eax',
                             'testq\t%rax, %rax',
                             'js\t.L42',
                             'cvtsi2sdq\t%rax, %xmm0',
                             'jmp\t.L43',
                             '.L42:',
                             'movq\t%rax, %rdx',
                             'shrq\t%rdx',
                             'andl\t$1, %eax',
                             'orq\t%rax, %rdx',
                             'cvtsi2sdq\t%rdx, %xmm0',
                             'addsd\t%xmm0, %xmm0',
                             '.L43:',
                             'movsd\t.LC0(%rip), %xmm1',
                             'mulsd\t%xmm1, %xmm0',
                             'movsd\t.LC1(%rip), %xmm1',
                             'addsd\t%xmm1, %xmm0',
                             'cvttsd2siq\t%xmm0, %rax',
                             'movl\t%eax, %edx',
                             'movq\t-88(%rbp), %rax',
                             'movl\t%edx, 12(%rax)',
                             '.L33:',
                             'movl\t$0, %eax',
                             '.L28:',
                             'leave',
                             '.cfi_def_cfa 7, 8',
                             'ret',
                             '.cfi_endproc',
                             '.LFE14:',
                             '.size\tkh_resize_idx, .-kh_resize_idx',
                             '.type\tkh_put_idx, @function'],
                    'fCalled': ['kmalloc@PLT:',
                                'memset@PLT:',
                                'krealloc@PLT:',
                                'kfree@PLT:',
                                'krealloc@PLT:',
                                'kfree@PLT:',
                                'krealloc@PLT:',
                                'krealloc@PLT:',
                                'kfree@PLT:'],
                    'fNames': []},
 'kh_resize_str:': {'__ac_X31_hash_string:': ['.LFB8:',
                                              '.cfi_startproc',
                                              'pushq\t%rbp',
                                              '.cfi_def_cfa_offset 16',
                                              '.cfi_offset 6, -16',
                                              'movq\t%rsp, %rbp',
                                              '.cfi_def_cfa_register 6',
                                              'movq\t%rdi, -24(%rbp)',
                                              'movq\t-24(%rbp), %rax',
                                              'movzbl\t(%rax), %eax',
                                              'movsbl\t%al, %eax',
                                              'movl\t%eax, -4(%rbp)',
                                              'cmpl\t$0, -4(%rbp)',
                                              'je\t.L2',
                                              'addq\t$1, -24(%rbp)',
                                              'jmp\t.L3',
                                              '.L4:',
                                              'movl\t-4(%rbp), %eax',
                                              'sall\t$5, %eax',
                                              'subl\t-4(%rbp), %eax',
                                              'movl\t%eax, %edx',
                                              'movq\t-24(%rbp), %rax',
                                              'movzbl\t(%rax), %eax',
                                              'movsbl\t%al, %eax',
                                              'addl\t%edx, %eax',
                                              'movl\t%eax, -4(%rbp)',
                                              'addq\t$1, -24(%rbp)',
                                              '.L3:',
                                              'movq\t-24(%rbp), %rax',
                                              'movzbl\t(%rax), %eax',
                                              'testb\t%al, %al',
                                              'jne\t.L4',
                                              '.L2:',
                                              'movl\t-4(%rbp), %eax',
                                              'popq\t%rbp',
                                              '.cfi_def_cfa 7, 8',
                                              'ret',
                                              '.cfi_endproc',
                                              '.LFE8:',
                                              '.size\t__ac_X31_hash_string, '
                                              '.-__ac_X31_hash_string',
                                              '.type\tkh_init_idx, @function'],
                    'code': ['.LFB21:',
                             '.cfi_startproc',
                             'pushq\t%rbp',
                             '.cfi_def_cfa_offset 16',
                             '.cfi_offset 6, -16',
                             'movq\t%rsp, %rbp',
                             '.cfi_def_cfa_register 6',
                             'subq\t$96, %rsp',
                             'movq\t%rdi, -88(%rbp)',
                             'movl\t%esi, -92(%rbp)',
                             'movq\t$0, -40(%rbp)',
                             'movl\t$1, -68(%rbp)',
                             'subl\t$1, -92(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t%eax',
                             'orl\t%eax, -92(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$2, %eax',
                             'orl\t%eax, -92(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'orl\t%eax, -92(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$8, %eax',
                             'orl\t%eax, -92(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$16, %eax',
                             'orl\t%eax, -92(%rbp)',
                             'addl\t$1, -92(%rbp)',
                             'cmpl\t$3, -92(%rbp)',
                             'ja\t.L72',
                             'movl\t$4, -92(%rbp)',
                             '.L72:',
                             'movq\t-88(%rbp), %rax',
                             'movl\t4(%rax), %ecx',
                             'movl\t-92(%rbp), %eax',
                             'testq\t%rax, %rax',
                             'js\t.L73',
                             'cvtsi2sdq\t%rax, %xmm0',
                             'jmp\t.L74',
                             '.L73:',
                             'movq\t%rax, %rdx',
                             'shrq\t%rdx',
                             'andl\t$1, %eax',
                             'orq\t%rax, %rdx',
                             'cvtsi2sdq\t%rdx, %xmm0',
                             'addsd\t%xmm0, %xmm0',
                             '.L74:',
                             'movsd\t.LC0(%rip), %xmm1',
                             'mulsd\t%xmm1, %xmm0',
                             'movsd\t.LC1(%rip), %xmm1',
                             'addsd\t%xmm1, %xmm0',
                             'cvttsd2siq\t%xmm0, %rax',
                             'cmpl\t%eax, %ecx',
                             'jb\t.L75',
                             'movl\t$0, -68(%rbp)',
                             'jmp\t.L76',
                             '.L75:',
                             'cmpl\t$15, -92(%rbp)',
                             'jbe\t.L77',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'movl\t%eax, %eax',
                             'salq\t$2, %rax',
                             'jmp\t.L78',
                             '.L77:',
                             'movl\t$4, %eax',
                             '.L78:',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkmalloc@PLT',
                             'movq\t%rax, -40(%rbp)',
                             'cmpq\t$0, -40(%rbp)',
                             'jne\t.L79',
                             'movl\t$-1, %eax',
                             'jmp\t.L80',
                             '.L79:',
                             'cmpl\t$15, -92(%rbp)',
                             'jbe\t.L81',
                             'movl\t-92(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'movl\t%eax, %eax',
                             'leaq\t0(,%rax,4), %rdx',
                             'jmp\t.L82',
                             '.L81:',
                             'movl\t$4, %edx',
                             '.L82:',
                             'movq\t-40(%rbp), %rax',
                             'movl\t$170, %esi',
                             'movq\t%rax, %rdi',
                             'call\tmemset@PLT',
                             'movq\t-88(%rbp), %rax',
                             'movl\t(%rax), %eax',
                             'cmpl\t%eax, -92(%rbp)',
                             'jbe\t.L76',
                             'movl\t-92(%rbp), %eax',
                             'leaq\t0(,%rax,8), %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkrealloc@PLT',
                             'movq\t%rax, -24(%rbp)',
                             'cmpq\t$0, -24(%rbp)',
                             'jne\t.L83',
                             'movq\t-40(%rbp), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkfree@PLT',
                             'movl\t$-1, %eax',
                             'jmp\t.L80',
                             '.L83:',
                             'movq\t-88(%rbp), %rax',
                             'movq\t-24(%rbp), %rdx',
                             'movq\t%rdx, 24(%rax)',
                             'movl\t-92(%rbp), %eax',
                             'leaq\t0(,%rax,4), %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkrealloc@PLT',
                             'movq\t%rax, -16(%rbp)',
                             'cmpq\t$0, -16(%rbp)',
                             'jne\t.L84',
                             'movq\t-40(%rbp), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkfree@PLT',
                             'movl\t$-1, %eax',
                             'jmp\t.L80',
                             '.L84:',
                             'movq\t-88(%rbp), %rax',
                             'movq\t-16(%rbp), %rdx',
                             'movq\t%rdx, 32(%rax)',
                             '.L76:',
                             'cmpl\t$0, -68(%rbp)',
                             'je\t.L85',
                             'movl\t$0, -68(%rbp)',
                             'jmp\t.L86',
                             '.L92:',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-68(%rbp), %edx',
                             'shrl\t$4, %edx',
                             'movl\t%edx, %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-68(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t%eax, %ecx',
                             'shrl\t%cl, %edx',
                             'movl\t%edx, %eax',
                             'andl\t$3, %eax',
                             'testl\t%eax, %eax',
                             'jne\t.L87',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movl\t-68(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rdx, %rax',
                             'movq\t(%rax), %rax',
                             'movq\t%rax, -32(%rbp)',
                             'movl\t-92(%rbp), %eax',
                             'subl\t$1, %eax',
                             'movl\t%eax, -52(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movl\t-68(%rbp), %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %eax',
                             'movl\t%eax, -64(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-68(%rbp), %edx',
                             'shrl\t$4, %edx',
                             'movl\t%edx, %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-68(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t$1, %esi',
                             'movl\t%eax, %ecx',
                             'salq\t%cl, %rsi',
                             'movq\t%rsi, %rax',
                             'movl\t%eax, %esi',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-68(%rbp), %ecx',
                             'shrl\t$4, %ecx',
                             'movl\t%ecx, %ecx',
                             'salq\t$2, %rcx',
                             'addq\t%rcx, %rax',
                             'orl\t%esi, %edx',
                             'movl\t%edx, (%rax)',
                             '.L91:',
                             'movl\t$0, -56(%rbp)',
                             'movq\t-32(%rbp), %rax',
                             'movq\t%rax, %rdi',
                             'call\t__ac_X31_hash_string',
                             'movl\t%eax, -48(%rbp)',
                             'movl\t-48(%rbp), %eax',
                             'andl\t-52(%rbp), %eax',
                             'movl\t%eax, -60(%rbp)',
                             'jmp\t.L88',
                             '.L89:',
                             'addl\t$1, -56(%rbp)',
                             'movl\t-56(%rbp), %edx',
                             'movl\t-60(%rbp), %eax',
                             'addl\t%edx, %eax',
                             'andl\t-52(%rbp), %eax',
                             'movl\t%eax, -60(%rbp)',
                             '.L88:',
                             'movl\t-60(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'movl\t%eax, %eax',
                             'leaq\t0(,%rax,4), %rdx',
                             'movq\t-40(%rbp), %rax',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-60(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t%eax, %ecx',
                             'shrl\t%cl, %edx',
                             'movl\t%edx, %eax',
                             'andl\t$2, %eax',
                             'testl\t%eax, %eax',
                             'je\t.L89',
                             'movl\t-60(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'movl\t%eax, %eax',
                             'leaq\t0(,%rax,4), %rdx',
                             'movq\t-40(%rbp), %rax',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-60(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t$2, %esi',
                             'movl\t%eax, %ecx',
                             'salq\t%cl, %rsi',
                             'movq\t%rsi, %rax',
                             'notl\t%eax',
                             'movl\t%eax, %ecx',
                             'movl\t-60(%rbp), %eax',
                             'shrl\t$4, %eax',
                             'movl\t%eax, %eax',
                             'leaq\t0(,%rax,4), %rsi',
                             'movq\t-40(%rbp), %rax',
                             'addq\t%rsi, %rax',
                             'andl\t%ecx, %edx',
                             'movl\t%edx, (%rax)',
                             'movq\t-88(%rbp), %rax',
                             'movl\t(%rax), %eax',
                             'cmpl\t%eax, -60(%rbp)',
                             'jnb\t.L90',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-60(%rbp), %edx',
                             'shrl\t$4, %edx',
                             'movl\t%edx, %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-60(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t%eax, %ecx',
                             'shrl\t%cl, %edx',
                             'movl\t%edx, %eax',
                             'andl\t$3, %eax',
                             'testl\t%eax, %eax',
                             'jne\t.L90',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movl\t-60(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rdx, %rax',
                             'movq\t(%rax), %rax',
                             'movq\t%rax, -8(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movl\t-60(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rax, %rdx',
                             'movq\t-32(%rbp), %rax',
                             'movq\t%rax, (%rdx)',
                             'movq\t-8(%rbp), %rax',
                             'movq\t%rax, -32(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movl\t-60(%rbp), %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %eax',
                             'movl\t%eax, -44(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movl\t-60(%rbp), %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rax, %rdx',
                             'movl\t-64(%rbp), %eax',
                             'movl\t%eax, (%rdx)',
                             'movl\t-44(%rbp), %eax',
                             'movl\t%eax, -64(%rbp)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-60(%rbp), %edx',
                             'shrl\t$4, %edx',
                             'movl\t%edx, %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movl\t-60(%rbp), %eax',
                             'addl\t%eax, %eax',
                             'andl\t$30, %eax',
                             'movl\t$1, %esi',
                             'movl\t%eax, %ecx',
                             'salq\t%cl, %rsi',
                             'movq\t%rsi, %rax',
                             'movl\t%eax, %esi',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movl\t-60(%rbp), %ecx',
                             'shrl\t$4, %ecx',
                             'movl\t%ecx, %ecx',
                             'salq\t$2, %rcx',
                             'addq\t%rcx, %rax',
                             'orl\t%esi, %edx',
                             'movl\t%edx, (%rax)',
                             'jmp\t.L91',
                             '.L90:',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movl\t-60(%rbp), %edx',
                             'salq\t$3, %rdx',
                             'addq\t%rax, %rdx',
                             'movq\t-32(%rbp), %rax',
                             'movq\t%rax, (%rdx)',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movl\t-60(%rbp), %edx',
                             'salq\t$2, %rdx',
                             'addq\t%rax, %rdx',
                             'movl\t-64(%rbp), %eax',
                             'movl\t%eax, (%rdx)',
                             'nop',
                             '.L87:',
                             'addl\t$1, -68(%rbp)',
                             '.L86:',
                             'movq\t-88(%rbp), %rax',
                             'movl\t(%rax), %eax',
                             'cmpl\t%eax, -68(%rbp)',
                             'jne\t.L92',
                             'movq\t-88(%rbp), %rax',
                             'movl\t(%rax), %eax',
                             'cmpl\t%eax, -92(%rbp)',
                             'jnb\t.L93',
                             'movl\t-92(%rbp), %eax',
                             'leaq\t0(,%rax,8), %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t24(%rax), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkrealloc@PLT',
                             'movq\t%rax, %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t%rdx, 24(%rax)',
                             'movl\t-92(%rbp), %eax',
                             'leaq\t0(,%rax,4), %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkrealloc@PLT',
                             'movq\t%rax, %rdx',
                             'movq\t-88(%rbp), %rax',
                             'movq\t%rdx, 32(%rax)',
                             '.L93:',
                             'movq\t-88(%rbp), %rax',
                             'movq\t16(%rax), %rax',
                             'movq\t%rax, %rsi',
                             'movl\t$0, %edi',
                             'call\tkfree@PLT',
                             'movq\t-88(%rbp), %rax',
                             'movq\t-40(%rbp), %rdx',
                             'movq\t%rdx, 16(%rax)',
                             'movq\t-88(%rbp), %rax',
                             'movl\t-92(%rbp), %edx',
                             'movl\t%edx, (%rax)',
                             'movq\t-88(%rbp), %rax',
                             'movl\t4(%rax), %edx',
                             'movq\t-88(%rbp), %rax',
                             'movl\t%edx, 8(%rax)',
                             'movq\t-88(%rbp), %rax',
                             'movl\t(%rax), %eax',
                             'movl\t%eax, %eax',
                             'testq\t%rax, %rax',
                             'js\t.L94',
                             'cvtsi2sdq\t%rax, %xmm0',
                             'jmp\t.L95',
                             '.L94:',
                             'movq\t%rax, %rdx',
                             'shrq\t%rdx',
                             'andl\t$1, %eax',
                             'orq\t%rax, %rdx',
                             'cvtsi2sdq\t%rdx, %xmm0',
                             'addsd\t%xmm0, %xmm0',
                             '.L95:',
                             'movsd\t.LC0(%rip), %xmm1',
                             'mulsd\t%xmm1, %xmm0',
                             'movsd\t.LC1(%rip), %xmm1',
                             'addsd\t%xmm1, %xmm0',
                             'cvttsd2siq\t%xmm0, %rax',
                             'movl\t%eax, %edx',
                             'movq\t-88(%rbp), %rax',
                             'movl\t%edx, 12(%rax)',
                             '.L85:',
                             'movl\t$0, %eax',
                             '.L80:',
                             'leave',
                             '.cfi_def_cfa 7, 8',
                             'ret',
                             '.cfi_endproc',
                             '.LFE21:',
                             '.size\tkh_resize_str, .-kh_resize_str',
                             '.type\tkh_put_str, @function'],
                    'fCalled': ['kmalloc@PLT:',
                                'memset@PLT:',
                                'krealloc@PLT:',
                                'kfree@PLT:',
                                'krealloc@PLT:',
                                'kfree@PLT:',
                                '__ac_X31_hash_string:',
                                'krealloc@PLT:',
                                'krealloc@PLT:',
                                'kfree@PLT:'],
                    'fNames': ['__ac_X31_hash_string:']},
 'ks_getuntil:': {'code': ['.LFB47:',
                           '.cfi_startproc',
                           'pushq\t%rbp',
                           '.cfi_def_cfa_offset 16',
                           '.cfi_offset 6, -16',
                           'movq\t%rsp, %rbp',
                           '.cfi_def_cfa_register 6',
                           'subq\t$32, %rsp',
                           'movq\t%rdi, -8(%rbp)',
                           'movl\t%esi, -12(%rbp)',
                           'movq\t%rdx, -24(%rbp)',
                           'movq\t%rcx, -32(%rbp)',
                           'movq\t-32(%rbp), %rcx',
                           'movq\t-24(%rbp), %rdx',
                           'movl\t-12(%rbp), %esi',
                           'movq\t-8(%rbp), %rax',
                           'movl\t$0, %r8d',
                           'movq\t%rax, %rdi',
                           'call\tks_getuntil2@PLT',
                           'leave',
                           '.cfi_def_cfa 7, 8',
                           'ret',
                           '.cfi_endproc',
                           '.LFE47:',
                           '.size\tks_getuntil, .-ks_getuntil',
                           '.globl\trs_insertsort_bed',
                           '.type\trs_insertsort_bed, @function'],
                  'fCalled': ['ks_getuntil2@PLT:'],
                  'fNames': []},
 'mm_idx_add:': {'code': ['.LFB34:',
                          '.cfi_startproc',
                          'pushq\t%rbp',
                          '.cfi_def_cfa_offset 16',
                          '.cfi_offset 6, -16',
                          'movq\t%rsp, %rbp',
                          '.cfi_def_cfa_register 6',
                          'subq\t$48, %rsp',
                          'movq\t%rdi, -24(%rbp)',
                          'movl\t%esi, -28(%rbp)',
                          'movq\t%rdx, -40(%rbp)',
                          'movq\t-24(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'movl\t$1, %edx',
                          'movl\t%eax, %ecx',
                          'sall\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'subl\t$1, %eax',
                          'movl\t%eax, -12(%rbp)',
                          'movl\t$0, -16(%rbp)',
                          'jmp\t.L228',
                          '.L232:',
                          'movq\t-24(%rbp), %rax',
                          'movq\t40(%rax), %rcx',
                          'movl\t-16(%rbp), %eax',
                          'cltq',
                          'salq\t$4, %rax',
                          'movq\t%rax, %rdx',
                          'movq\t-40(%rbp), %rax',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'shrq\t$8, %rax',
                          'movq\t%rax, %rdx',
                          'movl\t-12(%rbp), %eax',
                          'cltq',
                          'andq\t%rax, %rdx',
                          'movq\t%rdx, %rax',
                          'addq\t%rax, %rax',
                          'addq\t%rdx, %rax',
                          'salq\t$4, %rax',
                          'addq\t%rcx, %rax',
                          'movq\t%rax, -8(%rbp)',
                          'movq\t-8(%rbp), %rax',
                          'movq\t(%rax), %rdx',
                          'movq\t-8(%rbp), %rax',
                          'movq\t8(%rax), %rax',
                          'cmpq\t%rax, %rdx',
                          'jne\t.L229',
                          'movq\t-8(%rbp), %rax',
                          'movq\t8(%rax), %rax',
                          'testq\t%rax, %rax',
                          'je\t.L230',
                          'movq\t-8(%rbp), %rax',
                          'movq\t8(%rax), %rax',
                          'leaq\t(%rax,%rax), %rdx',
                          'jmp\t.L231',
                          '.L230:',
                          'movl\t$2, %edx',
                          '.L231:',
                          'movq\t-8(%rbp), %rax',
                          'movq\t%rdx, 8(%rax)',
                          'movq\t-8(%rbp), %rax',
                          'movq\t8(%rax), %rax',
                          'salq\t$4, %rax',
                          'movq\t%rax, %rdx',
                          'movq\t-8(%rbp), %rax',
                          'movq\t16(%rax), %rax',
                          'movq\t%rax, %rsi',
                          'movl\t$0, %edi',
                          'call\tkrealloc@PLT',
                          'movq\t%rax, %rdx',
                          'movq\t-8(%rbp), %rax',
                          'movq\t%rdx, 16(%rax)',
                          '.L229:',
                          'movl\t-16(%rbp), %eax',
                          'cltq',
                          'salq\t$4, %rax',
                          'movq\t%rax, %rdx',
                          'movq\t-40(%rbp), %rax',
                          'leaq\t(%rdx,%rax), %rsi',
                          'movq\t-8(%rbp), %rax',
                          'movq\t16(%rax), %rdi',
                          'movq\t-8(%rbp), %rax',
                          'movq\t(%rax), %rax',
                          'leaq\t1(%rax), %rcx',
                          'movq\t-8(%rbp), %rdx',
                          'movq\t%rcx, (%rdx)',
                          'salq\t$4, %rax',
                          'leaq\t(%rdi,%rax), %rcx',
                          'movq\t(%rsi), %rax',
                          'movq\t8(%rsi), %rdx',
                          'movq\t%rax, (%rcx)',
                          'movq\t%rdx, 8(%rcx)',
                          'addl\t$1, -16(%rbp)',
                          '.L228:',
                          'movl\t-16(%rbp), %eax',
                          'cmpl\t-28(%rbp), %eax',
                          'jl\t.L232',
                          'nop',
                          'leave',
                          '.cfi_def_cfa 7, 8',
                          'ret',
                          '.cfi_endproc',
                          '.LFE34:',
                          '.size\tmm_idx_add, .-mm_idx_add',
                          '.section\t.rodata',
                          '.align 8',
                          '.LC11:',
                          '.string\t"(uint64_t)p->mi->n_seq + s->n_seq <= '
                          'UINT32_MAX"',
                          '.align 8',
                          '.LC12:',
                          '.string\t"[WARNING] the length database sequence '
                          '\'%s\' is 0\\n"',
                          '.text',
                          '.type\tworker_pipeline, @function'],
                 'fCalled': ['krealloc@PLT:'],
                 'fNames': []},
 'mm_idx_bed_junc:': {'code': ['.LFB53:',
                               '.cfi_startproc',
                               'pushq\t%rbp',
                               '.cfi_def_cfa_offset 16',
                               '.cfi_offset 6, -16',
                               'movq\t%rsp, %rbp',
                               '.cfi_def_cfa_register 6',
                               'subq\t$64, %rsp',
                               'movq\t%rdi, -40(%rbp)',
                               'movl\t%esi, -44(%rbp)',
                               'movl\t%edx, -48(%rbp)',
                               'movl\t%ecx, -52(%rbp)',
                               'movq\t%r8, -64(%rbp)',
                               'movl\t-52(%rbp), %eax',
                               'subl\t-48(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t-64(%rbp), %rax',
                               'movl\t$0, %esi',
                               'movq\t%rax, %rdi',
                               'call\tmemset@PLT',
                               'movq\t-40(%rbp), %rax',
                               'movq\t48(%rax), %rax',
                               'testq\t%rax, %rax',
                               'je\t.L445',
                               'cmpl\t$0, -44(%rbp)',
                               'js\t.L445',
                               'movq\t-40(%rbp), %rax',
                               'movl\t16(%rax), %edx',
                               'movl\t-44(%rbp), %eax',
                               'cmpl\t%eax, %edx',
                               'ja\t.L446',
                               '.L445:',
                               'movl\t$-1, %eax',
                               'jmp\t.L447',
                               '.L446:',
                               'movq\t-40(%rbp), %rax',
                               'movq\t48(%rax), %rax',
                               'movl\t-44(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movq\t%rax, -8(%rbp)',
                               'movl\t$0, -20(%rbp)',
                               'movq\t-8(%rbp), %rax',
                               'movl\t(%rax), %eax',
                               'movl\t%eax, -16(%rbp)',
                               'jmp\t.L448',
                               '.L450:',
                               'movl\t-16(%rbp), %eax',
                               'subl\t-20(%rbp), %eax',
                               'sarl\t%eax',
                               'movl\t%eax, %edx',
                               'movl\t-20(%rbp), %eax',
                               'addl\t%edx, %eax',
                               'movl\t%eax, -12(%rbp)',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-12(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t(%rax), %eax',
                               'cmpl\t%eax, -48(%rbp)',
                               'jg\t.L449',
                               'movl\t-12(%rbp), %eax',
                               'movl\t%eax, -16(%rbp)',
                               'jmp\t.L448',
                               '.L449:',
                               'movl\t-12(%rbp), %eax',
                               'addl\t$1, %eax',
                               'movl\t%eax, -20(%rbp)',
                               '.L448:',
                               'movl\t-16(%rbp), %eax',
                               'cmpl\t-20(%rbp), %eax',
                               'jg\t.L450',
                               'movl\t-20(%rbp), %eax',
                               'movl\t%eax, -24(%rbp)',
                               'jmp\t.L451',
                               '.L454:',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t(%rax), %eax',
                               'cmpl\t%eax, -48(%rbp)',
                               'jg\t.L452',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t4(%rax), %eax',
                               'cmpl\t%eax, -52(%rbp)',
                               'jl\t.L452',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movzbl\t15(%rax), %eax',
                               'andl\t$-64, %eax',
                               'testb\t%al, %al',
                               'je\t.L452',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movzbl\t15(%rax), %eax',
                               'andl\t$-64, %eax',
                               'cmpb\t$64, %al',
                               'jne\t.L453',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t(%rax), %eax',
                               'subl\t-48(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t-64(%rbp), %rax',
                               'addq\t%rdx, %rax',
                               'movzbl\t(%rax), %ecx',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t(%rax), %eax',
                               'subl\t-48(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t-64(%rbp), %rax',
                               'addq\t%rdx, %rax',
                               'orl\t$1, %ecx',
                               'movl\t%ecx, %edx',
                               'movb\t%dl, (%rax)',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t4(%rax), %eax',
                               'subl\t$1, %eax',
                               'subl\t-48(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t-64(%rbp), %rax',
                               'addq\t%rdx, %rax',
                               'movzbl\t(%rax), %ecx',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t4(%rax), %eax',
                               'subl\t$1, %eax',
                               'subl\t-48(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t-64(%rbp), %rax',
                               'addq\t%rdx, %rax',
                               'orl\t$2, %ecx',
                               'movl\t%ecx, %edx',
                               'movb\t%dl, (%rax)',
                               'jmp\t.L452',
                               '.L453:',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t(%rax), %eax',
                               'subl\t-48(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t-64(%rbp), %rax',
                               'addq\t%rdx, %rax',
                               'movzbl\t(%rax), %ecx',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t(%rax), %eax',
                               'subl\t-48(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t-64(%rbp), %rax',
                               'addq\t%rdx, %rax',
                               'orl\t$8, %ecx',
                               'movl\t%ecx, %edx',
                               'movb\t%dl, (%rax)',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t4(%rax), %eax',
                               'subl\t$1, %eax',
                               'subl\t-48(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t-64(%rbp), %rax',
                               'addq\t%rdx, %rax',
                               'movzbl\t(%rax), %ecx',
                               'movq\t-8(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movl\t-24(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t4(%rax), %eax',
                               'subl\t$1, %eax',
                               'subl\t-48(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t-64(%rbp), %rax',
                               'addq\t%rdx, %rax',
                               'orl\t$4, %ecx',
                               'movl\t%ecx, %edx',
                               'movb\t%dl, (%rax)',
                               '.L452:',
                               'addl\t$1, -24(%rbp)',
                               '.L451:',
                               'movq\t-8(%rbp), %rax',
                               'movl\t(%rax), %eax',
                               'cmpl\t%eax, -24(%rbp)',
                               'jl\t.L454',
                               'movl\t-20(%rbp), %eax',
                               '.L447:',
                               'leave',
                               '.cfi_def_cfa 7, 8',
                               'ret',
                               '.cfi_endproc',
                               '.LFE53:',
                               '.size\tmm_idx_bed_junc, .-mm_idx_bed_junc',
                               '.section\t.rodata',
                               '.align 8',
                               '.type\t__func__.4485, @object',
                               '.size\t__func__.4485, 12'],
                      'fCalled': ['memset@PLT:'],
                      'fNames': []},
 'mm_idx_bed_read:': {'code': ['.LFB52:',
                               '.cfi_startproc',
                               'pushq\t%rbp',
                               '.cfi_def_cfa_offset 16',
                               '.cfi_offset 6, -16',
                               'movq\t%rsp, %rbp',
                               '.cfi_def_cfa_register 6',
                               'subq\t$48, %rsp',
                               'movq\t%rdi, -24(%rbp)',
                               'movq\t%rsi, -32(%rbp)',
                               'movl\t%edx, -36(%rbp)',
                               'movq\t-24(%rbp), %rax',
                               'movq\t64(%rax), %rax',
                               'testq\t%rax, %rax',
                               'jne\t.L439',
                               'movq\t-24(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tmm_idx_index_name',
                               '.L439:',
                               'movl\t-36(%rbp), %edx',
                               'movq\t-32(%rbp), %rcx',
                               'movq\t-24(%rbp), %rax',
                               'movq\t%rcx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\tmm_idx_read_bed',
                               'movq\t%rax, %rdx',
                               'movq\t-24(%rbp), %rax',
                               'movq\t%rdx, 48(%rax)',
                               'movq\t-24(%rbp), %rax',
                               'movq\t48(%rax), %rax',
                               'testq\t%rax, %rax',
                               'jne\t.L440',
                               'movl\t$-1, %eax',
                               'jmp\t.L441',
                               '.L440:',
                               'movl\t$0, -4(%rbp)',
                               'jmp\t.L442',
                               '.L443:',
                               'movq\t-24(%rbp), %rax',
                               'movq\t48(%rax), %rax',
                               'movl\t-4(%rbp), %edx',
                               'movslq\t%edx, %rdx',
                               'salq\t$4, %rdx',
                               'addq\t%rdx, %rax',
                               'movq\t8(%rax), %rdx',
                               'movq\t-24(%rbp), %rax',
                               'movq\t48(%rax), %rax',
                               'movl\t-4(%rbp), %ecx',
                               'movslq\t%ecx, %rcx',
                               'salq\t$4, %rcx',
                               'addq\t%rcx, %rax',
                               'movl\t(%rax), %eax',
                               'cltq',
                               'salq\t$4, %rax',
                               'addq\t%rax, %rdx',
                               'movq\t-24(%rbp), %rax',
                               'movq\t48(%rax), %rax',
                               'movl\t-4(%rbp), %ecx',
                               'movslq\t%ecx, %rcx',
                               'salq\t$4, %rcx',
                               'addq\t%rcx, %rax',
                               'movq\t8(%rax), %rax',
                               'movq\t%rdx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\tradix_sort_bed',
                               'addl\t$1, -4(%rbp)',
                               '.L442:',
                               'movq\t-24(%rbp), %rax',
                               'movl\t16(%rax), %edx',
                               'movl\t-4(%rbp), %eax',
                               'cmpl\t%eax, %edx',
                               'ja\t.L443',
                               'movl\t$0, %eax',
                               '.L441:',
                               'leave',
                               '.cfi_def_cfa 7, 8',
                               'ret',
                               '.cfi_endproc',
                               '.LFE52:',
                               '.size\tmm_idx_bed_read, .-mm_idx_bed_read',
                               '.globl\tmm_idx_bed_junc',
                               '.type\tmm_idx_bed_junc, @function'],
                      'fCalled': ['mm_idx_index_name:',
                                  'mm_idx_read_bed:',
                                  'radix_sort_bed:'],
                      'fNames': ['mm_idx_index_name:',
                                 'mm_idx_read_bed:',
                                 'radix_sort_bed:'],
                      'mm_idx_index_name:': ['.LFB28:',
                                             '.cfi_startproc',
                                             'pushq\t%rbp',
                                             '.cfi_def_cfa_offset 16',
                                             '.cfi_offset 6, -16',
                                             'movq\t%rsp, %rbp',
                                             '.cfi_def_cfa_register 6',
                                             'subq\t$48, %rsp',
                                             'movq\t%rdi, -40(%rbp)',
                                             'movq\t%fs:40, %rax',
                                             'movq\t%rax, -8(%rbp)',
                                             'xorl\t%eax, %eax',
                                             'movl\t$0, -24(%rbp)',
                                             'movq\t-40(%rbp), %rax',
                                             'movq\t64(%rax), %rax',
                                             'testq\t%rax, %rax',
                                             'je\t.L158',
                                             'movl\t$0, %eax',
                                             'jmp\t.L165',
                                             '.L158:',
                                             'call\tkh_init_str',
                                             'movq\t%rax, -16(%rbp)',
                                             'movl\t$0, -28(%rbp)',
                                             'jmp\t.L160',
                                             '.L163:',
                                             'movq\t-40(%rbp), %rax',
                                             'movq\t24(%rax), %rcx',
                                             'movl\t-28(%rbp), %edx',
                                             'movq\t%rdx, %rax',
                                             'addq\t%rax, %rax',
                                             'addq\t%rdx, %rax',
                                             'salq\t$3, %rax',
                                             'addq\t%rcx, %rax',
                                             'movq\t(%rax), %rcx',
                                             'leaq\t-32(%rbp), %rdx',
                                             'movq\t-16(%rbp), %rax',
                                             'movq\t%rcx, %rsi',
                                             'movq\t%rax, %rdi',
                                             'call\tkh_put_str',
                                             'movl\t%eax, -20(%rbp)',
                                             'movl\t-32(%rbp), %eax',
                                             'testl\t%eax, %eax',
                                             'je\t.L161',
                                             'movq\t-16(%rbp), %rax',
                                             'movq\t32(%rax), %rax',
                                             'movl\t-20(%rbp), %edx',
                                             'salq\t$2, %rdx',
                                             'addq\t%rax, %rdx',
                                             'movl\t-28(%rbp), %eax',
                                             'movl\t%eax, (%rdx)',
                                             'jmp\t.L162',
                                             '.L161:',
                                             'movl\t$1, -24(%rbp)',
                                             '.L162:',
                                             'addl\t$1, -28(%rbp)',
                                             '.L160:',
                                             'movq\t-40(%rbp), %rax',
                                             'movl\t16(%rax), %eax',
                                             'cmpl\t%eax, -28(%rbp)',
                                             'jb\t.L163',
                                             'movq\t-40(%rbp), %rax',
                                             'movq\t-16(%rbp), %rdx',
                                             'movq\t%rdx, 64(%rax)',
                                             'cmpl\t$0, -24(%rbp)',
                                             'je\t.L164',
                                             'movl\tmm_verbose(%rip), %eax',
                                             'cmpl\t$1, %eax',
                                             'jle\t.L164',
                                             'movq\tstderr(%rip), %rax',
                                             'movq\t%rax, %rcx',
                                             'movl\t$64, %edx',
                                             'movl\t$1, %esi',
                                             'leaq\t.LC5(%rip), %rdi',
                                             'call\tfwrite@PLT',
                                             '.L164:',
                                             'movl\t-24(%rbp), %eax',
                                             '.L165:',
                                             'movq\t-8(%rbp), %rsi',
                                             'xorq\t%fs:40, %rsi',
                                             'je\t.L166',
                                             'call\t__stack_chk_fail@PLT',
                                             '.L166:',
                                             'leave',
                                             '.cfi_def_cfa 7, 8',
                                             'ret',
                                             '.cfi_endproc',
                                             '.LFE28:',
                                             '.size\tmm_idx_index_name, '
                                             '.-mm_idx_index_name',
                                             '.globl\tmm_idx_name2id',
                                             '.type\tmm_idx_name2id, '
                                             '@function'],
                      'mm_idx_read_bed:': ['.file\t"index.c"',
                                           '.text',
                                           '.section\t.rodata',
                                           '.align 8',
                                           '.type\t__ac_HASH_UPPER, @object',
                                           '.size\t__ac_HASH_UPPER, 8'],
                      'radix_sort_bed:': ['.file\t"index.c"',
                                          '.text',
                                          '.section\t.rodata',
                                          '.align 8',
                                          '.type\t__ac_HASH_UPPER, @object',
                                          '.size\t__ac_HASH_UPPER, 8']},
 'mm_idx_build:': {'code': ['.LFB37:',
                            '.cfi_startproc',
                            'pushq\t%rbp',
                            '.cfi_def_cfa_offset 16',
                            '.cfi_offset 6, -16',
                            'movq\t%rsp, %rbp',
                            '.cfi_def_cfa_register 6',
                            'subq\t$48, %rsp',
                            'movq\t%rdi, -24(%rbp)',
                            'movl\t%esi, -28(%rbp)',
                            'movl\t%edx, -32(%rbp)',
                            'movl\t%ecx, -36(%rbp)',
                            'movl\t%r8d, -40(%rbp)',
                            'movq\t-24(%rbp), %rax',
                            'movq\t%rax, %rdi',
                            'call\tmm_bseq_open@PLT',
                            'movq\t%rax, -16(%rbp)',
                            'cmpq\t$0, -16(%rbp)',
                            'jne\t.L265',
                            'movl\t$0, %eax',
                            'jmp\t.L266',
                            '.L265:',
                            'movl\t-36(%rbp), %edi',
                            'movl\t-32(%rbp), %edx',
                            'movl\t-28(%rbp), %esi',
                            'movq\t-16(%rbp), %rax',
                            'pushq\t$-1',
                            'movl\t-40(%rbp), %ecx',
                            'pushq\t%rcx',
                            'movl\t$262144, %r9d',
                            'movl\t%edi, %r8d',
                            'movl\t$14, %ecx',
                            'movq\t%rax, %rdi',
                            'call\tmm_idx_gen',
                            'addq\t$16, %rsp',
                            'movq\t%rax, -8(%rbp)',
                            'movq\t-16(%rbp), %rax',
                            'movq\t%rax, %rdi',
                            'call\tmm_bseq_close@PLT',
                            'movq\t-8(%rbp), %rax',
                            '.L266:',
                            'leave',
                            '.cfi_def_cfa 7, 8',
                            'ret',
                            '.cfi_endproc',
                            '.LFE37:',
                            '.size\tmm_idx_build, .-mm_idx_build',
                            '.section\t.rodata',
                            '.LC15:',
                            '.string\t"absent"',
                            '.text',
                            '.globl\tmm_idx_str',
                            '.type\tmm_idx_str, @function'],
                   'fCalled': ['mm_bseq_open@PLT:',
                               'mm_idx_gen:',
                               'mm_bseq_close@PLT:'],
                   'fNames': ['mm_idx_gen:'],
                   'mm_idx_gen:': ['.LFB36:',
                                   '.cfi_startproc',
                                   'pushq\t%rbp',
                                   '.cfi_def_cfa_offset 16',
                                   '.cfi_offset 6, -16',
                                   'movq\t%rsp, %rbp',
                                   '.cfi_def_cfa_register 6',
                                   'subq\t$96, %rsp',
                                   'movq\t%rdi, -56(%rbp)',
                                   'movl\t%esi, -60(%rbp)',
                                   'movl\t%edx, -64(%rbp)',
                                   'movl\t%ecx, -68(%rbp)',
                                   'movl\t%r8d, -72(%rbp)',
                                   'movl\t%r9d, -76(%rbp)',
                                   'movq\t%fs:40, %rax',
                                   'movq\t%rax, -8(%rbp)',
                                   'xorl\t%eax, %eax',
                                   'cmpq\t$0, -56(%rbp)',
                                   'je\t.L257',
                                   'movq\t-56(%rbp), %rax',
                                   'movq\t%rax, %rdi',
                                   'call\tmm_bseq_eof@PLT',
                                   'testl\t%eax, %eax',
                                   'je\t.L258',
                                   '.L257:',
                                   'movl\t$0, %eax',
                                   'jmp\t.L262',
                                   '.L258:',
                                   'leaq\t-48(%rbp), %rax',
                                   'movl\t$40, %edx',
                                   'movl\t$0, %esi',
                                   'movq\t%rax, %rdi',
                                   'call\tmemset@PLT',
                                   'movl\t-76(%rbp), %eax',
                                   'cltq',
                                   'cmpq\t%rax, 24(%rbp)',
                                   'cmovbe\t24(%rbp), %rax',
                                   'movl\t%eax, -48(%rbp)',
                                   'movq\t24(%rbp), %rax',
                                   'movq\t%rax, -40(%rbp)',
                                   'movq\t-56(%rbp), %rax',
                                   'movq\t%rax, -24(%rbp)',
                                   'movl\t-72(%rbp), %ecx',
                                   'movl\t-68(%rbp), %edx',
                                   'movl\t-64(%rbp), %esi',
                                   'movl\t-60(%rbp), %eax',
                                   'movl\t%eax, %edi',
                                   'call\tmm_idx_init',
                                   'movq\t%rax, -16(%rbp)',
                                   'movl\t$3, %eax',
                                   'cmpl\t$3, 16(%rbp)',
                                   'cmovle\t16(%rbp), %eax',
                                   'leaq\t-48(%rbp), %rdx',
                                   'movl\t$3, %ecx',
                                   'leaq\tworker_pipeline(%rip), %rsi',
                                   'movl\t%eax, %edi',
                                   'call\tkt_pipeline@PLT',
                                   'movl\tmm_verbose(%rip), %eax',
                                   'cmpl\t$2, %eax',
                                   'jle\t.L260',
                                   'call\tcputime@PLT',
                                   'movsd\t%xmm0, -88(%rbp)',
                                   'call\trealtime@PLT',
                                   'movapd\t%xmm0, %xmm1',
                                   'movsd\tmm_realtime0(%rip), %xmm0',
                                   'subsd\t%xmm0, %xmm1',
                                   'movapd\t%xmm1, %xmm0',
                                   'movsd\t-88(%rbp), %xmm2',
                                   'divsd\t%xmm0, %xmm2',
                                   'movsd\t%xmm2, -88(%rbp)',
                                   'call\trealtime@PLT',
                                   'movapd\t%xmm0, %xmm1',
                                   'movsd\tmm_realtime0(%rip), %xmm0',
                                   'movapd\t%xmm1, %xmm3',
                                   'subsd\t%xmm0, %xmm3',
                                   'movapd\t%xmm3, %xmm0',
                                   'movq\tstderr(%rip), %rax',
                                   'movsd\t-88(%rbp), %xmm1',
                                   'leaq\t__func__.4979(%rip), %rdx',
                                   'leaq\t.LC13(%rip), %rsi',
                                   'movq\t%rax, %rdi',
                                   'movl\t$2, %eax',
                                   'call\tfprintf@PLT',
                                   '.L260:',
                                   'movq\t-16(%rbp), %rax',
                                   'movl\t16(%rbp), %esi',
                                   'movq\t%rax, %rdi',
                                   'call\tmm_idx_post',
                                   'movl\tmm_verbose(%rip), %eax',
                                   'cmpl\t$2, %eax',
                                   'jle\t.L261',
                                   'call\tcputime@PLT',
                                   'movsd\t%xmm0, -88(%rbp)',
                                   'call\trealtime@PLT',
                                   'movapd\t%xmm0, %xmm1',
                                   'movsd\tmm_realtime0(%rip), %xmm0',
                                   'subsd\t%xmm0, %xmm1',
                                   'movapd\t%xmm1, %xmm0',
                                   'movsd\t-88(%rbp), %xmm4',
                                   'divsd\t%xmm0, %xmm4',
                                   'movsd\t%xmm4, -88(%rbp)',
                                   'call\trealtime@PLT',
                                   'movapd\t%xmm0, %xmm1',
                                   'movsd\tmm_realtime0(%rip), %xmm0',
                                   'movapd\t%xmm1, %xmm5',
                                   'subsd\t%xmm0, %xmm5',
                                   'movapd\t%xmm5, %xmm0',
                                   'movq\tstderr(%rip), %rax',
                                   'movsd\t-88(%rbp), %xmm1',
                                   'leaq\t__func__.4979(%rip), %rdx',
                                   'leaq\t.LC14(%rip), %rsi',
                                   'movq\t%rax, %rdi',
                                   'movl\t$2, %eax',
                                   'call\tfprintf@PLT',
                                   '.L261:',
                                   'movq\t-16(%rbp), %rax',
                                   '.L262:',
                                   'movq\t-8(%rbp), %rcx',
                                   'xorq\t%fs:40, %rcx',
                                   'je\t.L263',
                                   'call\t__stack_chk_fail@PLT',
                                   '.L263:',
                                   'leave',
                                   '.cfi_def_cfa 7, 8',
                                   'ret',
                                   '.cfi_endproc',
                                   '.LFE36:',
                                   '.size\tmm_idx_gen, .-mm_idx_gen',
                                   '.globl\tmm_idx_build',
                                   '.type\tmm_idx_build, @function']},
 'mm_idx_cal_max_occ:': {'code': ['.LFB31:',
                                  '.cfi_startproc',
                                  'pushq\t%rbp',
                                  '.cfi_def_cfa_offset 16',
                                  '.cfi_offset 6, -16',
                                  'movq\t%rsp, %rbp',
                                  '.cfi_def_cfa_register 6',
                                  'subq\t$64, %rsp',
                                  'movq\t%rdi, -56(%rbp)',
                                  'movss\t%xmm0, -60(%rbp)',
                                  'movq\t$0, -24(%rbp)',
                                  'pxor\t%xmm0, %xmm0',
                                  'ucomiss\t-60(%rbp), %xmm0',
                                  'jb\t.L199',
                                  'movl\t$2147483647, %eax',
                                  'jmp\t.L182',
                                  '.L199:',
                                  'movl\t$0, -36(%rbp)',
                                  'jmp\t.L183',
                                  '.L185:',
                                  'movq\t-56(%rbp), %rax',
                                  'movq\t40(%rax), %rcx',
                                  'movl\t-36(%rbp), %eax',
                                  'movslq\t%eax, %rdx',
                                  'movq\t%rdx, %rax',
                                  'addq\t%rax, %rax',
                                  'addq\t%rdx, %rax',
                                  'salq\t$4, %rax',
                                  'addq\t%rcx, %rax',
                                  'movq\t40(%rax), %rax',
                                  'testq\t%rax, %rax',
                                  'je\t.L184',
                                  'movq\t-56(%rbp), %rax',
                                  'movq\t40(%rax), %rcx',
                                  'movl\t-36(%rbp), %eax',
                                  'movslq\t%eax, %rdx',
                                  'movq\t%rdx, %rax',
                                  'addq\t%rax, %rax',
                                  'addq\t%rdx, %rax',
                                  'salq\t$4, %rax',
                                  'addq\t%rcx, %rax',
                                  'movq\t40(%rax), %rax',
                                  'movl\t4(%rax), %eax',
                                  'movl\t%eax, %eax',
                                  'addq\t%rax, -24(%rbp)',
                                  '.L184:',
                                  'addl\t$1, -36(%rbp)',
                                  '.L183:',
                                  'movq\t-56(%rbp), %rax',
                                  'movl\t(%rax), %eax',
                                  'movl\t$1, %edx',
                                  'movl\t%eax, %ecx',
                                  'sall\t%cl, %edx',
                                  'movl\t%edx, %eax',
                                  'cmpl\t%eax, -36(%rbp)',
                                  'jl\t.L185',
                                  'movq\t-24(%rbp), %rax',
                                  'salq\t$2, %rax',
                                  'movq\t%rax, %rdi',
                                  'call\tmalloc@PLT',
                                  'movq\t%rax, -16(%rbp)',
                                  'movq\t$0, -24(%rbp)',
                                  'movl\t$0, -36(%rbp)',
                                  'jmp\t.L186',
                                  '.L195:',
                                  'movq\t-56(%rbp), %rax',
                                  'movq\t40(%rax), %rcx',
                                  'movl\t-36(%rbp), %eax',
                                  'movslq\t%eax, %rdx',
                                  'movq\t%rdx, %rax',
                                  'addq\t%rax, %rax',
                                  'addq\t%rdx, %rax',
                                  'salq\t$4, %rax',
                                  'addq\t%rcx, %rax',
                                  'movq\t40(%rax), %rax',
                                  'movq\t%rax, -8(%rbp)',
                                  'cmpq\t$0, -8(%rbp)',
                                  'je\t.L200',
                                  'movl\t$0, -32(%rbp)',
                                  'jmp\t.L189',
                                  '.L194:',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t16(%rax), %rax',
                                  'movl\t-32(%rbp), %edx',
                                  'shrl\t$4, %edx',
                                  'movl\t%edx, %edx',
                                  'salq\t$2, %rdx',
                                  'addq\t%rdx, %rax',
                                  'movl\t(%rax), %edx',
                                  'movl\t-32(%rbp), %eax',
                                  'addl\t%eax, %eax',
                                  'andl\t$30, %eax',
                                  'movl\t%eax, %ecx',
                                  'shrl\t%cl, %edx',
                                  'movl\t%edx, %eax',
                                  'andl\t$3, %eax',
                                  'testl\t%eax, %eax',
                                  'jne\t.L201',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t24(%rax), %rax',
                                  'movl\t-32(%rbp), %edx',
                                  'salq\t$3, %rdx',
                                  'addq\t%rdx, %rax',
                                  'movq\t(%rax), %rax',
                                  'andl\t$1, %eax',
                                  'testq\t%rax, %rax',
                                  'jne\t.L192',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t32(%rax), %rax',
                                  'movl\t-32(%rbp), %edx',
                                  'salq\t$3, %rdx',
                                  'addq\t%rdx, %rax',
                                  'movq\t(%rax), %rax',
                                  'movl\t%eax, %ecx',
                                  'jmp\t.L193',
                                  '.L192:',
                                  'movl\t$1, %ecx',
                                  '.L193:',
                                  'movq\t-24(%rbp), %rax',
                                  'leaq\t1(%rax), %rdx',
                                  'movq\t%rdx, -24(%rbp)',
                                  'leaq\t0(,%rax,4), %rdx',
                                  'movq\t-16(%rbp), %rax',
                                  'addq\t%rdx, %rax',
                                  'movl\t%ecx, (%rax)',
                                  'jmp\t.L191',
                                  '.L201:',
                                  'nop',
                                  '.L191:',
                                  'addl\t$1, -32(%rbp)',
                                  '.L189:',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t(%rax), %eax',
                                  'cmpl\t%eax, -32(%rbp)',
                                  'jb\t.L194',
                                  'jmp\t.L188',
                                  '.L200:',
                                  'nop',
                                  '.L188:',
                                  'addl\t$1, -36(%rbp)',
                                  '.L186:',
                                  'movq\t-56(%rbp), %rax',
                                  'movl\t(%rax), %eax',
                                  'movl\t$1, %edx',
                                  'movl\t%eax, %ecx',
                                  'sall\t%cl, %edx',
                                  'movl\t%edx, %eax',
                                  'cmpl\t%eax, -36(%rbp)',
                                  'jl\t.L195',
                                  'cvtss2sd\t-60(%rbp), %xmm0',
                                  'movsd\t.LC7(%rip), %xmm1',
                                  'subsd\t%xmm0, %xmm1',
                                  'movq\t-24(%rbp), %rax',
                                  'testq\t%rax, %rax',
                                  'js\t.L196',
                                  'cvtsi2sdq\t%rax, %xmm0',
                                  'jmp\t.L197',
                                  '.L196:',
                                  'movq\t%rax, %rdx',
                                  'shrq\t%rdx',
                                  'andl\t$1, %eax',
                                  'orq\t%rax, %rdx',
                                  'cvtsi2sdq\t%rdx, %xmm0',
                                  'addsd\t%xmm0, %xmm0',
                                  '.L197:',
                                  'mulsd\t%xmm1, %xmm0',
                                  'cvttsd2siq\t%xmm0, %rax',
                                  'movl\t%eax, %edx',
                                  'movq\t-16(%rbp), %rcx',
                                  'movq\t-24(%rbp), %rax',
                                  'movq\t%rcx, %rsi',
                                  'movq\t%rax, %rdi',
                                  'call\tks_ksmall_uint32_t@PLT',
                                  'addl\t$1, %eax',
                                  'movl\t%eax, -28(%rbp)',
                                  'movq\t-16(%rbp), %rax',
                                  'movq\t%rax, %rdi',
                                  'call\tfree@PLT',
                                  'movl\t-28(%rbp), %eax',
                                  '.L182:',
                                  'leave',
                                  '.cfi_def_cfa 7, 8',
                                  'ret',
                                  '.cfi_endproc',
                                  '.LFE31:',
                                  '.size\tmm_idx_cal_max_occ, '
                                  '.-mm_idx_cal_max_occ',
                                  '.section\t.rodata',
                                  '.LC8:',
                                  '.string\t"index.c"',
                                  '.LC9:',
                                  '.string\t"absent && j == start_a + n"',
                                  '.LC10:',
                                  '.string\t"b->n == (int32_t)start_p"',
                                  '.text',
                                  '.type\tworker_post, @function'],
                         'fCalled': ['malloc@PLT:',
                                     'ks_ksmall_uint32_t@PLT:',
                                     'free@PLT:'],
                         'fNames': []},
 'mm_idx_destroy:': {'code': ['.LFB25:',
                              '.cfi_startproc',
                              'pushq\t%rbp',
                              '.cfi_def_cfa_offset 16',
                              '.cfi_offset 6, -16',
                              'movq\t%rsp, %rbp',
                              '.cfi_def_cfa_register 6',
                              'subq\t$32, %rsp',
                              'movq\t%rdi, -24(%rbp)',
                              'cmpq\t$0, -24(%rbp)',
                              'je\t.L129',
                              'movq\t-24(%rbp), %rax',
                              'movq\t64(%rax), %rax',
                              'testq\t%rax, %rax',
                              'je\t.L118',
                              'movq\t-24(%rbp), %rax',
                              'movq\t64(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tkh_destroy_str',
                              '.L118:',
                              'movq\t-24(%rbp), %rax',
                              'movq\t40(%rax), %rax',
                              'testq\t%rax, %rax',
                              'je\t.L119',
                              'movl\t$0, -4(%rbp)',
                              'jmp\t.L120',
                              '.L121:',
                              'movq\t-24(%rbp), %rax',
                              'movq\t40(%rax), %rcx',
                              'movl\t-4(%rbp), %edx',
                              'movq\t%rdx, %rax',
                              'addq\t%rax, %rax',
                              'addq\t%rdx, %rax',
                              'salq\t$4, %rax',
                              'addq\t%rcx, %rax',
                              'movq\t32(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tfree@PLT',
                              'movq\t-24(%rbp), %rax',
                              'movq\t40(%rax), %rcx',
                              'movl\t-4(%rbp), %edx',
                              'movq\t%rdx, %rax',
                              'addq\t%rax, %rax',
                              'addq\t%rdx, %rax',
                              'salq\t$4, %rax',
                              'addq\t%rcx, %rax',
                              'movq\t16(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tfree@PLT',
                              'movq\t-24(%rbp), %rax',
                              'movq\t40(%rax), %rcx',
                              'movl\t-4(%rbp), %edx',
                              'movq\t%rdx, %rax',
                              'addq\t%rax, %rax',
                              'addq\t%rdx, %rax',
                              'salq\t$4, %rax',
                              'addq\t%rcx, %rax',
                              'movq\t40(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tkh_destroy_idx',
                              'addl\t$1, -4(%rbp)',
                              '.L120:',
                              'movq\t-24(%rbp), %rax',
                              'movl\t(%rax), %eax',
                              'movl\t$1, %edx',
                              'movl\t%eax, %ecx',
                              'sall\t%cl, %edx',
                              'movl\t%edx, %eax',
                              'cmpl\t%eax, -4(%rbp)',
                              'jb\t.L121',
                              '.L119:',
                              'movq\t-24(%rbp), %rax',
                              'movq\t48(%rax), %rax',
                              'testq\t%rax, %rax',
                              'je\t.L122',
                              'movl\t$0, -4(%rbp)',
                              'jmp\t.L123',
                              '.L124:',
                              'movq\t-24(%rbp), %rax',
                              'movq\t48(%rax), %rax',
                              'movl\t-4(%rbp), %edx',
                              'salq\t$4, %rdx',
                              'addq\t%rdx, %rax',
                              'movq\t8(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tfree@PLT',
                              'addl\t$1, -4(%rbp)',
                              '.L123:',
                              'movq\t-24(%rbp), %rax',
                              'movl\t16(%rax), %eax',
                              'cmpl\t%eax, -4(%rbp)',
                              'jb\t.L124',
                              'movq\t-24(%rbp), %rax',
                              'movq\t48(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tfree@PLT',
                              '.L122:',
                              'movq\t-24(%rbp), %rax',
                              'movq\t56(%rax), %rax',
                              'testq\t%rax, %rax',
                              'jne\t.L125',
                              'movl\t$0, -4(%rbp)',
                              'jmp\t.L126',
                              '.L127:',
                              'movq\t-24(%rbp), %rax',
                              'movq\t24(%rax), %rcx',
                              'movl\t-4(%rbp), %edx',
                              'movq\t%rdx, %rax',
                              'addq\t%rax, %rax',
                              'addq\t%rdx, %rax',
                              'salq\t$3, %rax',
                              'addq\t%rcx, %rax',
                              'movq\t(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tfree@PLT',
                              'addl\t$1, -4(%rbp)',
                              '.L126:',
                              'movq\t-24(%rbp), %rax',
                              'movl\t16(%rax), %eax',
                              'cmpl\t%eax, -4(%rbp)',
                              'jb\t.L127',
                              'movq\t-24(%rbp), %rax',
                              'movq\t24(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tfree@PLT',
                              'jmp\t.L128',
                              '.L125:',
                              'movq\t-24(%rbp), %rax',
                              'movq\t56(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tkm_destroy@PLT',
                              '.L128:',
                              'movq\t-24(%rbp), %rax',
                              'movq\t40(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tfree@PLT',
                              'movq\t-24(%rbp), %rax',
                              'movq\t32(%rax), %rax',
                              'movq\t%rax, %rdi',
                              'call\tfree@PLT',
                              'movq\t-24(%rbp), %rax',
                              'movq\t%rax, %rdi',
                              'call\tfree@PLT',
                              'jmp\t.L115',
                              '.L129:',
                              'nop',
                              '.L115:',
                              'leave',
                              '.cfi_def_cfa 7, 8',
                              'ret',
                              '.cfi_endproc',
                              '.LFE25:',
                              '.size\tmm_idx_destroy, .-mm_idx_destroy',
                              '.globl\tmm_idx_get',
                              '.type\tmm_idx_get, @function'],
                     'fCalled': ['kh_destroy_str:',
                                 'free@PLT:',
                                 'free@PLT:',
                                 'kh_destroy_idx:',
                                 'free@PLT:',
                                 'free@PLT:',
                                 'free@PLT:',
                                 'free@PLT:',
                                 'km_destroy@PLT:',
                                 'free@PLT:',
                                 'free@PLT:',
                                 'free@PLT:'],
                     'fNames': ['kh_destroy_str:', 'kh_destroy_idx:'],
                     'kh_destroy_idx:': ['.file\t"index.c"',
                                         '.text',
                                         '.section\t.rodata',
                                         '.align 8',
                                         '.type\t__ac_HASH_UPPER, @object',
                                         '.size\t__ac_HASH_UPPER, 8'],
                     'kh_destroy_str:': ['.LFB18:',
                                         '.cfi_startproc',
                                         'pushq\t%rbp',
                                         '.cfi_def_cfa_offset 16',
                                         '.cfi_offset 6, -16',
                                         'movq\t%rsp, %rbp',
                                         '.cfi_def_cfa_register 6',
                                         'subq\t$16, %rsp',
                                         'movq\t%rdi, -8(%rbp)',
                                         'cmpq\t$0, -8(%rbp)',
                                         'je\t.L62',
                                         'movq\t-8(%rbp), %rax',
                                         'movq\t24(%rax), %rax',
                                         'movq\t%rax, %rsi',
                                         'movl\t$0, %edi',
                                         'call\tkfree@PLT',
                                         'movq\t-8(%rbp), %rax',
                                         'movq\t16(%rax), %rax',
                                         'movq\t%rax, %rsi',
                                         'movl\t$0, %edi',
                                         'call\tkfree@PLT',
                                         'movq\t-8(%rbp), %rax',
                                         'movq\t32(%rax), %rax',
                                         'movq\t%rax, %rsi',
                                         'movl\t$0, %edi',
                                         'call\tkfree@PLT',
                                         'movq\t-8(%rbp), %rax',
                                         'movq\t%rax, %rsi',
                                         'movl\t$0, %edi',
                                         'call\tkfree@PLT',
                                         '.L62:',
                                         'nop',
                                         'leave',
                                         '.cfi_def_cfa 7, 8',
                                         'ret',
                                         '.cfi_endproc',
                                         '.LFE18:',
                                         '.size\tkh_destroy_str, '
                                         '.-kh_destroy_str',
                                         '.type\tkh_get_str, @function']},
 'mm_idx_dump:': {'code': ['.LFB39:',
                           '.cfi_startproc',
                           'pushq\t%rbp',
                           '.cfi_def_cfa_offset 16',
                           '.cfi_offset 6, -16',
                           'movq\t%rsp, %rbp',
                           '.cfi_def_cfa_register 6',
                           'subq\t$112, %rsp',
                           'movq\t%rdi, -104(%rbp)',
                           'movq\t%rsi, -112(%rbp)',
                           'movq\t%fs:40, %rax',
                           'movq\t%rax, -8(%rbp)',
                           'xorl\t%eax, %eax',
                           'movq\t$0, -72(%rbp)',
                           'movq\t-112(%rbp), %rax',
                           'movl\t4(%rax), %eax',
                           'movl\t%eax, -32(%rbp)',
                           'movq\t-112(%rbp), %rax',
                           'movl\t8(%rax), %eax',
                           'movl\t%eax, -28(%rbp)',
                           'movq\t-112(%rbp), %rax',
                           'movl\t(%rax), %eax',
                           'movl\t%eax, -24(%rbp)',
                           'movq\t-112(%rbp), %rax',
                           'movl\t16(%rax), %eax',
                           'movl\t%eax, -20(%rbp)',
                           'movq\t-112(%rbp), %rax',
                           'movl\t12(%rax), %eax',
                           'movl\t%eax, -16(%rbp)',
                           'movq\t-104(%rbp), %rax',
                           'movq\t%rax, %rcx',
                           'movl\t$4, %edx',
                           'movl\t$1, %esi',
                           'leaq\t.LC16(%rip), %rdi',
                           'call\tfwrite@PLT',
                           'movq\t-104(%rbp), %rdx',
                           'leaq\t-32(%rbp), %rax',
                           'movq\t%rdx, %rcx',
                           'movl\t$5, %edx',
                           'movl\t$4, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfwrite@PLT',
                           'movl\t$0, -80(%rbp)',
                           'jmp\t.L285',
                           '.L288:',
                           'movq\t-112(%rbp), %rax',
                           'movq\t24(%rax), %rcx',
                           'movl\t-80(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$3, %rax',
                           'addq\t%rcx, %rax',
                           'movq\t(%rax), %rax',
                           'testq\t%rax, %rax',
                           'je\t.L286',
                           'movq\t-112(%rbp), %rax',
                           'movq\t24(%rax), %rcx',
                           'movl\t-80(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$3, %rax',
                           'addq\t%rcx, %rax',
                           'movq\t(%rax), %rax',
                           'movq\t%rax, %rdi',
                           'call\tstrlen@PLT',
                           'movb\t%al, -84(%rbp)',
                           'movq\t-104(%rbp), %rdx',
                           'leaq\t-84(%rbp), %rax',
                           'movq\t%rdx, %rcx',
                           'movl\t$1, %edx',
                           'movl\t$1, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfwrite@PLT',
                           'movzbl\t-84(%rbp), %eax',
                           'movzbl\t%al, %esi',
                           'movq\t-112(%rbp), %rax',
                           'movq\t24(%rax), %rcx',
                           'movl\t-80(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$3, %rax',
                           'addq\t%rcx, %rax',
                           'movq\t(%rax), %rax',
                           'movq\t-104(%rbp), %rdx',
                           'movq\t%rdx, %rcx',
                           'movq\t%rsi, %rdx',
                           'movl\t$1, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfwrite@PLT',
                           'jmp\t.L287',
                           '.L286:',
                           'movb\t$0, -84(%rbp)',
                           'movq\t-104(%rbp), %rdx',
                           'leaq\t-84(%rbp), %rax',
                           'movq\t%rdx, %rcx',
                           'movl\t$1, %edx',
                           'movl\t$1, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfwrite@PLT',
                           '.L287:',
                           'movq\t-112(%rbp), %rax',
                           'movq\t24(%rax), %rcx',
                           'movl\t-80(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$3, %rax',
                           'addq\t%rcx, %rax',
                           'leaq\t16(%rax), %rdi',
                           'movq\t-104(%rbp), %rax',
                           'movq\t%rax, %rcx',
                           'movl\t$1, %edx',
                           'movl\t$4, %esi',
                           'call\tfwrite@PLT',
                           'movq\t-112(%rbp), %rax',
                           'movq\t24(%rax), %rcx',
                           'movl\t-80(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$3, %rax',
                           'addq\t%rcx, %rax',
                           'movl\t16(%rax), %eax',
                           'movl\t%eax, %eax',
                           'addq\t%rax, -72(%rbp)',
                           'addl\t$1, -80(%rbp)',
                           '.L285:',
                           'movq\t-112(%rbp), %rax',
                           'movl\t16(%rax), %eax',
                           'cmpl\t%eax, -80(%rbp)',
                           'jb\t.L288',
                           'movl\t$0, -80(%rbp)',
                           'jmp\t.L289',
                           '.L298:',
                           'movq\t-112(%rbp), %rax',
                           'movq\t40(%rax), %rcx',
                           'movl\t-80(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$4, %rax',
                           'addq\t%rcx, %rax',
                           'movq\t%rax, -64(%rbp)',
                           'movq\t-64(%rbp), %rax',
                           'movq\t40(%rax), %rax',
                           'movq\t%rax, -56(%rbp)',
                           'cmpq\t$0, -56(%rbp)',
                           'je\t.L290',
                           'movq\t-56(%rbp), %rax',
                           'movl\t4(%rax), %eax',
                           'jmp\t.L291',
                           '.L290:',
                           'movl\t$0, %eax',
                           '.L291:',
                           'movl\t%eax, -84(%rbp)',
                           'movq\t-64(%rbp), %rax',
                           'leaq\t24(%rax), %rdi',
                           'movq\t-104(%rbp), %rax',
                           'movq\t%rax, %rcx',
                           'movl\t$1, %edx',
                           'movl\t$4, %esi',
                           'call\tfwrite@PLT',
                           'movq\t-64(%rbp), %rax',
                           'movl\t24(%rax), %eax',
                           'movslq\t%eax, %rdx',
                           'movq\t-64(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movq\t-104(%rbp), %rcx',
                           'movl\t$8, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfwrite@PLT',
                           'movq\t-104(%rbp), %rdx',
                           'leaq\t-84(%rbp), %rax',
                           'movq\t%rdx, %rcx',
                           'movl\t$1, %edx',
                           'movl\t$4, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfwrite@PLT',
                           'movl\t-84(%rbp), %eax',
                           'testl\t%eax, %eax',
                           'je\t.L301',
                           'movl\t$0, -76(%rbp)',
                           'jmp\t.L294',
                           '.L297:',
                           'movq\t-56(%rbp), %rax',
                           'movq\t16(%rax), %rax',
                           'movl\t-76(%rbp), %edx',
                           'shrl\t$4, %edx',
                           'movl\t%edx, %edx',
                           'salq\t$2, %rdx',
                           'addq\t%rdx, %rax',
                           'movl\t(%rax), %edx',
                           'movl\t-76(%rbp), %eax',
                           'addl\t%eax, %eax',
                           'andl\t$30, %eax',
                           'movl\t%eax, %ecx',
                           'shrl\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'andl\t$3, %eax',
                           'testl\t%eax, %eax',
                           'jne\t.L302',
                           'movq\t-56(%rbp), %rax',
                           'movq\t24(%rax), %rax',
                           'movl\t-76(%rbp), %edx',
                           'salq\t$3, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t(%rax), %rax',
                           'movq\t%rax, -48(%rbp)',
                           'movq\t-56(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movl\t-76(%rbp), %edx',
                           'salq\t$3, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t(%rax), %rax',
                           'movq\t%rax, -40(%rbp)',
                           'movq\t-104(%rbp), %rdx',
                           'leaq\t-48(%rbp), %rax',
                           'movq\t%rdx, %rcx',
                           'movl\t$2, %edx',
                           'movl\t$8, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfwrite@PLT',
                           'jmp\t.L296',
                           '.L302:',
                           'nop',
                           '.L296:',
                           'addl\t$1, -76(%rbp)',
                           '.L294:',
                           'movq\t-56(%rbp), %rax',
                           'movl\t(%rax), %eax',
                           'cmpl\t%eax, -76(%rbp)',
                           'jb\t.L297',
                           'jmp\t.L293',
                           '.L301:',
                           'nop',
                           '.L293:',
                           'addl\t$1, -80(%rbp)',
                           '.L289:',
                           'movq\t-112(%rbp), %rax',
                           'movl\t(%rax), %eax',
                           'movl\t$1, %edx',
                           'movl\t%eax, %ecx',
                           'sall\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'cmpl\t%eax, -80(%rbp)',
                           'jb\t.L298',
                           'movq\t-112(%rbp), %rax',
                           'movl\t12(%rax), %eax',
                           'andl\t$2, %eax',
                           'testl\t%eax, %eax',
                           'jne\t.L299',
                           'movq\t-72(%rbp), %rax',
                           'addq\t$7, %rax',
                           'shrq\t$3, %rax',
                           'movq\t%rax, %rsi',
                           'movq\t-112(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movq\t-104(%rbp), %rdx',
                           'movq\t%rdx, %rcx',
                           'movq\t%rsi, %rdx',
                           'movl\t$4, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfwrite@PLT',
                           '.L299:',
                           'movq\t-104(%rbp), %rax',
                           'movq\t%rax, %rdi',
                           'call\tfflush@PLT',
                           'nop',
                           'movq\t-8(%rbp), %rax',
                           'xorq\t%fs:40, %rax',
                           'je\t.L300',
                           'call\t__stack_chk_fail@PLT',
                           '.L300:',
                           'leave',
                           '.cfi_def_cfa 7, 8',
                           'ret',
                           '.cfi_endproc',
                           '.LFE39:',
                           '.size\tmm_idx_dump, .-mm_idx_dump',
                           '.globl\tmm_idx_load',
                           '.type\tmm_idx_load, @function'],
                  'fCalled': ['fwrite@PLT:',
                              'fwrite@PLT:',
                              'strlen@PLT:',
                              'fwrite@PLT:',
                              'fwrite@PLT:',
                              'fwrite@PLT:',
                              'fwrite@PLT:',
                              'fwrite@PLT:',
                              'fwrite@PLT:',
                              'fwrite@PLT:',
                              'fwrite@PLT:',
                              'fwrite@PLT:',
                              'fflush@PLT:',
                              '__stack_chk_fail@PLT:'],
                  'fNames': []},
 'mm_idx_gen:': {'code': ['.LFB36:',
                          '.cfi_startproc',
                          'pushq\t%rbp',
                          '.cfi_def_cfa_offset 16',
                          '.cfi_offset 6, -16',
                          'movq\t%rsp, %rbp',
                          '.cfi_def_cfa_register 6',
                          'subq\t$96, %rsp',
                          'movq\t%rdi, -56(%rbp)',
                          'movl\t%esi, -60(%rbp)',
                          'movl\t%edx, -64(%rbp)',
                          'movl\t%ecx, -68(%rbp)',
                          'movl\t%r8d, -72(%rbp)',
                          'movl\t%r9d, -76(%rbp)',
                          'movq\t%fs:40, %rax',
                          'movq\t%rax, -8(%rbp)',
                          'xorl\t%eax, %eax',
                          'cmpq\t$0, -56(%rbp)',
                          'je\t.L257',
                          'movq\t-56(%rbp), %rax',
                          'movq\t%rax, %rdi',
                          'call\tmm_bseq_eof@PLT',
                          'testl\t%eax, %eax',
                          'je\t.L258',
                          '.L257:',
                          'movl\t$0, %eax',
                          'jmp\t.L262',
                          '.L258:',
                          'leaq\t-48(%rbp), %rax',
                          'movl\t$40, %edx',
                          'movl\t$0, %esi',
                          'movq\t%rax, %rdi',
                          'call\tmemset@PLT',
                          'movl\t-76(%rbp), %eax',
                          'cltq',
                          'cmpq\t%rax, 24(%rbp)',
                          'cmovbe\t24(%rbp), %rax',
                          'movl\t%eax, -48(%rbp)',
                          'movq\t24(%rbp), %rax',
                          'movq\t%rax, -40(%rbp)',
                          'movq\t-56(%rbp), %rax',
                          'movq\t%rax, -24(%rbp)',
                          'movl\t-72(%rbp), %ecx',
                          'movl\t-68(%rbp), %edx',
                          'movl\t-64(%rbp), %esi',
                          'movl\t-60(%rbp), %eax',
                          'movl\t%eax, %edi',
                          'call\tmm_idx_init',
                          'movq\t%rax, -16(%rbp)',
                          'movl\t$3, %eax',
                          'cmpl\t$3, 16(%rbp)',
                          'cmovle\t16(%rbp), %eax',
                          'leaq\t-48(%rbp), %rdx',
                          'movl\t$3, %ecx',
                          'leaq\tworker_pipeline(%rip), %rsi',
                          'movl\t%eax, %edi',
                          'call\tkt_pipeline@PLT',
                          'movl\tmm_verbose(%rip), %eax',
                          'cmpl\t$2, %eax',
                          'jle\t.L260',
                          'call\tcputime@PLT',
                          'movsd\t%xmm0, -88(%rbp)',
                          'call\trealtime@PLT',
                          'movapd\t%xmm0, %xmm1',
                          'movsd\tmm_realtime0(%rip), %xmm0',
                          'subsd\t%xmm0, %xmm1',
                          'movapd\t%xmm1, %xmm0',
                          'movsd\t-88(%rbp), %xmm2',
                          'divsd\t%xmm0, %xmm2',
                          'movsd\t%xmm2, -88(%rbp)',
                          'call\trealtime@PLT',
                          'movapd\t%xmm0, %xmm1',
                          'movsd\tmm_realtime0(%rip), %xmm0',
                          'movapd\t%xmm1, %xmm3',
                          'subsd\t%xmm0, %xmm3',
                          'movapd\t%xmm3, %xmm0',
                          'movq\tstderr(%rip), %rax',
                          'movsd\t-88(%rbp), %xmm1',
                          'leaq\t__func__.4979(%rip), %rdx',
                          'leaq\t.LC13(%rip), %rsi',
                          'movq\t%rax, %rdi',
                          'movl\t$2, %eax',
                          'call\tfprintf@PLT',
                          '.L260:',
                          'movq\t-16(%rbp), %rax',
                          'movl\t16(%rbp), %esi',
                          'movq\t%rax, %rdi',
                          'call\tmm_idx_post',
                          'movl\tmm_verbose(%rip), %eax',
                          'cmpl\t$2, %eax',
                          'jle\t.L261',
                          'call\tcputime@PLT',
                          'movsd\t%xmm0, -88(%rbp)',
                          'call\trealtime@PLT',
                          'movapd\t%xmm0, %xmm1',
                          'movsd\tmm_realtime0(%rip), %xmm0',
                          'subsd\t%xmm0, %xmm1',
                          'movapd\t%xmm1, %xmm0',
                          'movsd\t-88(%rbp), %xmm4',
                          'divsd\t%xmm0, %xmm4',
                          'movsd\t%xmm4, -88(%rbp)',
                          'call\trealtime@PLT',
                          'movapd\t%xmm0, %xmm1',
                          'movsd\tmm_realtime0(%rip), %xmm0',
                          'movapd\t%xmm1, %xmm5',
                          'subsd\t%xmm0, %xmm5',
                          'movapd\t%xmm5, %xmm0',
                          'movq\tstderr(%rip), %rax',
                          'movsd\t-88(%rbp), %xmm1',
                          'leaq\t__func__.4979(%rip), %rdx',
                          'leaq\t.LC14(%rip), %rsi',
                          'movq\t%rax, %rdi',
                          'movl\t$2, %eax',
                          'call\tfprintf@PLT',
                          '.L261:',
                          'movq\t-16(%rbp), %rax',
                          '.L262:',
                          'movq\t-8(%rbp), %rcx',
                          'xorq\t%fs:40, %rcx',
                          'je\t.L263',
                          'call\t__stack_chk_fail@PLT',
                          '.L263:',
                          'leave',
                          '.cfi_def_cfa 7, 8',
                          'ret',
                          '.cfi_endproc',
                          '.LFE36:',
                          '.size\tmm_idx_gen, .-mm_idx_gen',
                          '.globl\tmm_idx_build',
                          '.type\tmm_idx_build, @function'],
                 'fCalled': ['mm_bseq_eof@PLT:',
                             'memset@PLT:',
                             'mm_idx_init:',
                             'kt_pipeline@PLT:',
                             'cputime@PLT:',
                             'realtime@PLT:',
                             'realtime@PLT:',
                             'fprintf@PLT:',
                             'mm_idx_post:',
                             'cputime@PLT:',
                             'realtime@PLT:',
                             'realtime@PLT:',
                             'fprintf@PLT:',
                             '__stack_chk_fail@PLT:'],
                 'fNames': ['mm_idx_init:', 'mm_idx_post:'],
                 'mm_idx_init:': ['.LFB24:',
                                  '.cfi_startproc',
                                  'pushq\t%rbp',
                                  '.cfi_def_cfa_offset 16',
                                  '.cfi_offset 6, -16',
                                  'movq\t%rsp, %rbp',
                                  '.cfi_def_cfa_register 6',
                                  'subq\t$32, %rsp',
                                  'movl\t%edi, -20(%rbp)',
                                  'movl\t%esi, -24(%rbp)',
                                  'movl\t%edx, -28(%rbp)',
                                  'movl\t%ecx, -32(%rbp)',
                                  'movl\t-24(%rbp), %eax',
                                  'addl\t%eax, %eax',
                                  'cmpl\t%eax, -28(%rbp)',
                                  'jle\t.L111',
                                  'movl\t-24(%rbp), %eax',
                                  'addl\t%eax, %eax',
                                  'movl\t%eax, -28(%rbp)',
                                  '.L111:',
                                  'cmpl\t$0, -20(%rbp)',
                                  'jg\t.L112',
                                  'movl\t$1, -20(%rbp)',
                                  '.L112:',
                                  'movl\t$72, %esi',
                                  'movl\t$1, %edi',
                                  'call\tcalloc@PLT',
                                  'movq\t%rax, -8(%rbp)',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t-20(%rbp), %edx',
                                  'movl\t%edx, 4(%rax)',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t-24(%rbp), %edx',
                                  'movl\t%edx, 8(%rax)',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t-28(%rbp), %edx',
                                  'movl\t%edx, (%rax)',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t-32(%rbp), %edx',
                                  'movl\t%edx, 12(%rax)',
                                  'movl\t-28(%rbp), %eax',
                                  'movl\t$1, %edx',
                                  'movl\t%eax, %ecx',
                                  'sall\t%cl, %edx',
                                  'movl\t%edx, %eax',
                                  'cltq',
                                  'movl\t$48, %esi',
                                  'movq\t%rax, %rdi',
                                  'call\tcalloc@PLT',
                                  'movq\t%rax, %rdx',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t%rdx, 40(%rax)',
                                  'movl\tmm_dbg_flag(%rip), %eax',
                                  'andl\t$1, %eax',
                                  'testl\t%eax, %eax',
                                  'jne\t.L113',
                                  'call\tkm_init@PLT',
                                  'movq\t%rax, %rdx',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t%rdx, 56(%rax)',
                                  '.L113:',
                                  'movq\t-8(%rbp), %rax',
                                  'leave',
                                  '.cfi_def_cfa 7, 8',
                                  'ret',
                                  '.cfi_endproc',
                                  '.LFE24:',
                                  '.size\tmm_idx_init, .-mm_idx_init',
                                  '.globl\tmm_idx_destroy',
                                  '.type\tmm_idx_destroy, @function'],
                 'mm_idx_post:': ['.file\t"index.c"',
                                  '.text',
                                  '.section\t.rodata',
                                  '.align 8',
                                  '.type\t__ac_HASH_UPPER, @object',
                                  '.size\t__ac_HASH_UPPER, 8']},
 'mm_idx_get:': {'code': ['.LFB26:',
                          '.cfi_startproc',
                          'pushq\t%rbp',
                          '.cfi_def_cfa_offset 16',
                          '.cfi_offset 6, -16',
                          'movq\t%rsp, %rbp',
                          '.cfi_def_cfa_register 6',
                          'subq\t$56, %rsp',
                          'movq\t%rdi, -40(%rbp)',
                          'movq\t%rsi, -48(%rbp)',
                          'movq\t%rdx, -56(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'movl\t$1, %edx',
                          'movl\t%eax, %ecx',
                          'sall\t%cl, %edx',
                          'movl\t%edx, %eax',
                          'subl\t$1, %eax',
                          'movl\t%eax, -24(%rbp)',
                          'movq\t-40(%rbp), %rax',
                          'movq\t40(%rax), %rcx',
                          'movl\t-24(%rbp), %eax',
                          'cltq',
                          'andq\t-48(%rbp), %rax',
                          'movq\t%rax, %rdx',
                          'movq\t%rdx, %rax',
                          'addq\t%rax, %rax',
                          'addq\t%rdx, %rax',
                          'salq\t$4, %rax',
                          'addq\t%rcx, %rax',
                          'movq\t%rax, -16(%rbp)',
                          'movq\t-16(%rbp), %rax',
                          'movq\t40(%rax), %rax',
                          'movq\t%rax, -8(%rbp)',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$0, (%rax)',
                          'cmpq\t$0, -8(%rbp)',
                          'jne\t.L131',
                          'movl\t$0, %eax',
                          'jmp\t.L132',
                          '.L131:',
                          'movq\t-40(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'movq\t-48(%rbp), %rdx',
                          'movl\t%eax, %ecx',
                          'shrq\t%cl, %rdx',
                          'movq\t%rdx, %rax',
                          'leaq\t(%rax,%rax), %rdx',
                          'movq\t-8(%rbp), %rax',
                          'movq\t%rdx, %rsi',
                          'movq\t%rax, %rdi',
                          'call\tkh_get_idx',
                          'movl\t%eax, -20(%rbp)',
                          'movq\t-8(%rbp), %rax',
                          'movl\t(%rax), %eax',
                          'cmpl\t%eax, -20(%rbp)',
                          'jne\t.L133',
                          'movl\t$0, %eax',
                          'jmp\t.L132',
                          '.L133:',
                          'movq\t-8(%rbp), %rax',
                          'movq\t24(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'andl\t$1, %eax',
                          'testq\t%rax, %rax',
                          'je\t.L134',
                          'movq\t-56(%rbp), %rax',
                          'movl\t$1, (%rax)',
                          'movq\t-8(%rbp), %rax',
                          'movq\t32(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rdx, %rax',
                          'jmp\t.L132',
                          '.L134:',
                          'movq\t-8(%rbp), %rax',
                          'movq\t32(%rax), %rax',
                          'movl\t-20(%rbp), %edx',
                          'salq\t$3, %rdx',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'movl\t%eax, %edx',
                          'movq\t-56(%rbp), %rax',
                          'movl\t%edx, (%rax)',
                          'movq\t-16(%rbp), %rax',
                          'movq\t32(%rax), %rdx',
                          'movq\t-8(%rbp), %rax',
                          'movq\t32(%rax), %rax',
                          'movl\t-20(%rbp), %ecx',
                          'salq\t$3, %rcx',
                          'addq\t%rcx, %rax',
                          'movq\t(%rax), %rax',
                          'shrq\t$32, %rax',
                          'salq\t$3, %rax',
                          'addq\t%rdx, %rax',
                          '.L132:',
                          'leave',
                          '.cfi_def_cfa 7, 8',
                          'ret',
                          '.cfi_endproc',
                          '.LFE26:',
                          '.size\tmm_idx_get, .-mm_idx_get',
                          '.section\t.rodata',
                          '.align 8',
                          '.LC2:',
                          '.string\t"[M::%s] kmer size: %d; skip: %d; is_hpc: '
                          '%d; #seq: %d\\n"',
                          '.align 8',
                          '.LC4:',
                          '.string\t"[M::%s::%.3f*%.2f] distinct minimizers: '
                          '%d (%.2f%% are singletons); average occurrences: '
                          '%.3lf; average spacing: %.3lf\\n"',
                          '.text',
                          '.globl\tmm_idx_stat',
                          '.type\tmm_idx_stat, @function'],
                 'fCalled': ['kh_get_idx:'],
                 'fNames': ['kh_get_idx:'],
                 'kh_get_idx:': ['.LFB13:',
                                 '.cfi_startproc',
                                 'pushq\t%rbp',
                                 '.cfi_def_cfa_offset 16',
                                 '.cfi_offset 6, -16',
                                 'movq\t%rsp, %rbp',
                                 '.cfi_def_cfa_register 6',
                                 'movq\t%rdi, -40(%rbp)',
                                 'movq\t%rsi, -48(%rbp)',
                                 'movq\t-40(%rbp), %rax',
                                 'movl\t(%rax), %eax',
                                 'testl\t%eax, %eax',
                                 'je\t.L12',
                                 'movl\t$0, -16(%rbp)',
                                 'movq\t-40(%rbp), %rax',
                                 'movl\t(%rax), %eax',
                                 'subl\t$1, %eax',
                                 'movl\t%eax, -12(%rbp)',
                                 'movq\t-48(%rbp), %rax',
                                 'shrq\t%rax',
                                 'movl\t%eax, -8(%rbp)',
                                 'movl\t-8(%rbp), %eax',
                                 'andl\t-12(%rbp), %eax',
                                 'movl\t%eax, -20(%rbp)',
                                 'movl\t-20(%rbp), %eax',
                                 'movl\t%eax, -4(%rbp)',
                                 'jmp\t.L13',
                                 '.L16:',
                                 'addl\t$1, -16(%rbp)',
                                 'movl\t-16(%rbp), %edx',
                                 'movl\t-20(%rbp), %eax',
                                 'addl\t%edx, %eax',
                                 'andl\t-12(%rbp), %eax',
                                 'movl\t%eax, -20(%rbp)',
                                 'movl\t-20(%rbp), %eax',
                                 'cmpl\t-4(%rbp), %eax',
                                 'jne\t.L13',
                                 'movq\t-40(%rbp), %rax',
                                 'movl\t(%rax), %eax',
                                 'jmp\t.L14',
                                 '.L13:',
                                 'movq\t-40(%rbp), %rax',
                                 'movq\t16(%rax), %rax',
                                 'movl\t-20(%rbp), %edx',
                                 'shrl\t$4, %edx',
                                 'movl\t%edx, %edx',
                                 'salq\t$2, %rdx',
                                 'addq\t%rdx, %rax',
                                 'movl\t(%rax), %edx',
                                 'movl\t-20(%rbp), %eax',
                                 'addl\t%eax, %eax',
                                 'andl\t$30, %eax',
                                 'movl\t%eax, %ecx',
                                 'shrl\t%cl, %edx',
                                 'movl\t%edx, %eax',
                                 'andl\t$2, %eax',
                                 'testl\t%eax, %eax',
                                 'jne\t.L15',
                                 'movq\t-40(%rbp), %rax',
                                 'movq\t16(%rax), %rax',
                                 'movl\t-20(%rbp), %edx',
                                 'shrl\t$4, %edx',
                                 'movl\t%edx, %edx',
                                 'salq\t$2, %rdx',
                                 'addq\t%rdx, %rax',
                                 'movl\t(%rax), %edx',
                                 'movl\t-20(%rbp), %eax',
                                 'addl\t%eax, %eax',
                                 'andl\t$30, %eax',
                                 'movl\t%eax, %ecx',
                                 'shrl\t%cl, %edx',
                                 'movl\t%edx, %eax',
                                 'andl\t$1, %eax',
                                 'testl\t%eax, %eax',
                                 'jne\t.L16',
                                 'movq\t-40(%rbp), %rax',
                                 'movq\t24(%rax), %rax',
                                 'movl\t-20(%rbp), %edx',
                                 'salq\t$3, %rdx',
                                 'addq\t%rdx, %rax',
                                 'movq\t(%rax), %rax',
                                 'shrq\t%rax',
                                 'movq\t%rax, %rdx',
                                 'movq\t-48(%rbp), %rax',
                                 'shrq\t%rax',
                                 'cmpq\t%rax, %rdx',
                                 'jne\t.L16',
                                 '.L15:',
                                 'movq\t-40(%rbp), %rax',
                                 'movq\t16(%rax), %rax',
                                 'movl\t-20(%rbp), %edx',
                                 'shrl\t$4, %edx',
                                 'movl\t%edx, %edx',
                                 'salq\t$2, %rdx',
                                 'addq\t%rdx, %rax',
                                 'movl\t(%rax), %edx',
                                 'movl\t-20(%rbp), %eax',
                                 'addl\t%eax, %eax',
                                 'andl\t$30, %eax',
                                 'movl\t%eax, %ecx',
                                 'shrl\t%cl, %edx',
                                 'movl\t%edx, %eax',
                                 'andl\t$3, %eax',
                                 'testl\t%eax, %eax',
                                 'je\t.L17',
                                 'movq\t-40(%rbp), %rax',
                                 'movl\t(%rax), %eax',
                                 'jmp\t.L14',
                                 '.L17:',
                                 'movl\t-20(%rbp), %eax',
                                 'jmp\t.L14',
                                 '.L12:',
                                 'movl\t$0, %eax',
                                 '.L14:',
                                 'popq\t%rbp',
                                 '.cfi_def_cfa 7, 8',
                                 'ret',
                                 '.cfi_endproc',
                                 '.LFE13:',
                                 '.size\tkh_get_idx, .-kh_get_idx',
                                 '.type\tkh_resize_idx, @function']},
 'mm_idx_getseq:': {'code': ['.LFB30:',
                             '.cfi_startproc',
                             'pushq\t%rbp',
                             '.cfi_def_cfa_offset 16',
                             '.cfi_offset 6, -16',
                             'movq\t%rsp, %rbp',
                             '.cfi_def_cfa_register 6',
                             'movq\t%rdi, -40(%rbp)',
                             'movl\t%esi, -44(%rbp)',
                             'movl\t%edx, -48(%rbp)',
                             'movl\t%ecx, -52(%rbp)',
                             'movq\t%r8, -64(%rbp)',
                             'movq\t-40(%rbp), %rax',
                             'movl\t16(%rax), %eax',
                             'cmpl\t%eax, -44(%rbp)',
                             'jnb\t.L173',
                             'movq\t-40(%rbp), %rax',
                             'movq\t24(%rax), %rcx',
                             'movl\t-44(%rbp), %edx',
                             'movq\t%rdx, %rax',
                             'addq\t%rax, %rax',
                             'addq\t%rdx, %rax',
                             'salq\t$3, %rax',
                             'addq\t%rcx, %rax',
                             'movl\t16(%rax), %eax',
                             'cmpl\t%eax, -48(%rbp)',
                             'jb\t.L174',
                             '.L173:',
                             'movl\t$-1, %eax',
                             'jmp\t.L175',
                             '.L174:',
                             'movq\t-40(%rbp), %rax',
                             'movq\t24(%rax), %rcx',
                             'movl\t-44(%rbp), %edx',
                             'movq\t%rdx, %rax',
                             'addq\t%rax, %rax',
                             'addq\t%rdx, %rax',
                             'salq\t$3, %rax',
                             'addq\t%rcx, %rax',
                             'movl\t16(%rax), %eax',
                             'cmpl\t%eax, -52(%rbp)',
                             'jbe\t.L176',
                             'movq\t-40(%rbp), %rax',
                             'movq\t24(%rax), %rcx',
                             'movl\t-44(%rbp), %edx',
                             'movq\t%rdx, %rax',
                             'addq\t%rax, %rax',
                             'addq\t%rdx, %rax',
                             'salq\t$3, %rax',
                             'addq\t%rcx, %rax',
                             'movl\t16(%rax), %eax',
                             'movl\t%eax, -52(%rbp)',
                             '.L176:',
                             'movq\t-40(%rbp), %rax',
                             'movq\t24(%rax), %rcx',
                             'movl\t-44(%rbp), %edx',
                             'movq\t%rdx, %rax',
                             'addq\t%rax, %rax',
                             'addq\t%rdx, %rax',
                             'salq\t$3, %rax',
                             'addq\t%rcx, %rax',
                             'movq\t8(%rax), %rdx',
                             'movl\t-48(%rbp), %eax',
                             'addq\t%rdx, %rax',
                             'movq\t%rax, -16(%rbp)',
                             'movq\t-40(%rbp), %rax',
                             'movq\t24(%rax), %rcx',
                             'movl\t-44(%rbp), %edx',
                             'movq\t%rdx, %rax',
                             'addq\t%rax, %rax',
                             'addq\t%rdx, %rax',
                             'salq\t$3, %rax',
                             'addq\t%rcx, %rax',
                             'movq\t8(%rax), %rdx',
                             'movl\t-52(%rbp), %eax',
                             'addq\t%rdx, %rax',
                             'movq\t%rax, -8(%rbp)',
                             'movq\t-16(%rbp), %rax',
                             'movq\t%rax, -24(%rbp)',
                             'jmp\t.L177',
                             '.L178:',
                             'movq\t-40(%rbp), %rax',
                             'movq\t32(%rax), %rax',
                             'movq\t-24(%rbp), %rdx',
                             'shrq\t$3, %rdx',
                             'salq\t$2, %rdx',
                             'addq\t%rdx, %rax',
                             'movl\t(%rax), %edx',
                             'movq\t-24(%rbp), %rax',
                             'sall\t$2, %eax',
                             'andl\t$28, %eax',
                             'movl\t%eax, %ecx',
                             'shrl\t%cl, %edx',
                             'movl\t%edx, %eax',
                             'movl\t%eax, %ecx',
                             'movq\t-24(%rbp), %rax',
                             'subq\t-16(%rbp), %rax',
                             'movq\t%rax, %rdx',
                             'movq\t-64(%rbp), %rax',
                             'addq\t%rdx, %rax',
                             'andl\t$15, %ecx',
                             'movl\t%ecx, %edx',
                             'movb\t%dl, (%rax)',
                             'addq\t$1, -24(%rbp)',
                             '.L177:',
                             'movq\t-24(%rbp), %rax',
                             'cmpq\t-8(%rbp), %rax',
                             'jb\t.L178',
                             'movl\t-52(%rbp), %eax',
                             'subl\t-48(%rbp), %eax',
                             '.L175:',
                             'popq\t%rbp',
                             '.cfi_def_cfa 7, 8',
                             'ret',
                             '.cfi_endproc',
                             '.LFE30:',
                             '.size\tmm_idx_getseq, .-mm_idx_getseq',
                             '.globl\tmm_idx_cal_max_occ',
                             '.type\tmm_idx_cal_max_occ, @function'],
                    'fCalled': [],
                    'fNames': []},
 'mm_idx_index_name:': {'code': ['.LFB28:',
                                 '.cfi_startproc',
                                 'pushq\t%rbp',
                                 '.cfi_def_cfa_offset 16',
                                 '.cfi_offset 6, -16',
                                 'movq\t%rsp, %rbp',
                                 '.cfi_def_cfa_register 6',
                                 'subq\t$48, %rsp',
                                 'movq\t%rdi, -40(%rbp)',
                                 'movq\t%fs:40, %rax',
                                 'movq\t%rax, -8(%rbp)',
                                 'xorl\t%eax, %eax',
                                 'movl\t$0, -24(%rbp)',
                                 'movq\t-40(%rbp), %rax',
                                 'movq\t64(%rax), %rax',
                                 'testq\t%rax, %rax',
                                 'je\t.L158',
                                 'movl\t$0, %eax',
                                 'jmp\t.L165',
                                 '.L158:',
                                 'call\tkh_init_str',
                                 'movq\t%rax, -16(%rbp)',
                                 'movl\t$0, -28(%rbp)',
                                 'jmp\t.L160',
                                 '.L163:',
                                 'movq\t-40(%rbp), %rax',
                                 'movq\t24(%rax), %rcx',
                                 'movl\t-28(%rbp), %edx',
                                 'movq\t%rdx, %rax',
                                 'addq\t%rax, %rax',
                                 'addq\t%rdx, %rax',
                                 'salq\t$3, %rax',
                                 'addq\t%rcx, %rax',
                                 'movq\t(%rax), %rcx',
                                 'leaq\t-32(%rbp), %rdx',
                                 'movq\t-16(%rbp), %rax',
                                 'movq\t%rcx, %rsi',
                                 'movq\t%rax, %rdi',
                                 'call\tkh_put_str',
                                 'movl\t%eax, -20(%rbp)',
                                 'movl\t-32(%rbp), %eax',
                                 'testl\t%eax, %eax',
                                 'je\t.L161',
                                 'movq\t-16(%rbp), %rax',
                                 'movq\t32(%rax), %rax',
                                 'movl\t-20(%rbp), %edx',
                                 'salq\t$2, %rdx',
                                 'addq\t%rax, %rdx',
                                 'movl\t-28(%rbp), %eax',
                                 'movl\t%eax, (%rdx)',
                                 'jmp\t.L162',
                                 '.L161:',
                                 'movl\t$1, -24(%rbp)',
                                 '.L162:',
                                 'addl\t$1, -28(%rbp)',
                                 '.L160:',
                                 'movq\t-40(%rbp), %rax',
                                 'movl\t16(%rax), %eax',
                                 'cmpl\t%eax, -28(%rbp)',
                                 'jb\t.L163',
                                 'movq\t-40(%rbp), %rax',
                                 'movq\t-16(%rbp), %rdx',
                                 'movq\t%rdx, 64(%rax)',
                                 'cmpl\t$0, -24(%rbp)',
                                 'je\t.L164',
                                 'movl\tmm_verbose(%rip), %eax',
                                 'cmpl\t$1, %eax',
                                 'jle\t.L164',
                                 'movq\tstderr(%rip), %rax',
                                 'movq\t%rax, %rcx',
                                 'movl\t$64, %edx',
                                 'movl\t$1, %esi',
                                 'leaq\t.LC5(%rip), %rdi',
                                 'call\tfwrite@PLT',
                                 '.L164:',
                                 'movl\t-24(%rbp), %eax',
                                 '.L165:',
                                 'movq\t-8(%rbp), %rsi',
                                 'xorq\t%fs:40, %rsi',
                                 'je\t.L166',
                                 'call\t__stack_chk_fail@PLT',
                                 '.L166:',
                                 'leave',
                                 '.cfi_def_cfa 7, 8',
                                 'ret',
                                 '.cfi_endproc',
                                 '.LFE28:',
                                 '.size\tmm_idx_index_name, '
                                 '.-mm_idx_index_name',
                                 '.globl\tmm_idx_name2id',
                                 '.type\tmm_idx_name2id, @function'],
                        'fCalled': ['kh_init_str:',
                                    'kh_put_str:',
                                    'fwrite@PLT:',
                                    '__stack_chk_fail@PLT:'],
                        'fNames': ['kh_init_str:', 'kh_put_str:'],
                        'kh_init_str:': ['.LFB17:',
                                         '.cfi_startproc',
                                         'pushq\t%rbp',
                                         '.cfi_def_cfa_offset 16',
                                         '.cfi_offset 6, -16',
                                         'movq\t%rsp, %rbp',
                                         '.cfi_def_cfa_register 6',
                                         'movl\t$40, %edx',
                                         'movl\t$1, %esi',
                                         'movl\t$0, %edi',
                                         'call\tkcalloc@PLT',
                                         'popq\t%rbp',
                                         '.cfi_def_cfa 7, 8',
                                         'ret',
                                         '.cfi_endproc',
                                         '.LFE17:',
                                         '.size\tkh_init_str, .-kh_init_str',
                                         '.type\tkh_destroy_str, @function'],
                        'kh_put_str:': ['.file\t"index.c"',
                                        '.text',
                                        '.section\t.rodata',
                                        '.align 8',
                                        '.type\t__ac_HASH_UPPER, @object',
                                        '.size\t__ac_HASH_UPPER, 8']},
 'mm_idx_init:': {'code': ['.LFB24:',
                           '.cfi_startproc',
                           'pushq\t%rbp',
                           '.cfi_def_cfa_offset 16',
                           '.cfi_offset 6, -16',
                           'movq\t%rsp, %rbp',
                           '.cfi_def_cfa_register 6',
                           'subq\t$32, %rsp',
                           'movl\t%edi, -20(%rbp)',
                           'movl\t%esi, -24(%rbp)',
                           'movl\t%edx, -28(%rbp)',
                           'movl\t%ecx, -32(%rbp)',
                           'movl\t-24(%rbp), %eax',
                           'addl\t%eax, %eax',
                           'cmpl\t%eax, -28(%rbp)',
                           'jle\t.L111',
                           'movl\t-24(%rbp), %eax',
                           'addl\t%eax, %eax',
                           'movl\t%eax, -28(%rbp)',
                           '.L111:',
                           'cmpl\t$0, -20(%rbp)',
                           'jg\t.L112',
                           'movl\t$1, -20(%rbp)',
                           '.L112:',
                           'movl\t$72, %esi',
                           'movl\t$1, %edi',
                           'call\tcalloc@PLT',
                           'movq\t%rax, -8(%rbp)',
                           'movq\t-8(%rbp), %rax',
                           'movl\t-20(%rbp), %edx',
                           'movl\t%edx, 4(%rax)',
                           'movq\t-8(%rbp), %rax',
                           'movl\t-24(%rbp), %edx',
                           'movl\t%edx, 8(%rax)',
                           'movq\t-8(%rbp), %rax',
                           'movl\t-28(%rbp), %edx',
                           'movl\t%edx, (%rax)',
                           'movq\t-8(%rbp), %rax',
                           'movl\t-32(%rbp), %edx',
                           'movl\t%edx, 12(%rax)',
                           'movl\t-28(%rbp), %eax',
                           'movl\t$1, %edx',
                           'movl\t%eax, %ecx',
                           'sall\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'cltq',
                           'movl\t$48, %esi',
                           'movq\t%rax, %rdi',
                           'call\tcalloc@PLT',
                           'movq\t%rax, %rdx',
                           'movq\t-8(%rbp), %rax',
                           'movq\t%rdx, 40(%rax)',
                           'movl\tmm_dbg_flag(%rip), %eax',
                           'andl\t$1, %eax',
                           'testl\t%eax, %eax',
                           'jne\t.L113',
                           'call\tkm_init@PLT',
                           'movq\t%rax, %rdx',
                           'movq\t-8(%rbp), %rax',
                           'movq\t%rdx, 56(%rax)',
                           '.L113:',
                           'movq\t-8(%rbp), %rax',
                           'leave',
                           '.cfi_def_cfa 7, 8',
                           'ret',
                           '.cfi_endproc',
                           '.LFE24:',
                           '.size\tmm_idx_init, .-mm_idx_init',
                           '.globl\tmm_idx_destroy',
                           '.type\tmm_idx_destroy, @function'],
                  'fCalled': ['calloc@PLT:', 'calloc@PLT:', 'km_init@PLT:'],
                  'fNames': []},
 'mm_idx_is_idx:': {'code': ['.LFB41:',
                             '.cfi_startproc',
                             'pushq\t%rbp',
                             '.cfi_def_cfa_offset 16',
                             '.cfi_offset 6, -16',
                             'movq\t%rsp, %rbp',
                             '.cfi_def_cfa_register 6',
                             'subq\t$64, %rsp',
                             'movq\t%rdi, -56(%rbp)',
                             'movq\t%fs:40, %rax',
                             'movq\t%rax, -8(%rbp)',
                             'xorl\t%eax, %eax',
                             'movl\t$0, -40(%rbp)',
                             'movq\t-56(%rbp), %rax',
                             'leaq\t.LC17(%rip), %rsi',
                             'movq\t%rax, %rdi',
                             'call\tstrcmp@PLT',
                             'testl\t%eax, %eax',
                             'jne\t.L323',
                             'movl\t$0, %eax',
                             'jmp\t.L329',
                             '.L323:',
                             'movq\t-56(%rbp), %rax',
                             'movl\t$0, %esi',
                             'movq\t%rax, %rdi',
                             'movl\t$0, %eax',
                             'call\topen@PLT',
                             'movl\t%eax, -36(%rbp)',
                             'cmpl\t$0, -36(%rbp)',
                             'jns\t.L325',
                             'movq\t$-1, %rax',
                             'jmp\t.L329',
                             '.L325:',
                             'movl\t-36(%rbp), %eax',
                             'movl\t$2, %edx',
                             'movl\t$0, %esi',
                             'movl\t%eax, %edi',
                             'call\tlseek@PLT',
                             'movq\t%rax, -32(%rbp)',
                             'cmpq\t$3, -32(%rbp)',
                             'jle\t.L326',
                             'movl\t-36(%rbp), %eax',
                             'movl\t$0, %edx',
                             'movl\t$0, %esi',
                             'movl\t%eax, %edi',
                             'call\tlseek@PLT',
                             'leaq\t-12(%rbp), %rcx',
                             'movl\t-36(%rbp), %eax',
                             'movl\t$4, %edx',
                             'movq\t%rcx, %rsi',
                             'movl\t%eax, %edi',
                             'call\tread@PLT',
                             'movq\t%rax, -24(%rbp)',
                             'cmpq\t$4, -24(%rbp)',
                             'jne\t.L326',
                             'leaq\t-12(%rbp), %rax',
                             'movl\t$4, %edx',
                             'leaq\t.LC16(%rip), %rsi',
                             'movq\t%rax, %rdi',
                             'call\tstrncmp@PLT',
                             'testl\t%eax, %eax',
                             'jne\t.L326',
                             'movl\t$1, -40(%rbp)',
                             '.L326:',
                             'movl\t-36(%rbp), %eax',
                             'movl\t%eax, %edi',
                             'call\tclose@PLT',
                             'cmpl\t$0, -40(%rbp)',
                             'je\t.L327',
                             'movq\t-32(%rbp), %rax',
                             'jmp\t.L329',
                             '.L327:',
                             'movl\t$0, %eax',
                             '.L329:',
                             'movq\t-8(%rbp), %rcx',
                             'xorq\t%fs:40, %rcx',
                             'je\t.L330',
                             'call\t__stack_chk_fail@PLT',
                             '.L330:',
                             'leave',
                             '.cfi_def_cfa 7, 8',
                             'ret',
                             '.cfi_endproc',
                             '.LFE41:',
                             '.size\tmm_idx_is_idx, .-mm_idx_is_idx',
                             '.section\t.rodata',
                             '.LC18:',
                             '.string\t"rb"',
                             '.LC19:',
                             '.string\t"wb"',
                             '.text',
                             '.globl\tmm_idx_reader_open',
                             '.type\tmm_idx_reader_open, @function'],
                    'fCalled': ['strcmp@PLT:',
                                'open@PLT:',
                                'lseek@PLT:',
                                'lseek@PLT:',
                                'read@PLT:',
                                'strncmp@PLT:',
                                'close@PLT:',
                                '__stack_chk_fail@PLT:'],
                    'fNames': []},
 'mm_idx_load:': {'code': ['.LFB40:',
                           '.cfi_startproc',
                           'pushq\t%rbp',
                           '.cfi_def_cfa_offset 16',
                           '.cfi_offset 6, -16',
                           'movq\t%rsp, %rbp',
                           '.cfi_def_cfa_register 6',
                           'addq\t$-128, %rsp',
                           'movq\t%rdi, -120(%rbp)',
                           'movq\t%fs:40, %rax',
                           'movq\t%rax, -8(%rbp)',
                           'xorl\t%eax, %eax',
                           'movq\t$0, -88(%rbp)',
                           'movq\t-120(%rbp), %rdx',
                           'leaq\t-12(%rbp), %rax',
                           'movq\t%rdx, %rcx',
                           'movl\t$4, %edx',
                           'movl\t$1, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfread@PLT',
                           'cmpq\t$4, %rax',
                           'je\t.L304',
                           'movl\t$0, %eax',
                           'jmp\t.L319',
                           '.L304:',
                           'leaq\t-12(%rbp), %rax',
                           'movl\t$4, %edx',
                           'leaq\t.LC16(%rip), %rsi',
                           'movq\t%rax, %rdi',
                           'call\tstrncmp@PLT',
                           'testl\t%eax, %eax',
                           'je\t.L306',
                           'movl\t$0, %eax',
                           'jmp\t.L319',
                           '.L306:',
                           'movq\t-120(%rbp), %rdx',
                           'leaq\t-32(%rbp), %rax',
                           'movq\t%rdx, %rcx',
                           'movl\t$5, %edx',
                           'movl\t$4, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfread@PLT',
                           'cmpq\t$5, %rax',
                           'je\t.L307',
                           'movl\t$0, %eax',
                           'jmp\t.L319',
                           '.L307:',
                           'movl\t-16(%rbp), %eax',
                           'movl\t%eax, %ecx',
                           'movl\t-24(%rbp), %eax',
                           'movl\t%eax, %edx',
                           'movl\t-28(%rbp), %eax',
                           'movl\t%eax, %esi',
                           'movl\t-32(%rbp), %eax',
                           'movl\t%eax, %edi',
                           'call\tmm_idx_init',
                           'movq\t%rax, -80(%rbp)',
                           'movl\t-20(%rbp), %edx',
                           'movq\t-80(%rbp), %rax',
                           'movl\t%edx, 16(%rax)',
                           'movq\t-80(%rbp), %rax',
                           'movl\t16(%rax), %eax',
                           'movl\t%eax, %ecx',
                           'movq\t-80(%rbp), %rax',
                           'movq\t56(%rax), %rax',
                           'movl\t$24, %edx',
                           'movq\t%rcx, %rsi',
                           'movq\t%rax, %rdi',
                           'call\tkcalloc@PLT',
                           'movq\t%rax, %rdx',
                           'movq\t-80(%rbp), %rax',
                           'movq\t%rdx, 24(%rax)',
                           'movl\t$0, -100(%rbp)',
                           'jmp\t.L308',
                           '.L310:',
                           'movq\t-80(%rbp), %rax',
                           'movq\t24(%rax), %rcx',
                           'movl\t-100(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$3, %rax',
                           'addq\t%rcx, %rax',
                           'movq\t%rax, -56(%rbp)',
                           'movq\t-120(%rbp), %rdx',
                           'leaq\t-104(%rbp), %rax',
                           'movq\t%rdx, %rcx',
                           'movl\t$1, %edx',
                           'movl\t$1, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfread@PLT',
                           'movzbl\t-104(%rbp), %eax',
                           'testb\t%al, %al',
                           'je\t.L309',
                           'movzbl\t-104(%rbp), %eax',
                           'movzbl\t%al, %eax',
                           'addl\t$1, %eax',
                           'movslq\t%eax, %rdx',
                           'movq\t-80(%rbp), %rax',
                           'movq\t56(%rax), %rax',
                           'movq\t%rdx, %rsi',
                           'movq\t%rax, %rdi',
                           'call\tkmalloc@PLT',
                           'movq\t%rax, %rdx',
                           'movq\t-56(%rbp), %rax',
                           'movq\t%rdx, (%rax)',
                           'movzbl\t-104(%rbp), %eax',
                           'movzbl\t%al, %edx',
                           'movq\t-56(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'movq\t-120(%rbp), %rcx',
                           'movl\t$1, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfread@PLT',
                           'movq\t-56(%rbp), %rax',
                           'movq\t(%rax), %rdx',
                           'movzbl\t-104(%rbp), %eax',
                           'movzbl\t%al, %eax',
                           'addq\t%rdx, %rax',
                           'movb\t$0, (%rax)',
                           '.L309:',
                           'movq\t-56(%rbp), %rax',
                           'leaq\t16(%rax), %rdi',
                           'movq\t-120(%rbp), %rax',
                           'movq\t%rax, %rcx',
                           'movl\t$1, %edx',
                           'movl\t$4, %esi',
                           'call\tfread@PLT',
                           'movq\t-56(%rbp), %rax',
                           'movq\t-88(%rbp), %rdx',
                           'movq\t%rdx, 8(%rax)',
                           'movq\t-56(%rbp), %rax',
                           'movl\t16(%rax), %eax',
                           'movl\t%eax, %eax',
                           'addq\t%rax, -88(%rbp)',
                           'addl\t$1, -100(%rbp)',
                           '.L308:',
                           'movq\t-80(%rbp), %rax',
                           'movl\t16(%rax), %eax',
                           'cmpl\t%eax, -100(%rbp)',
                           'jb\t.L310',
                           'movl\t$0, -100(%rbp)',
                           'jmp\t.L311',
                           '.L317:',
                           'movq\t-80(%rbp), %rax',
                           'movq\t40(%rax), %rcx',
                           'movl\t-100(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$4, %rax',
                           'addq\t%rcx, %rax',
                           'movq\t%rax, -72(%rbp)',
                           'movq\t-72(%rbp), %rax',
                           'leaq\t24(%rax), %rdi',
                           'movq\t-120(%rbp), %rax',
                           'movq\t%rax, %rcx',
                           'movl\t$1, %edx',
                           'movl\t$4, %esi',
                           'call\tfread@PLT',
                           'movq\t-72(%rbp), %rax',
                           'movl\t24(%rax), %eax',
                           'sall\t$3, %eax',
                           'cltq',
                           'movq\t%rax, %rdi',
                           'call\tmalloc@PLT',
                           'movq\t%rax, %rdx',
                           'movq\t-72(%rbp), %rax',
                           'movq\t%rdx, 32(%rax)',
                           'movq\t-72(%rbp), %rax',
                           'movl\t24(%rax), %eax',
                           'movslq\t%eax, %rdx',
                           'movq\t-72(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movq\t-120(%rbp), %rcx',
                           'movl\t$8, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfread@PLT',
                           'movq\t-120(%rbp), %rdx',
                           'leaq\t-108(%rbp), %rax',
                           'movq\t%rdx, %rcx',
                           'movl\t$1, %edx',
                           'movl\t$4, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfread@PLT',
                           'movl\t-108(%rbp), %eax',
                           'testl\t%eax, %eax',
                           'je\t.L321',
                           'call\tkh_init_idx',
                           'movq\t%rax, -64(%rbp)',
                           'movq\t-72(%rbp), %rax',
                           'movq\t-64(%rbp), %rdx',
                           'movq\t%rdx, 40(%rax)',
                           'movl\t-108(%rbp), %edx',
                           'movq\t-64(%rbp), %rax',
                           'movl\t%edx, %esi',
                           'movq\t%rax, %rdi',
                           'call\tkh_resize_idx',
                           'movl\t$0, -96(%rbp)',
                           'jmp\t.L314',
                           '.L316:',
                           'movq\t-120(%rbp), %rdx',
                           'leaq\t-48(%rbp), %rax',
                           'movq\t%rdx, %rcx',
                           'movl\t$2, %edx',
                           'movl\t$8, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfread@PLT',
                           'movq\t-48(%rbp), %rcx',
                           'leaq\t-104(%rbp), %rdx',
                           'movq\t-64(%rbp), %rax',
                           'movq\t%rcx, %rsi',
                           'movq\t%rax, %rdi',
                           'call\tkh_put_idx',
                           'movl\t%eax, -92(%rbp)',
                           'movl\t-104(%rbp), %eax',
                           'testl\t%eax, %eax',
                           'jne\t.L315',
                           'leaq\t__PRETTY_FUNCTION__.5066(%rip), %rcx',
                           'movl\t$522, %edx',
                           'leaq\t.LC8(%rip), %rsi',
                           'leaq\t.LC15(%rip), %rdi',
                           'call\t__assert_fail@PLT',
                           '.L315:',
                           'movq\t-64(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movl\t-92(%rbp), %edx',
                           'salq\t$3, %rdx',
                           'addq\t%rax, %rdx',
                           'movq\t-40(%rbp), %rax',
                           'movq\t%rax, (%rdx)',
                           'addl\t$1, -96(%rbp)',
                           '.L314:',
                           'movl\t-108(%rbp), %eax',
                           'cmpl\t%eax, -96(%rbp)',
                           'jb\t.L316',
                           'jmp\t.L313',
                           '.L321:',
                           'nop',
                           '.L313:',
                           'addl\t$1, -100(%rbp)',
                           '.L311:',
                           'movq\t-80(%rbp), %rax',
                           'movl\t(%rax), %eax',
                           'movl\t$1, %edx',
                           'movl\t%eax, %ecx',
                           'sall\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'cmpl\t%eax, -100(%rbp)',
                           'jb\t.L317',
                           'movq\t-80(%rbp), %rax',
                           'movl\t12(%rax), %eax',
                           'andl\t$2, %eax',
                           'testl\t%eax, %eax',
                           'jne\t.L318',
                           'movq\t-88(%rbp), %rax',
                           'addq\t$7, %rax',
                           'shrq\t$3, %rax',
                           'salq\t$2, %rax',
                           'movq\t%rax, %rdi',
                           'call\tmalloc@PLT',
                           'movq\t%rax, %rdx',
                           'movq\t-80(%rbp), %rax',
                           'movq\t%rdx, 32(%rax)',
                           'movq\t-88(%rbp), %rax',
                           'addq\t$7, %rax',
                           'shrq\t$3, %rax',
                           'movq\t%rax, %rsi',
                           'movq\t-80(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movq\t-120(%rbp), %rdx',
                           'movq\t%rdx, %rcx',
                           'movq\t%rsi, %rdx',
                           'movl\t$4, %esi',
                           'movq\t%rax, %rdi',
                           'call\tfread@PLT',
                           '.L318:',
                           'movq\t-80(%rbp), %rax',
                           '.L319:',
                           'movq\t-8(%rbp), %rsi',
                           'xorq\t%fs:40, %rsi',
                           'je\t.L320',
                           'call\t__stack_chk_fail@PLT',
                           '.L320:',
                           'leave',
                           '.cfi_def_cfa 7, 8',
                           'ret',
                           '.cfi_endproc',
                           '.LFE40:',
                           '.size\tmm_idx_load, .-mm_idx_load',
                           '.section\t.rodata',
                           '.LC17:',
                           '.string\t"-"',
                           '.text',
                           '.globl\tmm_idx_is_idx',
                           '.type\tmm_idx_is_idx, @function'],
                  'fCalled': ['fread@PLT:',
                              'strncmp@PLT:',
                              'fread@PLT:',
                              'mm_idx_init:',
                              'kcalloc@PLT:',
                              'fread@PLT:',
                              'kmalloc@PLT:',
                              'fread@PLT:',
                              'fread@PLT:',
                              'fread@PLT:',
                              'malloc@PLT:',
                              'fread@PLT:',
                              'fread@PLT:',
                              'kh_init_idx:',
                              'kh_resize_idx:',
                              'fread@PLT:',
                              'kh_put_idx:',
                              '__assert_fail@PLT:',
                              'malloc@PLT:',
                              'fread@PLT:',
                              '__stack_chk_fail@PLT:'],
                  'fNames': ['mm_idx_init:',
                             'kh_init_idx:',
                             'kh_resize_idx:',
                             'kh_put_idx:'],
                  'kh_init_idx:': ['.file\t"index.c"',
                                   '.text',
                                   '.section\t.rodata',
                                   '.align 8',
                                   '.type\t__ac_HASH_UPPER, @object',
                                   '.size\t__ac_HASH_UPPER, 8'],
                  'kh_put_idx:': ['.file\t"index.c"',
                                  '.text',
                                  '.section\t.rodata',
                                  '.align 8',
                                  '.type\t__ac_HASH_UPPER, @object',
                                  '.size\t__ac_HASH_UPPER, 8'],
                  'kh_resize_idx:': ['.file\t"index.c"',
                                     '.text',
                                     '.section\t.rodata',
                                     '.align 8',
                                     '.type\t__ac_HASH_UPPER, @object',
                                     '.size\t__ac_HASH_UPPER, 8'],
                  'mm_idx_init:': ['.LFB24:',
                                   '.cfi_startproc',
                                   'pushq\t%rbp',
                                   '.cfi_def_cfa_offset 16',
                                   '.cfi_offset 6, -16',
                                   'movq\t%rsp, %rbp',
                                   '.cfi_def_cfa_register 6',
                                   'subq\t$32, %rsp',
                                   'movl\t%edi, -20(%rbp)',
                                   'movl\t%esi, -24(%rbp)',
                                   'movl\t%edx, -28(%rbp)',
                                   'movl\t%ecx, -32(%rbp)',
                                   'movl\t-24(%rbp), %eax',
                                   'addl\t%eax, %eax',
                                   'cmpl\t%eax, -28(%rbp)',
                                   'jle\t.L111',
                                   'movl\t-24(%rbp), %eax',
                                   'addl\t%eax, %eax',
                                   'movl\t%eax, -28(%rbp)',
                                   '.L111:',
                                   'cmpl\t$0, -20(%rbp)',
                                   'jg\t.L112',
                                   'movl\t$1, -20(%rbp)',
                                   '.L112:',
                                   'movl\t$72, %esi',
                                   'movl\t$1, %edi',
                                   'call\tcalloc@PLT',
                                   'movq\t%rax, -8(%rbp)',
                                   'movq\t-8(%rbp), %rax',
                                   'movl\t-20(%rbp), %edx',
                                   'movl\t%edx, 4(%rax)',
                                   'movq\t-8(%rbp), %rax',
                                   'movl\t-24(%rbp), %edx',
                                   'movl\t%edx, 8(%rax)',
                                   'movq\t-8(%rbp), %rax',
                                   'movl\t-28(%rbp), %edx',
                                   'movl\t%edx, (%rax)',
                                   'movq\t-8(%rbp), %rax',
                                   'movl\t-32(%rbp), %edx',
                                   'movl\t%edx, 12(%rax)',
                                   'movl\t-28(%rbp), %eax',
                                   'movl\t$1, %edx',
                                   'movl\t%eax, %ecx',
                                   'sall\t%cl, %edx',
                                   'movl\t%edx, %eax',
                                   'cltq',
                                   'movl\t$48, %esi',
                                   'movq\t%rax, %rdi',
                                   'call\tcalloc@PLT',
                                   'movq\t%rax, %rdx',
                                   'movq\t-8(%rbp), %rax',
                                   'movq\t%rdx, 40(%rax)',
                                   'movl\tmm_dbg_flag(%rip), %eax',
                                   'andl\t$1, %eax',
                                   'testl\t%eax, %eax',
                                   'jne\t.L113',
                                   'call\tkm_init@PLT',
                                   'movq\t%rax, %rdx',
                                   'movq\t-8(%rbp), %rax',
                                   'movq\t%rdx, 56(%rax)',
                                   '.L113:',
                                   'movq\t-8(%rbp), %rax',
                                   'leave',
                                   '.cfi_def_cfa 7, 8',
                                   'ret',
                                   '.cfi_endproc',
                                   '.LFE24:',
                                   '.size\tmm_idx_init, .-mm_idx_init',
                                   '.globl\tmm_idx_destroy',
                                   '.type\tmm_idx_destroy, @function']},
 'mm_idx_name2id:': {'code': ['.LFB29:',
                              '.cfi_startproc',
                              'pushq\t%rbp',
                              '.cfi_def_cfa_offset 16',
                              '.cfi_offset 6, -16',
                              'movq\t%rsp, %rbp',
                              '.cfi_def_cfa_register 6',
                              'subq\t$32, %rsp',
                              'movq\t%rdi, -24(%rbp)',
                              'movq\t%rsi, -32(%rbp)',
                              'movq\t-24(%rbp), %rax',
                              'movq\t64(%rax), %rax',
                              'movq\t%rax, -8(%rbp)',
                              'cmpq\t$0, -8(%rbp)',
                              'jne\t.L168',
                              'movl\t$-2, %eax',
                              'jmp\t.L169',
                              '.L168:',
                              'movq\t-32(%rbp), %rdx',
                              'movq\t-8(%rbp), %rax',
                              'movq\t%rdx, %rsi',
                              'movq\t%rax, %rdi',
                              'call\tkh_get_str',
                              'movl\t%eax, -12(%rbp)',
                              'movq\t-8(%rbp), %rax',
                              'movl\t(%rax), %eax',
                              'cmpl\t%eax, -12(%rbp)',
                              'je\t.L170',
                              'movq\t-8(%rbp), %rax',
                              'movq\t32(%rax), %rax',
                              'movl\t-12(%rbp), %edx',
                              'salq\t$2, %rdx',
                              'addq\t%rdx, %rax',
                              'movl\t(%rax), %eax',
                              'jmp\t.L169',
                              '.L170:',
                              'movl\t$-1, %eax',
                              '.L169:',
                              'leave',
                              '.cfi_def_cfa 7, 8',
                              'ret',
                              '.cfi_endproc',
                              '.LFE29:',
                              '.size\tmm_idx_name2id, .-mm_idx_name2id',
                              '.globl\tmm_idx_getseq',
                              '.type\tmm_idx_getseq, @function'],
                     'fCalled': ['kh_get_str:'],
                     'fNames': ['kh_get_str:'],
                     'kh_get_str:': ['.LFB20:',
                                     '.cfi_startproc',
                                     'pushq\t%rbp',
                                     '.cfi_def_cfa_offset 16',
                                     '.cfi_offset 6, -16',
                                     'movq\t%rsp, %rbp',
                                     '.cfi_def_cfa_register 6',
                                     'subq\t$48, %rsp',
                                     'movq\t%rdi, -40(%rbp)',
                                     'movq\t%rsi, -48(%rbp)',
                                     'movq\t-40(%rbp), %rax',
                                     'movl\t(%rax), %eax',
                                     'testl\t%eax, %eax',
                                     'je\t.L64',
                                     'movl\t$0, -16(%rbp)',
                                     'movq\t-40(%rbp), %rax',
                                     'movl\t(%rax), %eax',
                                     'subl\t$1, %eax',
                                     'movl\t%eax, -12(%rbp)',
                                     'movq\t-48(%rbp), %rax',
                                     'movq\t%rax, %rdi',
                                     'call\t__ac_X31_hash_string',
                                     'movl\t%eax, -8(%rbp)',
                                     'movl\t-8(%rbp), %eax',
                                     'andl\t-12(%rbp), %eax',
                                     'movl\t%eax, -20(%rbp)',
                                     'movl\t-20(%rbp), %eax',
                                     'movl\t%eax, -4(%rbp)',
                                     'jmp\t.L65',
                                     '.L68:',
                                     'addl\t$1, -16(%rbp)',
                                     'movl\t-16(%rbp), %edx',
                                     'movl\t-20(%rbp), %eax',
                                     'addl\t%edx, %eax',
                                     'andl\t-12(%rbp), %eax',
                                     'movl\t%eax, -20(%rbp)',
                                     'movl\t-20(%rbp), %eax',
                                     'cmpl\t-4(%rbp), %eax',
                                     'jne\t.L65',
                                     'movq\t-40(%rbp), %rax',
                                     'movl\t(%rax), %eax',
                                     'jmp\t.L66',
                                     '.L65:',
                                     'movq\t-40(%rbp), %rax',
                                     'movq\t16(%rax), %rax',
                                     'movl\t-20(%rbp), %edx',
                                     'shrl\t$4, %edx',
                                     'movl\t%edx, %edx',
                                     'salq\t$2, %rdx',
                                     'addq\t%rdx, %rax',
                                     'movl\t(%rax), %edx',
                                     'movl\t-20(%rbp), %eax',
                                     'addl\t%eax, %eax',
                                     'andl\t$30, %eax',
                                     'movl\t%eax, %ecx',
                                     'shrl\t%cl, %edx',
                                     'movl\t%edx, %eax',
                                     'andl\t$2, %eax',
                                     'testl\t%eax, %eax',
                                     'jne\t.L67',
                                     'movq\t-40(%rbp), %rax',
                                     'movq\t16(%rax), %rax',
                                     'movl\t-20(%rbp), %edx',
                                     'shrl\t$4, %edx',
                                     'movl\t%edx, %edx',
                                     'salq\t$2, %rdx',
                                     'addq\t%rdx, %rax',
                                     'movl\t(%rax), %edx',
                                     'movl\t-20(%rbp), %eax',
                                     'addl\t%eax, %eax',
                                     'andl\t$30, %eax',
                                     'movl\t%eax, %ecx',
                                     'shrl\t%cl, %edx',
                                     'movl\t%edx, %eax',
                                     'andl\t$1, %eax',
                                     'testl\t%eax, %eax',
                                     'jne\t.L68',
                                     'movq\t-40(%rbp), %rax',
                                     'movq\t24(%rax), %rax',
                                     'movl\t-20(%rbp), %edx',
                                     'salq\t$3, %rdx',
                                     'addq\t%rdx, %rax',
                                     'movq\t(%rax), %rax',
                                     'movq\t-48(%rbp), %rdx',
                                     'movq\t%rdx, %rsi',
                                     'movq\t%rax, %rdi',
                                     'call\tstrcmp@PLT',
                                     'testl\t%eax, %eax',
                                     'jne\t.L68',
                                     '.L67:',
                                     'movq\t-40(%rbp), %rax',
                                     'movq\t16(%rax), %rax',
                                     'movl\t-20(%rbp), %edx',
                                     'shrl\t$4, %edx',
                                     'movl\t%edx, %edx',
                                     'salq\t$2, %rdx',
                                     'addq\t%rdx, %rax',
                                     'movl\t(%rax), %edx',
                                     'movl\t-20(%rbp), %eax',
                                     'addl\t%eax, %eax',
                                     'andl\t$30, %eax',
                                     'movl\t%eax, %ecx',
                                     'shrl\t%cl, %edx',
                                     'movl\t%edx, %eax',
                                     'andl\t$3, %eax',
                                     'testl\t%eax, %eax',
                                     'je\t.L69',
                                     'movq\t-40(%rbp), %rax',
                                     'movl\t(%rax), %eax',
                                     'jmp\t.L66',
                                     '.L69:',
                                     'movl\t-20(%rbp), %eax',
                                     'jmp\t.L66',
                                     '.L64:',
                                     'movl\t$0, %eax',
                                     '.L66:',
                                     'leave',
                                     '.cfi_def_cfa 7, 8',
                                     'ret',
                                     '.cfi_endproc',
                                     '.LFE20:',
                                     '.size\tkh_get_str, .-kh_get_str',
                                     '.type\tkh_resize_str, @function']},
 'mm_idx_post:': {'code': ['.LFB33:',
                           '.cfi_startproc',
                           'pushq\t%rbp',
                           '.cfi_def_cfa_offset 16',
                           '.cfi_offset 6, -16',
                           'movq\t%rsp, %rbp',
                           '.cfi_def_cfa_register 6',
                           'subq\t$16, %rsp',
                           'movq\t%rdi, -8(%rbp)',
                           'movl\t%esi, -12(%rbp)',
                           'movq\t-8(%rbp), %rax',
                           'movl\t(%rax), %eax',
                           'movl\t$1, %edx',
                           'movl\t%eax, %ecx',
                           'sall\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'movslq\t%eax, %rcx',
                           'movq\t-8(%rbp), %rdx',
                           'movl\t-12(%rbp), %eax',
                           'leaq\tworker_post(%rip), %rsi',
                           'movl\t%eax, %edi',
                           'call\tkt_for@PLT',
                           'nop',
                           'leave',
                           '.cfi_def_cfa 7, 8',
                           'ret',
                           '.cfi_endproc',
                           '.LFE33:',
                           '.size\tmm_idx_post, .-mm_idx_post',
                           '.type\tmm_idx_add, @function'],
                  'fCalled': ['kt_for@PLT:'],
                  'fNames': []},
 'mm_idx_read_bed:': {'code': ['.LFB51:',
                               '.cfi_startproc',
                               'pushq\t%rbp',
                               '.cfi_def_cfa_offset 16',
                               '.cfi_offset 6, -16',
                               'movq\t%rsp, %rbp',
                               '.cfi_def_cfa_register 6',
                               'subq\t$192, %rsp',
                               'movq\t%rdi, -168(%rbp)',
                               'movq\t%rsi, -176(%rbp)',
                               'movl\t%edx, -180(%rbp)',
                               'movq\t%fs:40, %rax',
                               'movq\t%rax, -8(%rbp)',
                               'xorl\t%eax, %eax',
                               'movl\t$0, -64(%rbp)',
                               'movl\t$0, -60(%rbp)',
                               'movq\t$0, -56(%rbp)',
                               'cmpq\t$0, -176(%rbp)',
                               'je\t.L397',
                               'movq\t-176(%rbp), %rax',
                               'leaq\t.LC17(%rip), %rsi',
                               'movq\t%rax, %rdi',
                               'call\tstrcmp@PLT',
                               'testl\t%eax, %eax',
                               'je\t.L397',
                               'movq\t-176(%rbp), %rax',
                               'leaq\t.LC22(%rip), %rsi',
                               'movq\t%rax, %rdi',
                               'call\tgzopen@PLT',
                               'jmp\t.L398',
                               '.L397:',
                               'movq\tstdin(%rip), %rax',
                               'movq\t%rax, %rdi',
                               'call\tfileno@PLT',
                               'leaq\t.LC22(%rip), %rsi',
                               'movl\t%eax, %edi',
                               'call\tgzdopen@PLT',
                               '.L398:',
                               'movq\t%rax, -96(%rbp)',
                               'cmpq\t$0, -96(%rbp)',
                               'jne\t.L399',
                               'movl\t$0, %eax',
                               'jmp\t.L434',
                               '.L399:',
                               'movq\t-168(%rbp), %rax',
                               'movl\t16(%rax), %eax',
                               'movl\t%eax, %eax',
                               'movl\t$16, %esi',
                               'movq\t%rax, %rdi',
                               'call\tcalloc@PLT',
                               'movq\t%rax, -88(%rbp)',
                               'movq\t-96(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tks_init@PLT',
                               'movq\t%rax, -80(%rbp)',
                               'jmp\t.L401',
                               '.L433:',
                               'movl\t$-1, -48(%rbp)',
                               'movl\t$-1, -44(%rbp)',
                               'movl\t$-1, -40(%rbp)',
                               'movl\t-36(%rbp), %eax',
                               'orl\t$1073741823, %eax',
                               'movl\t%eax, -36(%rbp)',
                               'movzbl\t-33(%rbp), %eax',
                               'andl\t$63, %eax',
                               'movb\t%al, -33(%rbp)',
                               'movl\t$-1, -152(%rbp)',
                               'movl\t$0, -148(%rbp)',
                               'movq\t-56(%rbp), %rax',
                               'movq\t%rax, -104(%rbp)',
                               'movq\t-104(%rbp), %rax',
                               'movq\t%rax, -112(%rbp)',
                               'movl\t$0, -156(%rbp)',
                               '.L419:',
                               'movq\t-112(%rbp), %rax',
                               'movzbl\t(%rax), %eax',
                               'testb\t%al, %al',
                               'je\t.L402',
                               'call\t__ctype_b_loc@PLT',
                               'movq\t(%rax), %rdx',
                               'movq\t-112(%rbp), %rax',
                               'movzbl\t(%rax), %eax',
                               'movsbq\t%al, %rax',
                               'addq\t%rax, %rax',
                               'addq\t%rdx, %rax',
                               'movzwl\t(%rax), %eax',
                               'movzwl\t%ax, %eax',
                               'andl\t$8192, %eax',
                               'testl\t%eax, %eax',
                               'je\t.L403',
                               '.L402:',
                               'movq\t-112(%rbp), %rax',
                               'movzbl\t(%rax), %eax',
                               'movsbl\t%al, %eax',
                               'movl\t%eax, -140(%rbp)',
                               'movq\t-112(%rbp), %rax',
                               'movb\t$0, (%rax)',
                               'cmpl\t$0, -156(%rbp)',
                               'jne\t.L404',
                               'movq\t-104(%rbp), %rdx',
                               'movq\t-168(%rbp), %rax',
                               'movq\t%rdx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\tmm_idx_name2id',
                               'movl\t%eax, -152(%rbp)',
                               'cmpl\t$0, -152(%rbp)',
                               'jns\t.L405',
                               'jmp\t.L406',
                               '.L404:',
                               'cmpl\t$1, -156(%rbp)',
                               'jne\t.L407',
                               'movq\t-104(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tatol@PLT',
                               'movl\t%eax, -48(%rbp)',
                               'movl\t-48(%rbp), %eax',
                               'testl\t%eax, %eax',
                               'jns\t.L405',
                               'jmp\t.L406',
                               '.L407:',
                               'cmpl\t$2, -156(%rbp)',
                               'jne\t.L408',
                               'movq\t-104(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tatol@PLT',
                               'movl\t%eax, -44(%rbp)',
                               'movl\t-44(%rbp), %eax',
                               'testl\t%eax, %eax',
                               'jns\t.L405',
                               'jmp\t.L406',
                               '.L408:',
                               'cmpl\t$4, -156(%rbp)',
                               'jne\t.L409',
                               'movq\t-104(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tatol@PLT',
                               'sall\t$2, %eax',
                               'sarl\t$2, %eax',
                               'andl\t$1073741823, %eax',
                               'movl\t%eax, %edx',
                               'movl\t-36(%rbp), %eax',
                               'andl\t$-1073741824, %eax',
                               'orl\t%edx, %eax',
                               'movl\t%eax, -36(%rbp)',
                               'jmp\t.L405',
                               '.L409:',
                               'cmpl\t$5, -156(%rbp)',
                               'jne\t.L410',
                               'movq\t-104(%rbp), %rax',
                               'movzbl\t(%rax), %eax',
                               'cmpb\t$43, %al',
                               'je\t.L411',
                               'movq\t-104(%rbp), %rax',
                               'movzbl\t(%rax), %eax',
                               'cmpb\t$45, %al',
                               'jne\t.L412',
                               'movl\t$-1, %eax',
                               'jmp\t.L414',
                               '.L412:',
                               'movl\t$0, %eax',
                               'jmp\t.L414',
                               '.L411:',
                               'movl\t$1, %eax',
                               '.L414:',
                               'sall\t$6, %eax',
                               'movl\t%eax, %edx',
                               'movzbl\t-33(%rbp), %eax',
                               'andl\t$63, %eax',
                               'orl\t%edx, %eax',
                               'movb\t%al, -33(%rbp)',
                               'jmp\t.L405',
                               '.L410:',
                               'cmpl\t$9, -156(%rbp)',
                               'jne\t.L415',
                               'call\t__ctype_b_loc@PLT',
                               'movq\t(%rax), %rdx',
                               'movq\t-104(%rbp), %rax',
                               'movzbl\t(%rax), %eax',
                               'movsbq\t%al, %rax',
                               'addq\t%rax, %rax',
                               'addq\t%rdx, %rax',
                               'movzwl\t(%rax), %eax',
                               'movzwl\t%ax, %eax',
                               'andl\t$2048, %eax',
                               'testl\t%eax, %eax',
                               'je\t.L436',
                               'movq\t-104(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tatol@PLT',
                               'movl\t%eax, -148(%rbp)',
                               'jmp\t.L405',
                               '.L415:',
                               'cmpl\t$10, -156(%rbp)',
                               'jne\t.L417',
                               'movq\t-104(%rbp), %rax',
                               'movq\t%rax, -128(%rbp)',
                               'jmp\t.L405',
                               '.L417:',
                               'cmpl\t$11, -156(%rbp)',
                               'jne\t.L405',
                               'movq\t-104(%rbp), %rax',
                               'movq\t%rax, -120(%rbp)',
                               'jmp\t.L406',
                               '.L405:',
                               'cmpl\t$0, -140(%rbp)',
                               'je\t.L437',
                               'addl\t$1, -156(%rbp)',
                               'movq\t-112(%rbp), %rax',
                               'addq\t$1, %rax',
                               'movq\t%rax, -104(%rbp)',
                               '.L403:',
                               'addq\t$1, -112(%rbp)',
                               'jmp\t.L419',
                               '.L436:',
                               'nop',
                               'jmp\t.L406',
                               '.L437:',
                               'nop',
                               '.L406:',
                               'cmpl\t$0, -152(%rbp)',
                               'js\t.L401',
                               'movl\t-48(%rbp), %eax',
                               'testl\t%eax, %eax',
                               'js\t.L401',
                               'movl\t-48(%rbp), %edx',
                               'movl\t-44(%rbp), %eax',
                               'cmpl\t%eax, %edx',
                               'jl\t.L421',
                               'jmp\t.L401',
                               '.L421:',
                               'movl\t-152(%rbp), %eax',
                               'cltq',
                               'salq\t$4, %rax',
                               'movq\t%rax, %rdx',
                               'movq\t-88(%rbp), %rax',
                               'addq\t%rdx, %rax',
                               'movq\t%rax, -72(%rbp)',
                               'cmpl\t$10, -156(%rbp)',
                               'jle\t.L422',
                               'cmpl\t$0, -180(%rbp)',
                               'je\t.L422',
                               'movq\t-120(%rbp), %rax',
                               'leaq\t-120(%rbp), %rcx',
                               'movl\t$10, %edx',
                               'movq\t%rcx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\tstrtol@PLT',
                               'movl\t%eax, -136(%rbp)',
                               'movq\t-120(%rbp), %rax',
                               'addq\t$1, %rax',
                               'movq\t%rax, -120(%rbp)',
                               'movq\t-128(%rbp), %rax',
                               'leaq\t-128(%rbp), %rcx',
                               'movl\t$10, %edx',
                               'movq\t%rcx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\tstrtol@PLT',
                               'movl\t%eax, -132(%rbp)',
                               'movq\t-128(%rbp), %rax',
                               'addq\t$1, %rax',
                               'movq\t%rax, -128(%rbp)',
                               'movl\t-48(%rbp), %edx',
                               'movl\t-136(%rbp), %eax',
                               'addl\t%eax, %edx',
                               'movl\t-132(%rbp), %eax',
                               'addl\t%edx, %eax',
                               'movl\t%eax, -144(%rbp)',
                               'movl\t$1, -156(%rbp)',
                               'jmp\t.L423',
                               '.L428:',
                               'movq\t-48(%rbp), %rax',
                               'movq\t-40(%rbp), %rdx',
                               'movq\t%rax, -32(%rbp)',
                               'movq\t%rdx, -24(%rbp)',
                               'movq\t-72(%rbp), %rax',
                               'movl\t(%rax), %edx',
                               'movq\t-72(%rbp), %rax',
                               'movl\t4(%rax), %eax',
                               'cmpl\t%eax, %edx',
                               'jne\t.L424',
                               'movq\t-72(%rbp), %rax',
                               'movl\t4(%rax), %eax',
                               'testl\t%eax, %eax',
                               'je\t.L425',
                               'movq\t-72(%rbp), %rax',
                               'movl\t4(%rax), %edx',
                               'movq\t-72(%rbp), %rax',
                               'movl\t4(%rax), %eax',
                               'sarl\t%eax',
                               'addl\t%eax, %edx',
                               'jmp\t.L426',
                               '.L425:',
                               'movl\t$16, %edx',
                               '.L426:',
                               'movq\t-72(%rbp), %rax',
                               'movl\t%edx, 4(%rax)',
                               'movq\t-72(%rbp), %rax',
                               'movl\t4(%rax), %eax',
                               'cltq',
                               'salq\t$4, %rax',
                               'movq\t%rax, %rdx',
                               'movq\t-72(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movq\t%rdx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\trealloc@PLT',
                               'movq\t%rax, %rdx',
                               'movq\t-72(%rbp), %rax',
                               'movq\t%rdx, 8(%rax)',
                               '.L424:',
                               'movq\t-120(%rbp), %rax',
                               'leaq\t-120(%rbp), %rcx',
                               'movl\t$10, %edx',
                               'movq\t%rcx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\tstrtol@PLT',
                               'movl\t%eax, -136(%rbp)',
                               'movq\t-120(%rbp), %rax',
                               'addq\t$1, %rax',
                               'movq\t%rax, -120(%rbp)',
                               'movq\t-128(%rbp), %rax',
                               'leaq\t-128(%rbp), %rcx',
                               'movl\t$10, %edx',
                               'movq\t%rcx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\tstrtol@PLT',
                               'movl\t%eax, -132(%rbp)',
                               'movq\t-128(%rbp), %rax',
                               'addq\t$1, %rax',
                               'movq\t%rax, -128(%rbp)',
                               'movl\t-144(%rbp), %eax',
                               'movl\t%eax, -32(%rbp)',
                               'movl\t-48(%rbp), %edx',
                               'movl\t-136(%rbp), %eax',
                               'addl\t%edx, %eax',
                               'movl\t%eax, -28(%rbp)',
                               'movl\t-48(%rbp), %edx',
                               'movl\t-136(%rbp), %eax',
                               'addl\t%eax, %edx',
                               'movl\t-132(%rbp), %eax',
                               'addl\t%edx, %eax',
                               'movl\t%eax, -144(%rbp)',
                               'movl\t-28(%rbp), %edx',
                               'movl\t-32(%rbp), %eax',
                               'cmpl\t%eax, %edx',
                               'jle\t.L427',
                               'movq\t-72(%rbp), %rax',
                               'movq\t8(%rax), %rsi',
                               'movq\t-72(%rbp), %rax',
                               'movl\t(%rax), %eax',
                               'leal\t1(%rax), %ecx',
                               'movq\t-72(%rbp), %rdx',
                               'movl\t%ecx, (%rdx)',
                               'cltq',
                               'salq\t$4, %rax',
                               'leaq\t(%rsi,%rax), %rcx',
                               'movq\t-32(%rbp), %rax',
                               'movq\t-24(%rbp), %rdx',
                               'movq\t%rax, (%rcx)',
                               'movq\t%rdx, 8(%rcx)',
                               '.L427:',
                               'addl\t$1, -156(%rbp)',
                               '.L423:',
                               'movl\t-156(%rbp), %eax',
                               'cmpl\t-148(%rbp), %eax',
                               'jl\t.L428',
                               'jmp\t.L401',
                               '.L422:',
                               'movq\t-72(%rbp), %rax',
                               'movl\t(%rax), %edx',
                               'movq\t-72(%rbp), %rax',
                               'movl\t4(%rax), %eax',
                               'cmpl\t%eax, %edx',
                               'jne\t.L430',
                               'movq\t-72(%rbp), %rax',
                               'movl\t4(%rax), %eax',
                               'testl\t%eax, %eax',
                               'je\t.L431',
                               'movq\t-72(%rbp), %rax',
                               'movl\t4(%rax), %edx',
                               'movq\t-72(%rbp), %rax',
                               'movl\t4(%rax), %eax',
                               'sarl\t%eax',
                               'addl\t%eax, %edx',
                               'jmp\t.L432',
                               '.L431:',
                               'movl\t$16, %edx',
                               '.L432:',
                               'movq\t-72(%rbp), %rax',
                               'movl\t%edx, 4(%rax)',
                               'movq\t-72(%rbp), %rax',
                               'movl\t4(%rax), %eax',
                               'cltq',
                               'salq\t$4, %rax',
                               'movq\t%rax, %rdx',
                               'movq\t-72(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movq\t%rdx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\trealloc@PLT',
                               'movq\t%rax, %rdx',
                               'movq\t-72(%rbp), %rax',
                               'movq\t%rdx, 8(%rax)',
                               '.L430:',
                               'movq\t-72(%rbp), %rax',
                               'movq\t8(%rax), %rsi',
                               'movq\t-72(%rbp), %rax',
                               'movl\t(%rax), %eax',
                               'leal\t1(%rax), %ecx',
                               'movq\t-72(%rbp), %rdx',
                               'movl\t%ecx, (%rdx)',
                               'cltq',
                               'salq\t$4, %rax',
                               'leaq\t(%rsi,%rax), %rcx',
                               'movq\t-48(%rbp), %rax',
                               'movq\t-40(%rbp), %rdx',
                               'movq\t%rax, (%rcx)',
                               'movq\t%rdx, 8(%rcx)',
                               '.L401:',
                               'leaq\t-64(%rbp), %rdx',
                               'movq\t-80(%rbp), %rax',
                               'movl\t$0, %ecx',
                               'movl\t$2, %esi',
                               'movq\t%rax, %rdi',
                               'call\tks_getuntil',
                               'testl\t%eax, %eax',
                               'jns\t.L433',
                               'movq\t-56(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tfree@PLT',
                               'movq\t-80(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tks_destroy@PLT',
                               'movq\t-96(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tgzclose@PLT',
                               'movq\t-88(%rbp), %rax',
                               '.L434:',
                               'movq\t-8(%rbp), %rcx',
                               'xorq\t%fs:40, %rcx',
                               'je\t.L435',
                               'call\t__stack_chk_fail@PLT',
                               '.L435:',
                               'leave',
                               '.cfi_def_cfa 7, 8',
                               'ret',
                               '.cfi_endproc',
                               '.LFE51:',
                               '.size\tmm_idx_read_bed, .-mm_idx_read_bed',
                               '.globl\tmm_idx_bed_read',
                               '.type\tmm_idx_bed_read, @function'],
                      'fCalled': ['strcmp@PLT:',
                                  'gzopen@PLT:',
                                  'fileno@PLT:',
                                  'gzdopen@PLT:',
                                  'calloc@PLT:',
                                  'ks_init@PLT:',
                                  '__ctype_b_loc@PLT:',
                                  'mm_idx_name2id:',
                                  'atol@PLT:',
                                  'atol@PLT:',
                                  'atol@PLT:',
                                  '__ctype_b_loc@PLT:',
                                  'atol@PLT:',
                                  'strtol@PLT:',
                                  'strtol@PLT:',
                                  'realloc@PLT:',
                                  'strtol@PLT:',
                                  'strtol@PLT:',
                                  'realloc@PLT:',
                                  'ks_getuntil:',
                                  'free@PLT:',
                                  'ks_destroy@PLT:',
                                  'gzclose@PLT:',
                                  '__stack_chk_fail@PLT:'],
                      'fNames': ['mm_idx_name2id:', 'ks_getuntil:'],
                      'ks_getuntil:': ['.file\t"index.c"',
                                       '.text',
                                       '.section\t.rodata',
                                       '.align 8',
                                       '.type\t__ac_HASH_UPPER, @object',
                                       '.size\t__ac_HASH_UPPER, 8'],
                      'mm_idx_name2id:': ['.LFB29:',
                                          '.cfi_startproc',
                                          'pushq\t%rbp',
                                          '.cfi_def_cfa_offset 16',
                                          '.cfi_offset 6, -16',
                                          'movq\t%rsp, %rbp',
                                          '.cfi_def_cfa_register 6',
                                          'subq\t$32, %rsp',
                                          'movq\t%rdi, -24(%rbp)',
                                          'movq\t%rsi, -32(%rbp)',
                                          'movq\t-24(%rbp), %rax',
                                          'movq\t64(%rax), %rax',
                                          'movq\t%rax, -8(%rbp)',
                                          'cmpq\t$0, -8(%rbp)',
                                          'jne\t.L168',
                                          'movl\t$-2, %eax',
                                          'jmp\t.L169',
                                          '.L168:',
                                          'movq\t-32(%rbp), %rdx',
                                          'movq\t-8(%rbp), %rax',
                                          'movq\t%rdx, %rsi',
                                          'movq\t%rax, %rdi',
                                          'call\tkh_get_str',
                                          'movl\t%eax, -12(%rbp)',
                                          'movq\t-8(%rbp), %rax',
                                          'movl\t(%rax), %eax',
                                          'cmpl\t%eax, -12(%rbp)',
                                          'je\t.L170',
                                          'movq\t-8(%rbp), %rax',
                                          'movq\t32(%rax), %rax',
                                          'movl\t-12(%rbp), %edx',
                                          'salq\t$2, %rdx',
                                          'addq\t%rdx, %rax',
                                          'movl\t(%rax), %eax',
                                          'jmp\t.L169',
                                          '.L170:',
                                          'movl\t$-1, %eax',
                                          '.L169:',
                                          'leave',
                                          '.cfi_def_cfa 7, 8',
                                          'ret',
                                          '.cfi_endproc',
                                          '.LFE29:',
                                          '.size\tmm_idx_name2id, '
                                          '.-mm_idx_name2id',
                                          '.globl\tmm_idx_getseq',
                                          '.type\tmm_idx_getseq, @function']},
 'mm_idx_reader_close:': {'code': ['.LFB43:',
                                   '.cfi_startproc',
                                   'pushq\t%rbp',
                                   '.cfi_def_cfa_offset 16',
                                   '.cfi_offset 6, -16',
                                   'movq\t%rsp, %rbp',
                                   '.cfi_def_cfa_register 6',
                                   'subq\t$16, %rsp',
                                   'movq\t%rdi, -8(%rbp)',
                                   'movq\t-8(%rbp), %rax',
                                   'movl\t(%rax), %eax',
                                   'testl\t%eax, %eax',
                                   'je\t.L340',
                                   'movq\t-8(%rbp), %rax',
                                   'movq\t48(%rax), %rax',
                                   'movq\t%rax, %rdi',
                                   'call\tfclose@PLT',
                                   'jmp\t.L341',
                                   '.L340:',
                                   'movq\t-8(%rbp), %rax',
                                   'movq\t48(%rax), %rax',
                                   'movq\t%rax, %rdi',
                                   'call\tmm_bseq_close@PLT',
                                   '.L341:',
                                   'movq\t-8(%rbp), %rax',
                                   'movq\t40(%rax), %rax',
                                   'testq\t%rax, %rax',
                                   'je\t.L342',
                                   'movq\t-8(%rbp), %rax',
                                   'movq\t40(%rax), %rax',
                                   'movq\t%rax, %rdi',
                                   'call\tfclose@PLT',
                                   '.L342:',
                                   'movq\t-8(%rbp), %rax',
                                   'movq\t%rax, %rdi',
                                   'call\tfree@PLT',
                                   'nop',
                                   'leave',
                                   '.cfi_def_cfa 7, 8',
                                   'ret',
                                   '.cfi_endproc',
                                   '.LFE43:',
                                   '.size\tmm_idx_reader_close, '
                                   '.-mm_idx_reader_close',
                                   '.section\t.rodata',
                                   '.align 8',
                                   '.LC20:',
                                   '.string\t"[WARNING]\\033[1;31m Indexing '
                                   'parameters (-k, -w or -H) overridden by '
                                   'parameters used in the prebuilt '
                                   'index.\\033[0m\\n"',
                                   '.text',
                                   '.globl\tmm_idx_reader_read',
                                   '.type\tmm_idx_reader_read, @function'],
                          'fCalled': ['fclose@PLT:',
                                      'mm_bseq_close@PLT:',
                                      'fclose@PLT:',
                                      'free@PLT:'],
                          'fNames': []},
 'mm_idx_reader_eof:': {'code': ['.LFB45:',
                                 '.cfi_startproc',
                                 'pushq\t%rbp',
                                 '.cfi_def_cfa_offset 16',
                                 '.cfi_offset 6, -16',
                                 'movq\t%rsp, %rbp',
                                 '.cfi_def_cfa_register 6',
                                 'subq\t$16, %rsp',
                                 'movq\t%rdi, -8(%rbp)',
                                 'movq\t-8(%rbp), %rax',
                                 'movl\t(%rax), %eax',
                                 'testl\t%eax, %eax',
                                 'je\t.L352',
                                 'movq\t-8(%rbp), %rax',
                                 'movq\t48(%rax), %rax',
                                 'movq\t%rax, %rdi',
                                 'call\tfeof@PLT',
                                 'testl\t%eax, %eax',
                                 'jne\t.L353',
                                 'movq\t-8(%rbp), %rax',
                                 'movq\t48(%rax), %rax',
                                 'movq\t%rax, %rdi',
                                 'call\tftell@PLT',
                                 'movq\t%rax, %rdx',
                                 'movq\t-8(%rbp), %rax',
                                 'movq\t8(%rax), %rax',
                                 'cmpq\t%rax, %rdx',
                                 'jne\t.L354',
                                 '.L353:',
                                 'movl\t$1, %eax',
                                 'jmp\t.L357',
                                 '.L354:',
                                 'movl\t$0, %eax',
                                 'jmp\t.L357',
                                 '.L352:',
                                 'movq\t-8(%rbp), %rax',
                                 'movq\t48(%rax), %rax',
                                 'movq\t%rax, %rdi',
                                 'call\tmm_bseq_eof@PLT',
                                 '.L357:',
                                 'leave',
                                 '.cfi_def_cfa 7, 8',
                                 'ret',
                                 '.cfi_endproc',
                                 '.LFE45:',
                                 '.size\tmm_idx_reader_eof, '
                                 '.-mm_idx_reader_eof',
                                 '.type\tks_getuntil, @function'],
                        'fCalled': ['feof@PLT:',
                                    'ftell@PLT:',
                                    'mm_bseq_eof@PLT:'],
                        'fNames': []},
 'mm_idx_reader_open:': {'code': ['.LFB42:',
                                  '.cfi_startproc',
                                  'pushq\t%rbp',
                                  '.cfi_def_cfa_offset 16',
                                  '.cfi_offset 6, -16',
                                  'movq\t%rsp, %rbp',
                                  '.cfi_def_cfa_register 6',
                                  'subq\t$48, %rsp',
                                  'movq\t%rdi, -24(%rbp)',
                                  'movq\t%rsi, -32(%rbp)',
                                  'movq\t%rdx, -40(%rbp)',
                                  'movq\t-24(%rbp), %rax',
                                  'movq\t%rax, %rdi',
                                  'call\tmm_idx_is_idx',
                                  'movq\t%rax, -16(%rbp)',
                                  'cmpq\t$0, -16(%rbp)',
                                  'jns\t.L332',
                                  'movl\t$0, %eax',
                                  'jmp\t.L333',
                                  '.L332:',
                                  'movl\t$56, %esi',
                                  'movl\t$1, %edi',
                                  'call\tcalloc@PLT',
                                  'movq\t%rax, -8(%rbp)',
                                  'movq\t-16(%rbp), %rax',
                                  'movl\t%eax, %edx',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t%edx, (%rax)',
                                  'cmpq\t$0, -32(%rbp)',
                                  'je\t.L334',
                                  'movq\t-8(%rbp), %rcx',
                                  'movq\t-32(%rbp), %rsi',
                                  'movq\t(%rsi), %rax',
                                  'movq\t8(%rsi), %rdx',
                                  'movq\t%rax, 16(%rcx)',
                                  'movq\t%rdx, 24(%rcx)',
                                  'movq\t16(%rsi), %rax',
                                  'movq\t%rax, 32(%rcx)',
                                  'jmp\t.L335',
                                  '.L334:',
                                  'movq\t-8(%rbp), %rax',
                                  'addq\t$16, %rax',
                                  'movq\t%rax, %rdi',
                                  'call\tmm_idxopt_init@PLT',
                                  '.L335:',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t(%rax), %eax',
                                  'testl\t%eax, %eax',
                                  'je\t.L336',
                                  'movq\t-24(%rbp), %rax',
                                  'leaq\t.LC18(%rip), %rsi',
                                  'movq\t%rax, %rdi',
                                  'call\tfopen@PLT',
                                  'movq\t%rax, %rdx',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t%rdx, 48(%rax)',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t-16(%rbp), %rdx',
                                  'movq\t%rdx, 8(%rax)',
                                  'jmp\t.L337',
                                  '.L336:',
                                  'movq\t-24(%rbp), %rax',
                                  'movq\t%rax, %rdi',
                                  'call\tmm_bseq_open@PLT',
                                  'movq\t%rax, %rdx',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t%rdx, 48(%rax)',
                                  '.L337:',
                                  'cmpq\t$0, -40(%rbp)',
                                  'je\t.L338',
                                  'movq\t-40(%rbp), %rax',
                                  'leaq\t.LC19(%rip), %rsi',
                                  'movq\t%rax, %rdi',
                                  'call\tfopen@PLT',
                                  'movq\t%rax, %rdx',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t%rdx, 40(%rax)',
                                  '.L338:',
                                  'movq\t-8(%rbp), %rax',
                                  '.L333:',
                                  'leave',
                                  '.cfi_def_cfa 7, 8',
                                  'ret',
                                  '.cfi_endproc',
                                  '.LFE42:',
                                  '.size\tmm_idx_reader_open, '
                                  '.-mm_idx_reader_open',
                                  '.globl\tmm_idx_reader_close',
                                  '.type\tmm_idx_reader_close, @function'],
                         'fCalled': ['mm_idx_is_idx:',
                                     'calloc@PLT:',
                                     'mm_idxopt_init@PLT:',
                                     'fopen@PLT:',
                                     'mm_bseq_open@PLT:',
                                     'fopen@PLT:'],
                         'fNames': ['mm_idx_is_idx:'],
                         'mm_idx_is_idx:': ['.LFB41:',
                                            '.cfi_startproc',
                                            'pushq\t%rbp',
                                            '.cfi_def_cfa_offset 16',
                                            '.cfi_offset 6, -16',
                                            'movq\t%rsp, %rbp',
                                            '.cfi_def_cfa_register 6',
                                            'subq\t$64, %rsp',
                                            'movq\t%rdi, -56(%rbp)',
                                            'movq\t%fs:40, %rax',
                                            'movq\t%rax, -8(%rbp)',
                                            'xorl\t%eax, %eax',
                                            'movl\t$0, -40(%rbp)',
                                            'movq\t-56(%rbp), %rax',
                                            'leaq\t.LC17(%rip), %rsi',
                                            'movq\t%rax, %rdi',
                                            'call\tstrcmp@PLT',
                                            'testl\t%eax, %eax',
                                            'jne\t.L323',
                                            'movl\t$0, %eax',
                                            'jmp\t.L329',
                                            '.L323:',
                                            'movq\t-56(%rbp), %rax',
                                            'movl\t$0, %esi',
                                            'movq\t%rax, %rdi',
                                            'movl\t$0, %eax',
                                            'call\topen@PLT',
                                            'movl\t%eax, -36(%rbp)',
                                            'cmpl\t$0, -36(%rbp)',
                                            'jns\t.L325',
                                            'movq\t$-1, %rax',
                                            'jmp\t.L329',
                                            '.L325:',
                                            'movl\t-36(%rbp), %eax',
                                            'movl\t$2, %edx',
                                            'movl\t$0, %esi',
                                            'movl\t%eax, %edi',
                                            'call\tlseek@PLT',
                                            'movq\t%rax, -32(%rbp)',
                                            'cmpq\t$3, -32(%rbp)',
                                            'jle\t.L326',
                                            'movl\t-36(%rbp), %eax',
                                            'movl\t$0, %edx',
                                            'movl\t$0, %esi',
                                            'movl\t%eax, %edi',
                                            'call\tlseek@PLT',
                                            'leaq\t-12(%rbp), %rcx',
                                            'movl\t-36(%rbp), %eax',
                                            'movl\t$4, %edx',
                                            'movq\t%rcx, %rsi',
                                            'movl\t%eax, %edi',
                                            'call\tread@PLT',
                                            'movq\t%rax, -24(%rbp)',
                                            'cmpq\t$4, -24(%rbp)',
                                            'jne\t.L326',
                                            'leaq\t-12(%rbp), %rax',
                                            'movl\t$4, %edx',
                                            'leaq\t.LC16(%rip), %rsi',
                                            'movq\t%rax, %rdi',
                                            'call\tstrncmp@PLT',
                                            'testl\t%eax, %eax',
                                            'jne\t.L326',
                                            'movl\t$1, -40(%rbp)',
                                            '.L326:',
                                            'movl\t-36(%rbp), %eax',
                                            'movl\t%eax, %edi',
                                            'call\tclose@PLT',
                                            'cmpl\t$0, -40(%rbp)',
                                            'je\t.L327',
                                            'movq\t-32(%rbp), %rax',
                                            'jmp\t.L329',
                                            '.L327:',
                                            'movl\t$0, %eax',
                                            '.L329:',
                                            'movq\t-8(%rbp), %rcx',
                                            'xorq\t%fs:40, %rcx',
                                            'je\t.L330',
                                            'call\t__stack_chk_fail@PLT',
                                            '.L330:',
                                            'leave',
                                            '.cfi_def_cfa 7, 8',
                                            'ret',
                                            '.cfi_endproc',
                                            '.LFE41:',
                                            '.size\tmm_idx_is_idx, '
                                            '.-mm_idx_is_idx',
                                            '.section\t.rodata',
                                            '.LC18:',
                                            '.string\t"rb"',
                                            '.LC19:',
                                            '.string\t"wb"',
                                            '.text',
                                            '.globl\tmm_idx_reader_open',
                                            '.type\tmm_idx_reader_open, '
                                            '@function']},
 'mm_idx_reader_read:': {'code': ['.LFB44:',
                                  '.cfi_startproc',
                                  'pushq\t%rbp',
                                  '.cfi_def_cfa_offset 16',
                                  '.cfi_offset 6, -16',
                                  'movq\t%rsp, %rbp',
                                  '.cfi_def_cfa_register 6',
                                  'subq\t$32, %rsp',
                                  'movq\t%rdi, -24(%rbp)',
                                  'movl\t%esi, -28(%rbp)',
                                  'movq\t-24(%rbp), %rax',
                                  'movl\t(%rax), %eax',
                                  'testl\t%eax, %eax',
                                  'je\t.L344',
                                  'movq\t-24(%rbp), %rax',
                                  'movq\t48(%rax), %rax',
                                  'movq\t%rax, %rdi',
                                  'call\tmm_idx_load',
                                  'movq\t%rax, -8(%rbp)',
                                  'cmpq\t$0, -8(%rbp)',
                                  'je\t.L347',
                                  'movl\tmm_verbose(%rip), %eax',
                                  'cmpl\t$1, %eax',
                                  'jle\t.L347',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t8(%rax), %edx',
                                  'movq\t-24(%rbp), %rax',
                                  'movzwl\t16(%rax), %eax',
                                  'cwtl',
                                  'cmpl\t%eax, %edx',
                                  'jne\t.L346',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t4(%rax), %edx',
                                  'movq\t-24(%rbp), %rax',
                                  'movzwl\t18(%rax), %eax',
                                  'cwtl',
                                  'cmpl\t%eax, %edx',
                                  'jne\t.L346',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t12(%rax), %edx',
                                  'movq\t-24(%rbp), %rax',
                                  'movzwl\t20(%rax), %eax',
                                  'cwtl',
                                  'xorl\t%edx, %eax',
                                  'andl\t$1, %eax',
                                  'testl\t%eax, %eax',
                                  'je\t.L347',
                                  '.L346:',
                                  'movq\tstderr(%rip), %rax',
                                  'movq\t%rax, %rcx',
                                  'movl\t$109, %edx',
                                  'movl\t$1, %esi',
                                  'leaq\t.LC20(%rip), %rdi',
                                  'call\tfwrite@PLT',
                                  'jmp\t.L347',
                                  '.L344:',
                                  'movq\t-24(%rbp), %rax',
                                  'movq\t32(%rax), %rdi',
                                  'movq\t-24(%rbp), %rax',
                                  'movl\t24(%rax), %r9d',
                                  'movq\t-24(%rbp), %rax',
                                  'movzwl\t20(%rax), %eax',
                                  'movswl\t%ax, %r8d',
                                  'movq\t-24(%rbp), %rax',
                                  'movzwl\t22(%rax), %eax',
                                  'movswl\t%ax, %ecx',
                                  'movq\t-24(%rbp), %rax',
                                  'movzwl\t16(%rax), %eax',
                                  'movswl\t%ax, %edx',
                                  'movq\t-24(%rbp), %rax',
                                  'movzwl\t18(%rax), %eax',
                                  'movswl\t%ax, %esi',
                                  'movq\t-24(%rbp), %rax',
                                  'movq\t48(%rax), %rax',
                                  'pushq\t%rdi',
                                  'movl\t-28(%rbp), %edi',
                                  'pushq\t%rdi',
                                  'movq\t%rax, %rdi',
                                  'call\tmm_idx_gen',
                                  'addq\t$16, %rsp',
                                  'movq\t%rax, -8(%rbp)',
                                  '.L347:',
                                  'cmpq\t$0, -8(%rbp)',
                                  'je\t.L348',
                                  'movq\t-24(%rbp), %rax',
                                  'movq\t40(%rax), %rax',
                                  'testq\t%rax, %rax',
                                  'je\t.L349',
                                  'movq\t-24(%rbp), %rax',
                                  'movq\t40(%rax), %rax',
                                  'movq\t-8(%rbp), %rdx',
                                  'movq\t%rdx, %rsi',
                                  'movq\t%rax, %rdi',
                                  'call\tmm_idx_dump',
                                  '.L349:',
                                  'movq\t-24(%rbp), %rax',
                                  'movl\t4(%rax), %eax',
                                  'leal\t1(%rax), %ecx',
                                  'movq\t-24(%rbp), %rdx',
                                  'movl\t%ecx, 4(%rdx)',
                                  'movq\t-8(%rbp), %rdx',
                                  'movl\t%eax, 20(%rdx)',
                                  '.L348:',
                                  'movq\t-8(%rbp), %rax',
                                  'leave',
                                  '.cfi_def_cfa 7, 8',
                                  'ret',
                                  '.cfi_endproc',
                                  '.LFE44:',
                                  '.size\tmm_idx_reader_read, '
                                  '.-mm_idx_reader_read',
                                  '.globl\tmm_idx_reader_eof',
                                  '.type\tmm_idx_reader_eof, @function'],
                         'fCalled': ['mm_idx_load:',
                                     'fwrite@PLT:',
                                     'mm_idx_gen:',
                                     'mm_idx_dump:'],
                         'fNames': ['mm_idx_load:',
                                    'mm_idx_gen:',
                                    'mm_idx_dump:'],
                         'mm_idx_dump:': ['.file\t"index.c"',
                                          '.text',
                                          '.section\t.rodata',
                                          '.align 8',
                                          '.type\t__ac_HASH_UPPER, @object',
                                          '.size\t__ac_HASH_UPPER, 8'],
                         'mm_idx_gen:': ['.file\t"index.c"',
                                         '.text',
                                         '.section\t.rodata',
                                         '.align 8',
                                         '.type\t__ac_HASH_UPPER, @object',
                                         '.size\t__ac_HASH_UPPER, 8'],
                         'mm_idx_load:': ['.LFB40:',
                                          '.cfi_startproc',
                                          'pushq\t%rbp',
                                          '.cfi_def_cfa_offset 16',
                                          '.cfi_offset 6, -16',
                                          'movq\t%rsp, %rbp',
                                          '.cfi_def_cfa_register 6',
                                          'addq\t$-128, %rsp',
                                          'movq\t%rdi, -120(%rbp)',
                                          'movq\t%fs:40, %rax',
                                          'movq\t%rax, -8(%rbp)',
                                          'xorl\t%eax, %eax',
                                          'movq\t$0, -88(%rbp)',
                                          'movq\t-120(%rbp), %rdx',
                                          'leaq\t-12(%rbp), %rax',
                                          'movq\t%rdx, %rcx',
                                          'movl\t$4, %edx',
                                          'movl\t$1, %esi',
                                          'movq\t%rax, %rdi',
                                          'call\tfread@PLT',
                                          'cmpq\t$4, %rax',
                                          'je\t.L304',
                                          'movl\t$0, %eax',
                                          'jmp\t.L319',
                                          '.L304:',
                                          'leaq\t-12(%rbp), %rax',
                                          'movl\t$4, %edx',
                                          'leaq\t.LC16(%rip), %rsi',
                                          'movq\t%rax, %rdi',
                                          'call\tstrncmp@PLT',
                                          'testl\t%eax, %eax',
                                          'je\t.L306',
                                          'movl\t$0, %eax',
                                          'jmp\t.L319',
                                          '.L306:',
                                          'movq\t-120(%rbp), %rdx',
                                          'leaq\t-32(%rbp), %rax',
                                          'movq\t%rdx, %rcx',
                                          'movl\t$5, %edx',
                                          'movl\t$4, %esi',
                                          'movq\t%rax, %rdi',
                                          'call\tfread@PLT',
                                          'cmpq\t$5, %rax',
                                          'je\t.L307',
                                          'movl\t$0, %eax',
                                          'jmp\t.L319',
                                          '.L307:',
                                          'movl\t-16(%rbp), %eax',
                                          'movl\t%eax, %ecx',
                                          'movl\t-24(%rbp), %eax',
                                          'movl\t%eax, %edx',
                                          'movl\t-28(%rbp), %eax',
                                          'movl\t%eax, %esi',
                                          'movl\t-32(%rbp), %eax',
                                          'movl\t%eax, %edi',
                                          'call\tmm_idx_init',
                                          'movq\t%rax, -80(%rbp)',
                                          'movl\t-20(%rbp), %edx',
                                          'movq\t-80(%rbp), %rax',
                                          'movl\t%edx, 16(%rax)',
                                          'movq\t-80(%rbp), %rax',
                                          'movl\t16(%rax), %eax',
                                          'movl\t%eax, %ecx',
                                          'movq\t-80(%rbp), %rax',
                                          'movq\t56(%rax), %rax',
                                          'movl\t$24, %edx',
                                          'movq\t%rcx, %rsi',
                                          'movq\t%rax, %rdi',
                                          'call\tkcalloc@PLT',
                                          'movq\t%rax, %rdx',
                                          'movq\t-80(%rbp), %rax',
                                          'movq\t%rdx, 24(%rax)',
                                          'movl\t$0, -100(%rbp)',
                                          'jmp\t.L308',
                                          '.L310:',
                                          'movq\t-80(%rbp), %rax',
                                          'movq\t24(%rax), %rcx',
                                          'movl\t-100(%rbp), %edx',
                                          'movq\t%rdx, %rax',
                                          'addq\t%rax, %rax',
                                          'addq\t%rdx, %rax',
                                          'salq\t$3, %rax',
                                          'addq\t%rcx, %rax',
                                          'movq\t%rax, -56(%rbp)',
                                          'movq\t-120(%rbp), %rdx',
                                          'leaq\t-104(%rbp), %rax',
                                          'movq\t%rdx, %rcx',
                                          'movl\t$1, %edx',
                                          'movl\t$1, %esi',
                                          'movq\t%rax, %rdi',
                                          'call\tfread@PLT',
                                          'movzbl\t-104(%rbp), %eax',
                                          'testb\t%al, %al',
                                          'je\t.L309',
                                          'movzbl\t-104(%rbp), %eax',
                                          'movzbl\t%al, %eax',
                                          'addl\t$1, %eax',
                                          'movslq\t%eax, %rdx',
                                          'movq\t-80(%rbp), %rax',
                                          'movq\t56(%rax), %rax',
                                          'movq\t%rdx, %rsi',
                                          'movq\t%rax, %rdi',
                                          'call\tkmalloc@PLT',
                                          'movq\t%rax, %rdx',
                                          'movq\t-56(%rbp), %rax',
                                          'movq\t%rdx, (%rax)',
                                          'movzbl\t-104(%rbp), %eax',
                                          'movzbl\t%al, %edx',
                                          'movq\t-56(%rbp), %rax',
                                          'movq\t(%rax), %rax',
                                          'movq\t-120(%rbp), %rcx',
                                          'movl\t$1, %esi',
                                          'movq\t%rax, %rdi',
                                          'call\tfread@PLT',
                                          'movq\t-56(%rbp), %rax',
                                          'movq\t(%rax), %rdx',
                                          'movzbl\t-104(%rbp), %eax',
                                          'movzbl\t%al, %eax',
                                          'addq\t%rdx, %rax',
                                          'movb\t$0, (%rax)',
                                          '.L309:',
                                          'movq\t-56(%rbp), %rax',
                                          'leaq\t16(%rax), %rdi',
                                          'movq\t-120(%rbp), %rax',
                                          'movq\t%rax, %rcx',
                                          'movl\t$1, %edx',
                                          'movl\t$4, %esi',
                                          'call\tfread@PLT',
                                          'movq\t-56(%rbp), %rax',
                                          'movq\t-88(%rbp), %rdx',
                                          'movq\t%rdx, 8(%rax)',
                                          'movq\t-56(%rbp), %rax',
                                          'movl\t16(%rax), %eax',
                                          'movl\t%eax, %eax',
                                          'addq\t%rax, -88(%rbp)',
                                          'addl\t$1, -100(%rbp)',
                                          '.L308:',
                                          'movq\t-80(%rbp), %rax',
                                          'movl\t16(%rax), %eax',
                                          'cmpl\t%eax, -100(%rbp)',
                                          'jb\t.L310',
                                          'movl\t$0, -100(%rbp)',
                                          'jmp\t.L311',
                                          '.L317:',
                                          'movq\t-80(%rbp), %rax',
                                          'movq\t40(%rax), %rcx',
                                          'movl\t-100(%rbp), %edx',
                                          'movq\t%rdx, %rax',
                                          'addq\t%rax, %rax',
                                          'addq\t%rdx, %rax',
                                          'salq\t$4, %rax',
                                          'addq\t%rcx, %rax',
                                          'movq\t%rax, -72(%rbp)',
                                          'movq\t-72(%rbp), %rax',
                                          'leaq\t24(%rax), %rdi',
                                          'movq\t-120(%rbp), %rax',
                                          'movq\t%rax, %rcx',
                                          'movl\t$1, %edx',
                                          'movl\t$4, %esi',
                                          'call\tfread@PLT',
                                          'movq\t-72(%rbp), %rax',
                                          'movl\t24(%rax), %eax',
                                          'sall\t$3, %eax',
                                          'cltq',
                                          'movq\t%rax, %rdi',
                                          'call\tmalloc@PLT',
                                          'movq\t%rax, %rdx',
                                          'movq\t-72(%rbp), %rax',
                                          'movq\t%rdx, 32(%rax)',
                                          'movq\t-72(%rbp), %rax',
                                          'movl\t24(%rax), %eax',
                                          'movslq\t%eax, %rdx',
                                          'movq\t-72(%rbp), %rax',
                                          'movq\t32(%rax), %rax',
                                          'movq\t-120(%rbp), %rcx',
                                          'movl\t$8, %esi',
                                          'movq\t%rax, %rdi',
                                          'call\tfread@PLT',
                                          'movq\t-120(%rbp), %rdx',
                                          'leaq\t-108(%rbp), %rax',
                                          'movq\t%rdx, %rcx',
                                          'movl\t$1, %edx',
                                          'movl\t$4, %esi',
                                          'movq\t%rax, %rdi',
                                          'call\tfread@PLT',
                                          'movl\t-108(%rbp), %eax',
                                          'testl\t%eax, %eax',
                                          'je\t.L321',
                                          'call\tkh_init_idx',
                                          'movq\t%rax, -64(%rbp)',
                                          'movq\t-72(%rbp), %rax',
                                          'movq\t-64(%rbp), %rdx',
                                          'movq\t%rdx, 40(%rax)',
                                          'movl\t-108(%rbp), %edx',
                                          'movq\t-64(%rbp), %rax',
                                          'movl\t%edx, %esi',
                                          'movq\t%rax, %rdi',
                                          'call\tkh_resize_idx',
                                          'movl\t$0, -96(%rbp)',
                                          'jmp\t.L314',
                                          '.L316:',
                                          'movq\t-120(%rbp), %rdx',
                                          'leaq\t-48(%rbp), %rax',
                                          'movq\t%rdx, %rcx',
                                          'movl\t$2, %edx',
                                          'movl\t$8, %esi',
                                          'movq\t%rax, %rdi',
                                          'call\tfread@PLT',
                                          'movq\t-48(%rbp), %rcx',
                                          'leaq\t-104(%rbp), %rdx',
                                          'movq\t-64(%rbp), %rax',
                                          'movq\t%rcx, %rsi',
                                          'movq\t%rax, %rdi',
                                          'call\tkh_put_idx',
                                          'movl\t%eax, -92(%rbp)',
                                          'movl\t-104(%rbp), %eax',
                                          'testl\t%eax, %eax',
                                          'jne\t.L315',
                                          'leaq\t'
                                          '__PRETTY_FUNCTION__.5066(%rip), '
                                          '%rcx',
                                          'movl\t$522, %edx',
                                          'leaq\t.LC8(%rip), %rsi',
                                          'leaq\t.LC15(%rip), %rdi',
                                          'call\t__assert_fail@PLT',
                                          '.L315:',
                                          'movq\t-64(%rbp), %rax',
                                          'movq\t32(%rax), %rax',
                                          'movl\t-92(%rbp), %edx',
                                          'salq\t$3, %rdx',
                                          'addq\t%rax, %rdx',
                                          'movq\t-40(%rbp), %rax',
                                          'movq\t%rax, (%rdx)',
                                          'addl\t$1, -96(%rbp)',
                                          '.L314:',
                                          'movl\t-108(%rbp), %eax',
                                          'cmpl\t%eax, -96(%rbp)',
                                          'jb\t.L316',
                                          'jmp\t.L313',
                                          '.L321:',
                                          'nop',
                                          '.L313:',
                                          'addl\t$1, -100(%rbp)',
                                          '.L311:',
                                          'movq\t-80(%rbp), %rax',
                                          'movl\t(%rax), %eax',
                                          'movl\t$1, %edx',
                                          'movl\t%eax, %ecx',
                                          'sall\t%cl, %edx',
                                          'movl\t%edx, %eax',
                                          'cmpl\t%eax, -100(%rbp)',
                                          'jb\t.L317',
                                          'movq\t-80(%rbp), %rax',
                                          'movl\t12(%rax), %eax',
                                          'andl\t$2, %eax',
                                          'testl\t%eax, %eax',
                                          'jne\t.L318',
                                          'movq\t-88(%rbp), %rax',
                                          'addq\t$7, %rax',
                                          'shrq\t$3, %rax',
                                          'salq\t$2, %rax',
                                          'movq\t%rax, %rdi',
                                          'call\tmalloc@PLT',
                                          'movq\t%rax, %rdx',
                                          'movq\t-80(%rbp), %rax',
                                          'movq\t%rdx, 32(%rax)',
                                          'movq\t-88(%rbp), %rax',
                                          'addq\t$7, %rax',
                                          'shrq\t$3, %rax',
                                          'movq\t%rax, %rsi',
                                          'movq\t-80(%rbp), %rax',
                                          'movq\t32(%rax), %rax',
                                          'movq\t-120(%rbp), %rdx',
                                          'movq\t%rdx, %rcx',
                                          'movq\t%rsi, %rdx',
                                          'movl\t$4, %esi',
                                          'movq\t%rax, %rdi',
                                          'call\tfread@PLT',
                                          '.L318:',
                                          'movq\t-80(%rbp), %rax',
                                          '.L319:',
                                          'movq\t-8(%rbp), %rsi',
                                          'xorq\t%fs:40, %rsi',
                                          'je\t.L320',
                                          'call\t__stack_chk_fail@PLT',
                                          '.L320:',
                                          'leave',
                                          '.cfi_def_cfa 7, 8',
                                          'ret',
                                          '.cfi_endproc',
                                          '.LFE40:',
                                          '.size\tmm_idx_load, .-mm_idx_load',
                                          '.section\t.rodata',
                                          '.LC17:',
                                          '.string\t"-"',
                                          '.text',
                                          '.globl\tmm_idx_is_idx',
                                          '.type\tmm_idx_is_idx, @function']},
 'mm_idx_stat:': {'code': ['.LFB27:',
                           '.cfi_startproc',
                           'pushq\t%rbp',
                           '.cfi_def_cfa_offset 16',
                           '.cfi_offset 6, -16',
                           'movq\t%rsp, %rbp',
                           '.cfi_def_cfa_register 6',
                           'subq\t$96, %rsp',
                           'movq\t%rdi, -56(%rbp)',
                           'movl\t$0, -40(%rbp)',
                           'movl\t$0, -36(%rbp)',
                           'movq\t$0, -24(%rbp)',
                           'movq\t$0, -16(%rbp)',
                           'movq\t-56(%rbp), %rax',
                           'movl\t16(%rax), %ecx',
                           'movq\t-56(%rbp), %rax',
                           'movl\t12(%rax), %eax',
                           'andl\t$1, %eax',
                           'movl\t%eax, %edi',
                           'movq\t-56(%rbp), %rax',
                           'movl\t4(%rax), %esi',
                           'movq\t-56(%rbp), %rax',
                           'movl\t8(%rax), %edx',
                           'movq\tstderr(%rip), %rax',
                           'subq\t$8, %rsp',
                           'pushq\t%rcx',
                           'movl\t%edi, %r9d',
                           'movl\t%esi, %r8d',
                           'movl\t%edx, %ecx',
                           'leaq\t__func__.4485(%rip), %rdx',
                           'leaq\t.LC2(%rip), %rsi',
                           'movq\t%rax, %rdi',
                           'movl\t$0, %eax',
                           'call\tfprintf@PLT',
                           'addq\t$16, %rsp',
                           'movl\t$0, -32(%rbp)',
                           'jmp\t.L136',
                           '.L137:',
                           'movq\t-56(%rbp), %rax',
                           'movq\t24(%rax), %rcx',
                           'movl\t-32(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$3, %rax',
                           'addq\t%rcx, %rax',
                           'movl\t16(%rax), %eax',
                           'movl\t%eax, %eax',
                           'addq\t%rax, -16(%rbp)',
                           'addl\t$1, -32(%rbp)',
                           '.L136:',
                           'movq\t-56(%rbp), %rax',
                           'movl\t16(%rax), %eax',
                           'cmpl\t%eax, -32(%rbp)',
                           'jb\t.L137',
                           'movl\t$0, -32(%rbp)',
                           'jmp\t.L138',
                           '.L140:',
                           'movq\t-56(%rbp), %rax',
                           'movq\t40(%rax), %rcx',
                           'movl\t-32(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$4, %rax',
                           'addq\t%rcx, %rax',
                           'movq\t40(%rax), %rax',
                           'testq\t%rax, %rax',
                           'je\t.L139',
                           'movq\t-56(%rbp), %rax',
                           'movq\t40(%rax), %rcx',
                           'movl\t-32(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$4, %rax',
                           'addq\t%rcx, %rax',
                           'movq\t40(%rax), %rax',
                           'movl\t4(%rax), %edx',
                           'movl\t-40(%rbp), %eax',
                           'addl\t%edx, %eax',
                           'movl\t%eax, -40(%rbp)',
                           '.L139:',
                           'addl\t$1, -32(%rbp)',
                           '.L138:',
                           'movq\t-56(%rbp), %rax',
                           'movl\t(%rax), %eax',
                           'movl\t$1, %edx',
                           'movl\t%eax, %ecx',
                           'sall\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'cmpl\t%eax, -32(%rbp)',
                           'jb\t.L140',
                           'movl\t$0, -32(%rbp)',
                           'jmp\t.L141',
                           '.L149:',
                           'movq\t-56(%rbp), %rax',
                           'movq\t40(%rax), %rcx',
                           'movl\t-32(%rbp), %edx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$4, %rax',
                           'addq\t%rcx, %rax',
                           'movq\t40(%rax), %rax',
                           'movq\t%rax, -8(%rbp)',
                           'cmpq\t$0, -8(%rbp)',
                           'je\t.L156',
                           'movl\t$0, -28(%rbp)',
                           'jmp\t.L144',
                           '.L148:',
                           'movq\t-8(%rbp), %rax',
                           'movq\t16(%rax), %rax',
                           'movl\t-28(%rbp), %edx',
                           'shrl\t$4, %edx',
                           'movl\t%edx, %edx',
                           'salq\t$2, %rdx',
                           'addq\t%rdx, %rax',
                           'movl\t(%rax), %edx',
                           'movl\t-28(%rbp), %eax',
                           'addl\t%eax, %eax',
                           'andl\t$30, %eax',
                           'movl\t%eax, %ecx',
                           'shrl\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'andl\t$3, %eax',
                           'testl\t%eax, %eax',
                           'jne\t.L145',
                           'movq\t-8(%rbp), %rax',
                           'movq\t24(%rax), %rax',
                           'movl\t-28(%rbp), %edx',
                           'salq\t$3, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t(%rax), %rax',
                           'andl\t$1, %eax',
                           'testq\t%rax, %rax',
                           'jne\t.L146',
                           'movq\t-8(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movl\t-28(%rbp), %edx',
                           'salq\t$3, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t(%rax), %rax',
                           'movl\t%eax, %eax',
                           'jmp\t.L147',
                           '.L146:',
                           'movl\t$1, %eax',
                           '.L147:',
                           'addq\t%rax, -24(%rbp)',
                           'movq\t-8(%rbp), %rax',
                           'movq\t24(%rax), %rax',
                           'movl\t-28(%rbp), %edx',
                           'salq\t$3, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t(%rax), %rax',
                           'andl\t$1, %eax',
                           'testq\t%rax, %rax',
                           'je\t.L145',
                           'addl\t$1, -36(%rbp)',
                           '.L145:',
                           'addl\t$1, -28(%rbp)',
                           '.L144:',
                           'movq\t-8(%rbp), %rax',
                           'movl\t(%rax), %eax',
                           'cmpl\t%eax, -28(%rbp)',
                           'jb\t.L148',
                           'jmp\t.L143',
                           '.L156:',
                           'nop',
                           '.L143:',
                           'addl\t$1, -32(%rbp)',
                           '.L141:',
                           'movq\t-56(%rbp), %rax',
                           'movl\t(%rax), %eax',
                           'movl\t$1, %edx',
                           'movl\t%eax, %ecx',
                           'sall\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'cmpl\t%eax, -32(%rbp)',
                           'jb\t.L149',
                           'movq\t-16(%rbp), %rax',
                           'testq\t%rax, %rax',
                           'js\t.L150',
                           'cvtsi2sdq\t%rax, %xmm0',
                           'jmp\t.L151',
                           '.L150:',
                           'movq\t%rax, %rdx',
                           'shrq\t%rdx',
                           'andl\t$1, %eax',
                           'orq\t%rax, %rdx',
                           'cvtsi2sdq\t%rdx, %xmm0',
                           'addsd\t%xmm0, %xmm0',
                           '.L151:',
                           'movq\t-24(%rbp), %rax',
                           'testq\t%rax, %rax',
                           'js\t.L152',
                           'cvtsi2sdq\t%rax, %xmm1',
                           'jmp\t.L153',
                           '.L152:',
                           'movq\t%rax, %rdx',
                           'shrq\t%rdx',
                           'andl\t$1, %eax',
                           'orq\t%rax, %rdx',
                           'cvtsi2sdq\t%rdx, %xmm1',
                           'addsd\t%xmm1, %xmm1',
                           '.L153:',
                           'divsd\t%xmm1, %xmm0',
                           'movsd\t%xmm0, -64(%rbp)',
                           'movq\t-24(%rbp), %rax',
                           'testq\t%rax, %rax',
                           'js\t.L154',
                           'cvtsi2sdq\t%rax, %xmm0',
                           'jmp\t.L155',
                           '.L154:',
                           'movq\t%rax, %rdx',
                           'shrq\t%rdx',
                           'andl\t$1, %eax',
                           'orq\t%rax, %rdx',
                           'cvtsi2sdq\t%rdx, %xmm0',
                           'addsd\t%xmm0, %xmm0',
                           '.L155:',
                           'cvtsi2sd\t-40(%rbp), %xmm1',
                           'divsd\t%xmm1, %xmm0',
                           'movsd\t%xmm0, -72(%rbp)',
                           'cvtsi2sd\t-36(%rbp), %xmm0',
                           'movsd\t.LC3(%rip), %xmm1',
                           'mulsd\t%xmm1, %xmm0',
                           'cvtsi2sd\t-40(%rbp), %xmm1',
                           'movapd\t%xmm0, %xmm5',
                           'divsd\t%xmm1, %xmm5',
                           'movsd\t%xmm5, -80(%rbp)',
                           'call\tcputime@PLT',
                           'movsd\t%xmm0, -88(%rbp)',
                           'call\trealtime@PLT',
                           'movapd\t%xmm0, %xmm1',
                           'movsd\tmm_realtime0(%rip), %xmm0',
                           'subsd\t%xmm0, %xmm1',
                           'movapd\t%xmm1, %xmm0',
                           'movsd\t-88(%rbp), %xmm6',
                           'divsd\t%xmm0, %xmm6',
                           'movsd\t%xmm6, -88(%rbp)',
                           'call\trealtime@PLT',
                           'movapd\t%xmm0, %xmm1',
                           'movsd\tmm_realtime0(%rip), %xmm0',
                           'movapd\t%xmm1, %xmm7',
                           'subsd\t%xmm0, %xmm7',
                           'movapd\t%xmm7, %xmm0',
                           'movq\tstderr(%rip), %rax',
                           'movl\t-40(%rbp), %edx',
                           'movsd\t-64(%rbp), %xmm4',
                           'movsd\t-72(%rbp), %xmm3',
                           'movsd\t-80(%rbp), %xmm2',
                           'movl\t%edx, %ecx',
                           'movsd\t-88(%rbp), %xmm1',
                           'leaq\t__func__.4485(%rip), %rdx',
                           'leaq\t.LC4(%rip), %rsi',
                           'movq\t%rax, %rdi',
                           'movl\t$5, %eax',
                           'call\tfprintf@PLT',
                           'nop',
                           'leave',
                           '.cfi_def_cfa 7, 8',
                           'ret',
                           '.cfi_endproc',
                           '.LFE27:',
                           '.size\tmm_idx_stat, .-mm_idx_stat',
                           '.section\t.rodata',
                           '.align 8',
                           '.LC5:',
                           '.string\t"[WARNING] some database sequences have '
                           'identical sequence names\\n"',
                           '.text',
                           '.globl\tmm_idx_index_name',
                           '.type\tmm_idx_index_name, @function'],
                  'fCalled': ['fprintf@PLT:',
                              'cputime@PLT:',
                              'realtime@PLT:',
                              'realtime@PLT:',
                              'fprintf@PLT:'],
                  'fNames': []},
 'mm_idx_str:': {'code': ['.LFB38:',
                          '.cfi_startproc',
                          'pushq\t%rbp',
                          '.cfi_def_cfa_offset 16',
                          '.cfi_offset 6, -16',
                          'movq\t%rsp, %rbp',
                          '.cfi_def_cfa_register 6',
                          'subq\t$160, %rsp',
                          'movl\t%edi, -116(%rbp)',
                          'movl\t%esi, -120(%rbp)',
                          'movl\t%edx, -124(%rbp)',
                          'movl\t%ecx, -128(%rbp)',
                          'movl\t%r8d, -132(%rbp)',
                          'movq\t%r9, -144(%rbp)',
                          'movq\t16(%rbp), %rax',
                          'movq\t%rax, -152(%rbp)',
                          'movq\t%fs:40, %rax',
                          'movq\t%rax, -8(%rbp)',
                          'xorl\t%eax, %eax',
                          'movq\t$0, -80(%rbp)',
                          'movq\t$0, -32(%rbp)',
                          'movq\t$0, -24(%rbp)',
                          'movq\t$0, -16(%rbp)',
                          'movl\t$0, -92(%rbp)',
                          'cmpl\t$0, -132(%rbp)',
                          'jg\t.L268',
                          'movl\t$0, %eax',
                          'jmp\t.L282',
                          '.L268:',
                          'movl\t$0, -96(%rbp)',
                          'jmp\t.L270',
                          '.L271:',
                          'movl\t-96(%rbp), %eax',
                          'cltq',
                          'leaq\t0(,%rax,8), %rdx',
                          'movq\t-144(%rbp), %rax',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'movq\t%rax, %rdi',
                          'call\tstrlen@PLT',
                          'addq\t%rax, -80(%rbp)',
                          'addl\t$1, -96(%rbp)',
                          '.L270:',
                          'movl\t-96(%rbp), %eax',
                          'cmpl\t-132(%rbp), %eax',
                          'jl\t.L271',
                          'cmpl\t$0, -124(%rbp)',
                          'je\t.L272',
                          'orl\t$1, -92(%rbp)',
                          '.L272:',
                          'cmpq\t$0, -152(%rbp)',
                          'jne\t.L273',
                          'orl\t$4, -92(%rbp)',
                          '.L273:',
                          'cmpl\t$0, -128(%rbp)',
                          'jns\t.L274',
                          'movl\t$14, -128(%rbp)',
                          '.L274:',
                          'movl\t-92(%rbp), %ecx',
                          'movl\t-128(%rbp), %edx',
                          'movl\t-120(%rbp), %esi',
                          'movl\t-116(%rbp), %eax',
                          'movl\t%eax, %edi',
                          'call\tmm_idx_init',
                          'movq\t%rax, -72(%rbp)',
                          'movl\t-132(%rbp), %edx',
                          'movq\t-72(%rbp), %rax',
                          'movl\t%edx, 16(%rax)',
                          'movl\t-132(%rbp), %eax',
                          'movslq\t%eax, %rcx',
                          'movq\t-72(%rbp), %rax',
                          'movq\t56(%rax), %rax',
                          'movl\t$24, %edx',
                          'movq\t%rcx, %rsi',
                          'movq\t%rax, %rdi',
                          'call\tkcalloc@PLT',
                          'movq\t%rax, %rdx',
                          'movq\t-72(%rbp), %rax',
                          'movq\t%rdx, 24(%rax)',
                          'movq\t-80(%rbp), %rax',
                          'addq\t$7, %rax',
                          'shrq\t$3, %rax',
                          'movl\t$4, %esi',
                          'movq\t%rax, %rdi',
                          'call\tcalloc@PLT',
                          'movq\t%rax, %rdx',
                          'movq\t-72(%rbp), %rax',
                          'movq\t%rdx, 32(%rax)',
                          'call\tkh_init_str',
                          'movq\t%rax, -64(%rbp)',
                          'movq\t-72(%rbp), %rax',
                          'movq\t-64(%rbp), %rdx',
                          'movq\t%rdx, 64(%rax)',
                          'movl\t$0, -96(%rbp)',
                          'movq\t$0, -80(%rbp)',
                          'jmp\t.L275',
                          '.L281:',
                          'movl\t-96(%rbp), %eax',
                          'cltq',
                          'leaq\t0(,%rax,8), %rdx',
                          'movq\t-144(%rbp), %rax',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'movq\t%rax, -56(%rbp)',
                          'movq\t-72(%rbp), %rax',
                          'movq\t24(%rax), %rcx',
                          'movl\t-96(%rbp), %eax',
                          'movslq\t%eax, %rdx',
                          'movq\t%rdx, %rax',
                          'addq\t%rax, %rax',
                          'addq\t%rdx, %rax',
                          'salq\t$3, %rax',
                          'addq\t%rcx, %rax',
                          'movq\t%rax, -48(%rbp)',
                          'cmpq\t$0, -152(%rbp)',
                          'je\t.L276',
                          'movl\t-96(%rbp), %eax',
                          'cltq',
                          'leaq\t0(,%rax,8), %rdx',
                          'movq\t-152(%rbp), %rax',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'testq\t%rax, %rax',
                          'je\t.L276',
                          'movl\t-96(%rbp), %eax',
                          'cltq',
                          'leaq\t0(,%rax,8), %rdx',
                          'movq\t-152(%rbp), %rax',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rax',
                          'movq\t%rax, %rdi',
                          'call\tstrlen@PLT',
                          'leaq\t1(%rax), %rdx',
                          'movq\t-72(%rbp), %rax',
                          'movq\t56(%rax), %rax',
                          'movq\t%rdx, %rsi',
                          'movq\t%rax, %rdi',
                          'call\tkmalloc@PLT',
                          'movq\t%rax, %rdx',
                          'movq\t-48(%rbp), %rax',
                          'movq\t%rdx, (%rax)',
                          'movl\t-96(%rbp), %eax',
                          'cltq',
                          'leaq\t0(,%rax,8), %rdx',
                          'movq\t-152(%rbp), %rax',
                          'addq\t%rdx, %rax',
                          'movq\t(%rax), %rdx',
                          'movq\t-48(%rbp), %rax',
                          'movq\t(%rax), %rax',
                          'movq\t%rdx, %rsi',
                          'movq\t%rax, %rdi',
                          'call\tstrcpy@PLT',
                          'movq\t-48(%rbp), %rax',
                          'movq\t(%rax), %rcx',
                          'leaq\t-100(%rbp), %rdx',
                          'movq\t-64(%rbp), %rax',
                          'movq\t%rcx, %rsi',
                          'movq\t%rax, %rdi',
                          'call\tkh_put_str',
                          'movl\t-100(%rbp), %eax',
                          'testl\t%eax, %eax',
                          'jne\t.L276',
                          'leaq\t__PRETTY_FUNCTION__.5011(%rip), %rcx',
                          'movl\t$413, %edx',
                          'leaq\t.LC8(%rip), %rsi',
                          'leaq\t.LC15(%rip), %rdi',
                          'call\t__assert_fail@PLT',
                          '.L276:',
                          'movq\t-48(%rbp), %rax',
                          'movq\t-80(%rbp), %rdx',
                          'movq\t%rdx, 8(%rax)',
                          'movq\t-56(%rbp), %rax',
                          'movq\t%rax, %rdi',
                          'call\tstrlen@PLT',
                          'movl\t%eax, %edx',
                          'movq\t-48(%rbp), %rax',
                          'movl\t%edx, 16(%rax)',
                          'movl\t$0, -88(%rbp)',
                          'jmp\t.L278',
                          '.L279:',
                          'movl\t-88(%rbp), %edx',
                          'movq\t-56(%rbp), %rax',
                          'addq\t%rdx, %rax',
                          'movzbl\t(%rax), %eax',
                          'movzbl\t%al, %eax',
                          'movslq\t%eax, %rdx',
                          'leaq\tseq_nt4_table(%rip), %rax',
                          'movzbl\t(%rdx,%rax), %eax',
                          'movzbl\t%al, %eax',
                          'movl\t%eax, -84(%rbp)',
                          'movl\t-88(%rbp), %edx',
                          'movq\t-80(%rbp), %rax',
                          'addq\t%rdx, %rax',
                          'movq\t%rax, -40(%rbp)',
                          'movq\t-72(%rbp), %rax',
                          'movq\t32(%rax), %rax',
                          'movq\t-40(%rbp), %rdx',
                          'shrq\t$3, %rdx',
                          'salq\t$2, %rdx',
                          'addq\t%rdx, %rax',
                          'movl\t(%rax), %edx',
                          'movl\t-84(%rbp), %esi',
                          'movq\t-40(%rbp), %rax',
                          'sall\t$2, %eax',
                          'andl\t$28, %eax',
                          'movl\t%eax, %ecx',
                          'sall\t%cl, %esi',
                          'movq\t-72(%rbp), %rax',
                          'movq\t32(%rax), %rax',
                          'movq\t-40(%rbp), %rcx',
                          'shrq\t$3, %rcx',
                          'salq\t$2, %rcx',
                          'addq\t%rcx, %rax',
                          'orl\t%esi, %edx',
                          'movl\t%edx, (%rax)',
                          'addl\t$1, -88(%rbp)',
                          '.L278:',
                          'movq\t-48(%rbp), %rax',
                          'movl\t16(%rax), %eax',
                          'cmpl\t%eax, -88(%rbp)',
                          'jb\t.L279',
                          'movq\t-48(%rbp), %rax',
                          'movl\t16(%rax), %eax',
                          'movl\t%eax, %eax',
                          'addq\t%rax, -80(%rbp)',
                          'movq\t-48(%rbp), %rax',
                          'movl\t16(%rax), %eax',
                          'testl\t%eax, %eax',
                          'je\t.L280',
                          'movq\t$0, -32(%rbp)',
                          'movl\t-96(%rbp), %edi',
                          'movq\t-48(%rbp), %rax',
                          'movl\t16(%rax), %eax',
                          'movl\t%eax, %r10d',
                          'movl\t-120(%rbp), %esi',
                          'movl\t-116(%rbp), %edx',
                          'movq\t-56(%rbp), %rax',
                          'leaq\t-32(%rbp), %rcx',
                          'pushq\t%rcx',
                          'movl\t-124(%rbp), %ecx',
                          'pushq\t%rcx',
                          'movl\t%edi, %r9d',
                          'movl\t%esi, %r8d',
                          'movl\t%edx, %ecx',
                          'movl\t%r10d, %edx',
                          'movq\t%rax, %rsi',
                          'movl\t$0, %edi',
                          'call\tmm_sketch@PLT',
                          'addq\t$16, %rsp',
                          'movq\t-16(%rbp), %rdx',
                          'movq\t-32(%rbp), %rax',
                          'movl\t%eax, %ecx',
                          'movq\t-72(%rbp), %rax',
                          'movl\t%ecx, %esi',
                          'movq\t%rax, %rdi',
                          'call\tmm_idx_add',
                          '.L280:',
                          'addl\t$1, -96(%rbp)',
                          '.L275:',
                          'movl\t-96(%rbp), %eax',
                          'cmpl\t-132(%rbp), %eax',
                          'jl\t.L281',
                          'movq\t-16(%rbp), %rax',
                          'movq\t%rax, %rdi',
                          'call\tfree@PLT',
                          'movq\t-72(%rbp), %rax',
                          'movl\t$1, %esi',
                          'movq\t%rax, %rdi',
                          'call\tmm_idx_post',
                          'movq\t-72(%rbp), %rax',
                          '.L282:',
                          'movq\t-8(%rbp), %rdi',
                          'xorq\t%fs:40, %rdi',
                          'je\t.L283',
                          'call\t__stack_chk_fail@PLT',
                          '.L283:',
                          'leave',
                          '.cfi_def_cfa 7, 8',
                          'ret',
                          '.cfi_endproc',
                          '.LFE38:',
                          '.size\tmm_idx_str, .-mm_idx_str',
                          '.section\t.rodata',
                          '.LC16:',
                          '.string\t"MMI\\002"',
                          '.text',
                          '.globl\tmm_idx_dump',
                          '.type\tmm_idx_dump, @function'],
                 'fCalled': ['strlen@PLT:',
                             'mm_idx_init:',
                             'kcalloc@PLT:',
                             'calloc@PLT:',
                             'kh_init_str:',
                             'strlen@PLT:',
                             'kmalloc@PLT:',
                             'strcpy@PLT:',
                             'kh_put_str:',
                             '__assert_fail@PLT:',
                             'strlen@PLT:',
                             'mm_sketch@PLT:',
                             'mm_idx_add:',
                             'free@PLT:',
                             'mm_idx_post:',
                             '__stack_chk_fail@PLT:'],
                 'fNames': ['mm_idx_init:',
                            'kh_init_str:',
                            'kh_put_str:',
                            'mm_idx_add:',
                            'mm_idx_post:'],
                 'kh_init_str:': ['.file\t"index.c"',
                                  '.text',
                                  '.section\t.rodata',
                                  '.align 8',
                                  '.type\t__ac_HASH_UPPER, @object',
                                  '.size\t__ac_HASH_UPPER, 8'],
                 'kh_put_str:': ['.file\t"index.c"',
                                 '.text',
                                 '.section\t.rodata',
                                 '.align 8',
                                 '.type\t__ac_HASH_UPPER, @object',
                                 '.size\t__ac_HASH_UPPER, 8'],
                 'mm_idx_add:': ['.file\t"index.c"',
                                 '.text',
                                 '.section\t.rodata',
                                 '.align 8',
                                 '.type\t__ac_HASH_UPPER, @object',
                                 '.size\t__ac_HASH_UPPER, 8'],
                 'mm_idx_init:': ['.LFB24:',
                                  '.cfi_startproc',
                                  'pushq\t%rbp',
                                  '.cfi_def_cfa_offset 16',
                                  '.cfi_offset 6, -16',
                                  'movq\t%rsp, %rbp',
                                  '.cfi_def_cfa_register 6',
                                  'subq\t$32, %rsp',
                                  'movl\t%edi, -20(%rbp)',
                                  'movl\t%esi, -24(%rbp)',
                                  'movl\t%edx, -28(%rbp)',
                                  'movl\t%ecx, -32(%rbp)',
                                  'movl\t-24(%rbp), %eax',
                                  'addl\t%eax, %eax',
                                  'cmpl\t%eax, -28(%rbp)',
                                  'jle\t.L111',
                                  'movl\t-24(%rbp), %eax',
                                  'addl\t%eax, %eax',
                                  'movl\t%eax, -28(%rbp)',
                                  '.L111:',
                                  'cmpl\t$0, -20(%rbp)',
                                  'jg\t.L112',
                                  'movl\t$1, -20(%rbp)',
                                  '.L112:',
                                  'movl\t$72, %esi',
                                  'movl\t$1, %edi',
                                  'call\tcalloc@PLT',
                                  'movq\t%rax, -8(%rbp)',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t-20(%rbp), %edx',
                                  'movl\t%edx, 4(%rax)',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t-24(%rbp), %edx',
                                  'movl\t%edx, 8(%rax)',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t-28(%rbp), %edx',
                                  'movl\t%edx, (%rax)',
                                  'movq\t-8(%rbp), %rax',
                                  'movl\t-32(%rbp), %edx',
                                  'movl\t%edx, 12(%rax)',
                                  'movl\t-28(%rbp), %eax',
                                  'movl\t$1, %edx',
                                  'movl\t%eax, %ecx',
                                  'sall\t%cl, %edx',
                                  'movl\t%edx, %eax',
                                  'cltq',
                                  'movl\t$48, %esi',
                                  'movq\t%rax, %rdi',
                                  'call\tcalloc@PLT',
                                  'movq\t%rax, %rdx',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t%rdx, 40(%rax)',
                                  'movl\tmm_dbg_flag(%rip), %eax',
                                  'andl\t$1, %eax',
                                  'testl\t%eax, %eax',
                                  'jne\t.L113',
                                  'call\tkm_init@PLT',
                                  'movq\t%rax, %rdx',
                                  'movq\t-8(%rbp), %rax',
                                  'movq\t%rdx, 56(%rax)',
                                  '.L113:',
                                  'movq\t-8(%rbp), %rax',
                                  'leave',
                                  '.cfi_def_cfa 7, 8',
                                  'ret',
                                  '.cfi_endproc',
                                  '.LFE24:',
                                  '.size\tmm_idx_init, .-mm_idx_init',
                                  '.globl\tmm_idx_destroy',
                                  '.type\tmm_idx_destroy, @function'],
                 'mm_idx_post:': ['.file\t"index.c"',
                                  '.text',
                                  '.section\t.rodata',
                                  '.align 8',
                                  '.type\t__ac_HASH_UPPER, @object',
                                  '.size\t__ac_HASH_UPPER, 8']},
 'radix_sort_bed:': {'code': ['.LFB50:',
                              '.cfi_startproc',
                              'pushq\t%rbp',
                              '.cfi_def_cfa_offset 16',
                              '.cfi_offset 6, -16',
                              'movq\t%rsp, %rbp',
                              '.cfi_def_cfa_register 6',
                              'subq\t$16, %rsp',
                              'movq\t%rdi, -8(%rbp)',
                              'movq\t%rsi, -16(%rbp)',
                              'movq\t-16(%rbp), %rdx',
                              'movq\t-8(%rbp), %rax',
                              'subq\t%rax, %rdx',
                              'movq\t%rdx, %rax',
                              'cmpq\t$1024, %rax',
                              'jg\t.L393',
                              'movq\t-16(%rbp), %rdx',
                              'movq\t-8(%rbp), %rax',
                              'movq\t%rdx, %rsi',
                              'movq\t%rax, %rdi',
                              'call\trs_insertsort_bed',
                              'jmp\t.L395',
                              '.L393:',
                              'movq\t-16(%rbp), %rsi',
                              'movq\t-8(%rbp), %rax',
                              'movl\t$24, %ecx',
                              'movl\t$8, %edx',
                              'movq\t%rax, %rdi',
                              'call\trs_sort_bed',
                              '.L395:',
                              'nop',
                              'leave',
                              '.cfi_def_cfa 7, 8',
                              'ret',
                              '.cfi_endproc',
                              '.LFE50:',
                              '.size\tradix_sort_bed, .-radix_sort_bed',
                              '.section\t.rodata',
                              '.LC22:',
                              '.string\t"r"',
                              '.text',
                              '.globl\tmm_idx_read_bed',
                              '.type\tmm_idx_read_bed, @function'],
                     'fCalled': ['rs_insertsort_bed:', 'rs_sort_bed:'],
                     'fNames': ['rs_insertsort_bed:', 'rs_sort_bed:'],
                     'rs_insertsort_bed:': ['.LFB48:',
                                            '.cfi_startproc',
                                            'pushq\t%rbp',
                                            '.cfi_def_cfa_offset 16',
                                            '.cfi_offset 6, -16',
                                            'movq\t%rsp, %rbp',
                                            '.cfi_def_cfa_register 6',
                                            'movq\t%rdi, -40(%rbp)',
                                            'movq\t%rsi, -48(%rbp)',
                                            'movq\t-40(%rbp), %rax',
                                            'addq\t$16, %rax',
                                            'movq\t%rax, -32(%rbp)',
                                            'jmp\t.L361',
                                            '.L366:',
                                            'movq\t-32(%rbp), %rax',
                                            'movl\t(%rax), %edx',
                                            'movq\t-32(%rbp), %rax',
                                            'subq\t$16, %rax',
                                            'movl\t(%rax), %eax',
                                            'cmpl\t%eax, %edx',
                                            'jge\t.L362',
                                            'movq\t-32(%rbp), %rax',
                                            'movq\t8(%rax), %rdx',
                                            'movq\t(%rax), %rax',
                                            'movq\t%rax, -16(%rbp)',
                                            'movq\t%rdx, -8(%rbp)',
                                            'movq\t-32(%rbp), %rax',
                                            'movq\t%rax, -24(%rbp)',
                                            'jmp\t.L363',
                                            '.L365:',
                                            'movq\t-24(%rbp), %rcx',
                                            'movq\t-24(%rbp), %rax',
                                            'movq\t-8(%rax), %rdx',
                                            'movq\t-16(%rax), %rax',
                                            'movq\t%rax, (%rcx)',
                                            'movq\t%rdx, 8(%rcx)',
                                            'subq\t$16, -24(%rbp)',
                                            '.L363:',
                                            'movq\t-24(%rbp), %rax',
                                            'cmpq\t-40(%rbp), %rax',
                                            'jbe\t.L364',
                                            'movl\t-16(%rbp), %edx',
                                            'movq\t-24(%rbp), %rax',
                                            'subq\t$16, %rax',
                                            'movl\t(%rax), %eax',
                                            'cmpl\t%eax, %edx',
                                            'jl\t.L365',
                                            '.L364:',
                                            'movq\t-24(%rbp), %rcx',
                                            'movq\t-16(%rbp), %rax',
                                            'movq\t-8(%rbp), %rdx',
                                            'movq\t%rax, (%rcx)',
                                            'movq\t%rdx, 8(%rcx)',
                                            '.L362:',
                                            'addq\t$16, -32(%rbp)',
                                            '.L361:',
                                            'movq\t-32(%rbp), %rax',
                                            'cmpq\t-48(%rbp), %rax',
                                            'jb\t.L366',
                                            'nop',
                                            'popq\t%rbp',
                                            '.cfi_def_cfa 7, 8',
                                            'ret',
                                            '.cfi_endproc',
                                            '.LFE48:',
                                            '.size\trs_insertsort_bed, '
                                            '.-rs_insertsort_bed',
                                            '.section\t.rodata',
                                            '.LC21:',
                                            '.string\t"n_bits <= RS_MAX_BITS"',
                                            '.text',
                                            '.globl\trs_sort_bed',
                                            '.type\trs_sort_bed, @function'],
                     'rs_sort_bed:': ['.file\t"index.c"',
                                      '.text',
                                      '.section\t.rodata',
                                      '.align 8',
                                      '.type\t__ac_HASH_UPPER, @object',
                                      '.size\t__ac_HASH_UPPER, 8']},
 'rs_insertsort_bed:': {'code': ['.LFB48:',
                                 '.cfi_startproc',
                                 'pushq\t%rbp',
                                 '.cfi_def_cfa_offset 16',
                                 '.cfi_offset 6, -16',
                                 'movq\t%rsp, %rbp',
                                 '.cfi_def_cfa_register 6',
                                 'movq\t%rdi, -40(%rbp)',
                                 'movq\t%rsi, -48(%rbp)',
                                 'movq\t-40(%rbp), %rax',
                                 'addq\t$16, %rax',
                                 'movq\t%rax, -32(%rbp)',
                                 'jmp\t.L361',
                                 '.L366:',
                                 'movq\t-32(%rbp), %rax',
                                 'movl\t(%rax), %edx',
                                 'movq\t-32(%rbp), %rax',
                                 'subq\t$16, %rax',
                                 'movl\t(%rax), %eax',
                                 'cmpl\t%eax, %edx',
                                 'jge\t.L362',
                                 'movq\t-32(%rbp), %rax',
                                 'movq\t8(%rax), %rdx',
                                 'movq\t(%rax), %rax',
                                 'movq\t%rax, -16(%rbp)',
                                 'movq\t%rdx, -8(%rbp)',
                                 'movq\t-32(%rbp), %rax',
                                 'movq\t%rax, -24(%rbp)',
                                 'jmp\t.L363',
                                 '.L365:',
                                 'movq\t-24(%rbp), %rcx',
                                 'movq\t-24(%rbp), %rax',
                                 'movq\t-8(%rax), %rdx',
                                 'movq\t-16(%rax), %rax',
                                 'movq\t%rax, (%rcx)',
                                 'movq\t%rdx, 8(%rcx)',
                                 'subq\t$16, -24(%rbp)',
                                 '.L363:',
                                 'movq\t-24(%rbp), %rax',
                                 'cmpq\t-40(%rbp), %rax',
                                 'jbe\t.L364',
                                 'movl\t-16(%rbp), %edx',
                                 'movq\t-24(%rbp), %rax',
                                 'subq\t$16, %rax',
                                 'movl\t(%rax), %eax',
                                 'cmpl\t%eax, %edx',
                                 'jl\t.L365',
                                 '.L364:',
                                 'movq\t-24(%rbp), %rcx',
                                 'movq\t-16(%rbp), %rax',
                                 'movq\t-8(%rbp), %rdx',
                                 'movq\t%rax, (%rcx)',
                                 'movq\t%rdx, 8(%rcx)',
                                 '.L362:',
                                 'addq\t$16, -32(%rbp)',
                                 '.L361:',
                                 'movq\t-32(%rbp), %rax',
                                 'cmpq\t-48(%rbp), %rax',
                                 'jb\t.L366',
                                 'nop',
                                 'popq\t%rbp',
                                 '.cfi_def_cfa 7, 8',
                                 'ret',
                                 '.cfi_endproc',
                                 '.LFE48:',
                                 '.size\trs_insertsort_bed, '
                                 '.-rs_insertsort_bed',
                                 '.section\t.rodata',
                                 '.LC21:',
                                 '.string\t"n_bits <= RS_MAX_BITS"',
                                 '.text',
                                 '.globl\trs_sort_bed',
                                 '.type\trs_sort_bed, @function'],
                        'fCalled': [],
                        'fNames': []},
 'rs_sort_bed:': {'code': ['.LFB49:',
                           '.cfi_startproc',
                           'pushq\t%rbp',
                           '.cfi_def_cfa_offset 16',
                           '.cfi_offset 6, -16',
                           'movq\t%rsp, %rbp',
                           '.cfi_def_cfa_register 6',
                           'subq\t$4224, %rsp',
                           'movq\t%rdi, -4200(%rbp)',
                           'movq\t%rsi, -4208(%rbp)',
                           'movl\t%edx, -4212(%rbp)',
                           'movl\t%ecx, -4216(%rbp)',
                           'movq\t%fs:40, %rax',
                           'movq\t%rax, -8(%rbp)',
                           'xorl\t%eax, %eax',
                           'movl\t-4212(%rbp), %eax',
                           'movl\t$1, %edx',
                           'movl\t%eax, %ecx',
                           'sall\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'movl\t%eax, -4184(%rbp)',
                           'movl\t-4184(%rbp), %eax',
                           'subl\t$1, %eax',
                           'movl\t%eax, -4180(%rbp)',
                           'movl\t-4184(%rbp), %eax',
                           'cltq',
                           'salq\t$4, %rax',
                           'movq\t%rax, %rdx',
                           'leaq\t-4112(%rbp), %rax',
                           'addq\t%rdx, %rax',
                           'movq\t%rax, -4152(%rbp)',
                           'cmpl\t$8, -4212(%rbp)',
                           'jle\t.L368',
                           'leaq\t__PRETTY_FUNCTION__.5265(%rip), %rcx',
                           'movl\t$611, %edx',
                           'leaq\t.LC8(%rip), %rsi',
                           'leaq\t.LC21(%rip), %rdi',
                           'call\t__assert_fail@PLT',
                           '.L368:',
                           'leaq\t-4112(%rbp), %rax',
                           'movq\t%rax, -4168(%rbp)',
                           'jmp\t.L369',
                           '.L370:',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t-4200(%rbp), %rdx',
                           'movq\t%rdx, 8(%rax)',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t8(%rax), %rdx',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t%rdx, (%rax)',
                           'addq\t$16, -4168(%rbp)',
                           '.L369:',
                           'movq\t-4168(%rbp), %rax',
                           'cmpq\t-4152(%rbp), %rax',
                           'jne\t.L370',
                           'movq\t-4200(%rbp), %rax',
                           'movq\t%rax, -4176(%rbp)',
                           'jmp\t.L371',
                           '.L372:',
                           'movq\t-4176(%rbp), %rax',
                           'movl\t(%rax), %edx',
                           'movl\t-4216(%rbp), %eax',
                           'movl\t%eax, %ecx',
                           'sarl\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'andl\t-4180(%rbp), %eax',
                           'movslq\t%eax, %rdx',
                           'salq\t$4, %rdx',
                           'addq\t%rbp, %rdx',
                           'subq\t$4104, %rdx',
                           'movq\t(%rdx), %rdx',
                           'addq\t$16, %rdx',
                           'cltq',
                           'salq\t$4, %rax',
                           'addq\t%rbp, %rax',
                           'subq\t$4104, %rax',
                           'movq\t%rdx, (%rax)',
                           'addq\t$16, -4176(%rbp)',
                           '.L371:',
                           'movq\t-4176(%rbp), %rax',
                           'cmpq\t-4208(%rbp), %rax',
                           'jne\t.L372',
                           'leaq\t-4112(%rbp), %rax',
                           'addq\t$16, %rax',
                           'movq\t%rax, -4168(%rbp)',
                           'jmp\t.L373',
                           '.L374:',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t8(%rax), %rax',
                           'movq\t-4168(%rbp), %rdx',
                           'subq\t$16, %rdx',
                           'movq\t8(%rdx), %rdx',
                           'movq\t%rdx, %rcx',
                           'movq\t-4200(%rbp), %rdx',
                           'subq\t%rdx, %rcx',
                           'movq\t%rcx, %rdx',
                           'addq\t%rax, %rdx',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t%rdx, 8(%rax)',
                           'movq\t-4168(%rbp), %rax',
                           'subq\t$16, %rax',
                           'movq\t8(%rax), %rdx',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t%rdx, (%rax)',
                           'addq\t$16, -4168(%rbp)',
                           '.L373:',
                           'movq\t-4168(%rbp), %rax',
                           'cmpq\t-4152(%rbp), %rax',
                           'jne\t.L374',
                           'leaq\t-4112(%rbp), %rax',
                           'movq\t%rax, -4168(%rbp)',
                           'jmp\t.L375',
                           '.L380:',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t(%rax), %rdx',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t8(%rax), %rax',
                           'cmpq\t%rax, %rdx',
                           'je\t.L376',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'movl\t(%rax), %edx',
                           'movl\t-4216(%rbp), %eax',
                           'movl\t%eax, %ecx',
                           'sarl\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'andl\t-4180(%rbp), %eax',
                           'cltq',
                           'salq\t$4, %rax',
                           'movq\t%rax, %rdx',
                           'leaq\t-4112(%rbp), %rax',
                           'addq\t%rdx, %rax',
                           'movq\t%rax, -4160(%rbp)',
                           'movq\t-4160(%rbp), %rax',
                           'cmpq\t-4168(%rbp), %rax',
                           'je\t.L377',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'movq\t8(%rax), %rdx',
                           'movq\t(%rax), %rax',
                           'movq\t%rax, -4144(%rbp)',
                           'movq\t%rdx, -4136(%rbp)',
                           '.L378:',
                           'movq\t-4144(%rbp), %rax',
                           'movq\t-4136(%rbp), %rdx',
                           'movq\t%rax, -4128(%rbp)',
                           'movq\t%rdx, -4120(%rbp)',
                           'movq\t-4160(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'movq\t8(%rax), %rdx',
                           'movq\t(%rax), %rax',
                           'movq\t%rax, -4144(%rbp)',
                           'movq\t%rdx, -4136(%rbp)',
                           'movq\t-4160(%rbp), %rax',
                           'movq\t(%rax), %rcx',
                           'leaq\t16(%rcx), %rdx',
                           'movq\t-4160(%rbp), %rax',
                           'movq\t%rdx, (%rax)',
                           'movq\t-4128(%rbp), %rax',
                           'movq\t-4120(%rbp), %rdx',
                           'movq\t%rax, (%rcx)',
                           'movq\t%rdx, 8(%rcx)',
                           'movl\t-4144(%rbp), %edx',
                           'movl\t-4216(%rbp), %eax',
                           'movl\t%eax, %ecx',
                           'sarl\t%cl, %edx',
                           'movl\t%edx, %eax',
                           'andl\t-4180(%rbp), %eax',
                           'cltq',
                           'salq\t$4, %rax',
                           'movq\t%rax, %rdx',
                           'leaq\t-4112(%rbp), %rax',
                           'addq\t%rdx, %rax',
                           'movq\t%rax, -4160(%rbp)',
                           'movq\t-4160(%rbp), %rax',
                           'cmpq\t-4168(%rbp), %rax',
                           'jne\t.L378',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t(%rax), %rcx',
                           'leaq\t16(%rcx), %rdx',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t%rdx, (%rax)',
                           'movq\t-4144(%rbp), %rax',
                           'movq\t-4136(%rbp), %rdx',
                           'movq\t%rax, (%rcx)',
                           'movq\t%rdx, 8(%rcx)',
                           'jmp\t.L375',
                           '.L377:',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'leaq\t16(%rax), %rdx',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t%rdx, (%rax)',
                           'jmp\t.L375',
                           '.L376:',
                           'addq\t$16, -4168(%rbp)',
                           '.L375:',
                           'movq\t-4168(%rbp), %rax',
                           'cmpq\t-4152(%rbp), %rax',
                           'jne\t.L380',
                           'movq\t-4200(%rbp), %rax',
                           'movq\t%rax, -4112(%rbp)',
                           'leaq\t-4112(%rbp), %rax',
                           'addq\t$16, %rax',
                           'movq\t%rax, -4168(%rbp)',
                           'jmp\t.L381',
                           '.L382:',
                           'movq\t-4168(%rbp), %rax',
                           'subq\t$16, %rax',
                           'movq\t8(%rax), %rdx',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t%rdx, (%rax)',
                           'addq\t$16, -4168(%rbp)',
                           '.L381:',
                           'movq\t-4168(%rbp), %rax',
                           'cmpq\t-4152(%rbp), %rax',
                           'jne\t.L382',
                           'cmpl\t$0, -4216(%rbp)',
                           'je\t.L391',
                           'movl\t-4216(%rbp), %eax',
                           'cmpl\t-4212(%rbp), %eax',
                           'jle\t.L384',
                           'movl\t-4216(%rbp), %eax',
                           'subl\t-4212(%rbp), %eax',
                           'jmp\t.L385',
                           '.L384:',
                           'movl\t$0, %eax',
                           '.L385:',
                           'movl\t%eax, -4216(%rbp)',
                           'leaq\t-4112(%rbp), %rax',
                           'movq\t%rax, -4168(%rbp)',
                           'jmp\t.L386',
                           '.L389:',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t8(%rax), %rax',
                           'movq\t%rax, %rdx',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'subq\t%rax, %rdx',
                           'movq\t%rdx, %rax',
                           'cmpq\t$1024, %rax',
                           'jle\t.L387',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t8(%rax), %rsi',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'movl\t-4216(%rbp), %ecx',
                           'movl\t-4212(%rbp), %edx',
                           'movq\t%rax, %rdi',
                           'call\trs_sort_bed',
                           'jmp\t.L388',
                           '.L387:',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t8(%rax), %rax',
                           'movq\t%rax, %rdx',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'subq\t%rax, %rdx',
                           'movq\t%rdx, %rax',
                           'cmpq\t$16, %rax',
                           'jle\t.L388',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t8(%rax), %rdx',
                           'movq\t-4168(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'movq\t%rdx, %rsi',
                           'movq\t%rax, %rdi',
                           'call\trs_insertsort_bed',
                           '.L388:',
                           'addq\t$16, -4168(%rbp)',
                           '.L386:',
                           'movq\t-4168(%rbp), %rax',
                           'cmpq\t-4152(%rbp), %rax',
                           'jne\t.L389',
                           '.L391:',
                           'nop',
                           'movq\t-8(%rbp), %rax',
                           'xorq\t%fs:40, %rax',
                           'je\t.L390',
                           'call\t__stack_chk_fail@PLT',
                           '.L390:',
                           'leave',
                           '.cfi_def_cfa 7, 8',
                           'ret',
                           '.cfi_endproc',
                           '.LFE49:',
                           '.size\trs_sort_bed, .-rs_sort_bed',
                           '.globl\tradix_sort_bed',
                           '.type\tradix_sort_bed, @function'],
                  'fCalled': ['__assert_fail@PLT:',
                              'rs_sort_bed:',
                              'rs_insertsort_bed:',
                              '__stack_chk_fail@PLT:'],
                  'fNames': ['rs_sort_bed:', 'rs_insertsort_bed:'],
                  'rs_insertsort_bed:': ['.file\t"index.c"',
                                         '.text',
                                         '.section\t.rodata',
                                         '.align 8',
                                         '.type\t__ac_HASH_UPPER, @object',
                                         '.size\t__ac_HASH_UPPER, 8'],
                  'rs_sort_bed:': ['.LFB49:',
                                   '.cfi_startproc',
                                   'pushq\t%rbp',
                                   '.cfi_def_cfa_offset 16',
                                   '.cfi_offset 6, -16',
                                   'movq\t%rsp, %rbp',
                                   '.cfi_def_cfa_register 6',
                                   'subq\t$4224, %rsp',
                                   'movq\t%rdi, -4200(%rbp)',
                                   'movq\t%rsi, -4208(%rbp)',
                                   'movl\t%edx, -4212(%rbp)',
                                   'movl\t%ecx, -4216(%rbp)',
                                   'movq\t%fs:40, %rax',
                                   'movq\t%rax, -8(%rbp)',
                                   'xorl\t%eax, %eax',
                                   'movl\t-4212(%rbp), %eax',
                                   'movl\t$1, %edx',
                                   'movl\t%eax, %ecx',
                                   'sall\t%cl, %edx',
                                   'movl\t%edx, %eax',
                                   'movl\t%eax, -4184(%rbp)',
                                   'movl\t-4184(%rbp), %eax',
                                   'subl\t$1, %eax',
                                   'movl\t%eax, -4180(%rbp)',
                                   'movl\t-4184(%rbp), %eax',
                                   'cltq',
                                   'salq\t$4, %rax',
                                   'movq\t%rax, %rdx',
                                   'leaq\t-4112(%rbp), %rax',
                                   'addq\t%rdx, %rax',
                                   'movq\t%rax, -4152(%rbp)',
                                   'cmpl\t$8, -4212(%rbp)',
                                   'jle\t.L368',
                                   'leaq\t__PRETTY_FUNCTION__.5265(%rip), %rcx',
                                   'movl\t$611, %edx',
                                   'leaq\t.LC8(%rip), %rsi',
                                   'leaq\t.LC21(%rip), %rdi',
                                   'call\t__assert_fail@PLT',
                                   '.L368:',
                                   'leaq\t-4112(%rbp), %rax',
                                   'movq\t%rax, -4168(%rbp)',
                                   'jmp\t.L369',
                                   '.L370:',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t-4200(%rbp), %rdx',
                                   'movq\t%rdx, 8(%rax)',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t8(%rax), %rdx',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t%rdx, (%rax)',
                                   'addq\t$16, -4168(%rbp)',
                                   '.L369:',
                                   'movq\t-4168(%rbp), %rax',
                                   'cmpq\t-4152(%rbp), %rax',
                                   'jne\t.L370',
                                   'movq\t-4200(%rbp), %rax',
                                   'movq\t%rax, -4176(%rbp)',
                                   'jmp\t.L371',
                                   '.L372:',
                                   'movq\t-4176(%rbp), %rax',
                                   'movl\t(%rax), %edx',
                                   'movl\t-4216(%rbp), %eax',
                                   'movl\t%eax, %ecx',
                                   'sarl\t%cl, %edx',
                                   'movl\t%edx, %eax',
                                   'andl\t-4180(%rbp), %eax',
                                   'movslq\t%eax, %rdx',
                                   'salq\t$4, %rdx',
                                   'addq\t%rbp, %rdx',
                                   'subq\t$4104, %rdx',
                                   'movq\t(%rdx), %rdx',
                                   'addq\t$16, %rdx',
                                   'cltq',
                                   'salq\t$4, %rax',
                                   'addq\t%rbp, %rax',
                                   'subq\t$4104, %rax',
                                   'movq\t%rdx, (%rax)',
                                   'addq\t$16, -4176(%rbp)',
                                   '.L371:',
                                   'movq\t-4176(%rbp), %rax',
                                   'cmpq\t-4208(%rbp), %rax',
                                   'jne\t.L372',
                                   'leaq\t-4112(%rbp), %rax',
                                   'addq\t$16, %rax',
                                   'movq\t%rax, -4168(%rbp)',
                                   'jmp\t.L373',
                                   '.L374:',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t8(%rax), %rax',
                                   'movq\t-4168(%rbp), %rdx',
                                   'subq\t$16, %rdx',
                                   'movq\t8(%rdx), %rdx',
                                   'movq\t%rdx, %rcx',
                                   'movq\t-4200(%rbp), %rdx',
                                   'subq\t%rdx, %rcx',
                                   'movq\t%rcx, %rdx',
                                   'addq\t%rax, %rdx',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t%rdx, 8(%rax)',
                                   'movq\t-4168(%rbp), %rax',
                                   'subq\t$16, %rax',
                                   'movq\t8(%rax), %rdx',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t%rdx, (%rax)',
                                   'addq\t$16, -4168(%rbp)',
                                   '.L373:',
                                   'movq\t-4168(%rbp), %rax',
                                   'cmpq\t-4152(%rbp), %rax',
                                   'jne\t.L374',
                                   'leaq\t-4112(%rbp), %rax',
                                   'movq\t%rax, -4168(%rbp)',
                                   'jmp\t.L375',
                                   '.L380:',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t(%rax), %rdx',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t8(%rax), %rax',
                                   'cmpq\t%rax, %rdx',
                                   'je\t.L376',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t(%rax), %rax',
                                   'movl\t(%rax), %edx',
                                   'movl\t-4216(%rbp), %eax',
                                   'movl\t%eax, %ecx',
                                   'sarl\t%cl, %edx',
                                   'movl\t%edx, %eax',
                                   'andl\t-4180(%rbp), %eax',
                                   'cltq',
                                   'salq\t$4, %rax',
                                   'movq\t%rax, %rdx',
                                   'leaq\t-4112(%rbp), %rax',
                                   'addq\t%rdx, %rax',
                                   'movq\t%rax, -4160(%rbp)',
                                   'movq\t-4160(%rbp), %rax',
                                   'cmpq\t-4168(%rbp), %rax',
                                   'je\t.L377',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t(%rax), %rax',
                                   'movq\t8(%rax), %rdx',
                                   'movq\t(%rax), %rax',
                                   'movq\t%rax, -4144(%rbp)',
                                   'movq\t%rdx, -4136(%rbp)',
                                   '.L378:',
                                   'movq\t-4144(%rbp), %rax',
                                   'movq\t-4136(%rbp), %rdx',
                                   'movq\t%rax, -4128(%rbp)',
                                   'movq\t%rdx, -4120(%rbp)',
                                   'movq\t-4160(%rbp), %rax',
                                   'movq\t(%rax), %rax',
                                   'movq\t8(%rax), %rdx',
                                   'movq\t(%rax), %rax',
                                   'movq\t%rax, -4144(%rbp)',
                                   'movq\t%rdx, -4136(%rbp)',
                                   'movq\t-4160(%rbp), %rax',
                                   'movq\t(%rax), %rcx',
                                   'leaq\t16(%rcx), %rdx',
                                   'movq\t-4160(%rbp), %rax',
                                   'movq\t%rdx, (%rax)',
                                   'movq\t-4128(%rbp), %rax',
                                   'movq\t-4120(%rbp), %rdx',
                                   'movq\t%rax, (%rcx)',
                                   'movq\t%rdx, 8(%rcx)',
                                   'movl\t-4144(%rbp), %edx',
                                   'movl\t-4216(%rbp), %eax',
                                   'movl\t%eax, %ecx',
                                   'sarl\t%cl, %edx',
                                   'movl\t%edx, %eax',
                                   'andl\t-4180(%rbp), %eax',
                                   'cltq',
                                   'salq\t$4, %rax',
                                   'movq\t%rax, %rdx',
                                   'leaq\t-4112(%rbp), %rax',
                                   'addq\t%rdx, %rax',
                                   'movq\t%rax, -4160(%rbp)',
                                   'movq\t-4160(%rbp), %rax',
                                   'cmpq\t-4168(%rbp), %rax',
                                   'jne\t.L378',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t(%rax), %rcx',
                                   'leaq\t16(%rcx), %rdx',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t%rdx, (%rax)',
                                   'movq\t-4144(%rbp), %rax',
                                   'movq\t-4136(%rbp), %rdx',
                                   'movq\t%rax, (%rcx)',
                                   'movq\t%rdx, 8(%rcx)',
                                   'jmp\t.L375',
                                   '.L377:',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t(%rax), %rax',
                                   'leaq\t16(%rax), %rdx',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t%rdx, (%rax)',
                                   'jmp\t.L375',
                                   '.L376:',
                                   'addq\t$16, -4168(%rbp)',
                                   '.L375:',
                                   'movq\t-4168(%rbp), %rax',
                                   'cmpq\t-4152(%rbp), %rax',
                                   'jne\t.L380',
                                   'movq\t-4200(%rbp), %rax',
                                   'movq\t%rax, -4112(%rbp)',
                                   'leaq\t-4112(%rbp), %rax',
                                   'addq\t$16, %rax',
                                   'movq\t%rax, -4168(%rbp)',
                                   'jmp\t.L381',
                                   '.L382:',
                                   'movq\t-4168(%rbp), %rax',
                                   'subq\t$16, %rax',
                                   'movq\t8(%rax), %rdx',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t%rdx, (%rax)',
                                   'addq\t$16, -4168(%rbp)',
                                   '.L381:',
                                   'movq\t-4168(%rbp), %rax',
                                   'cmpq\t-4152(%rbp), %rax',
                                   'jne\t.L382',
                                   'cmpl\t$0, -4216(%rbp)',
                                   'je\t.L391',
                                   'movl\t-4216(%rbp), %eax',
                                   'cmpl\t-4212(%rbp), %eax',
                                   'jle\t.L384',
                                   'movl\t-4216(%rbp), %eax',
                                   'subl\t-4212(%rbp), %eax',
                                   'jmp\t.L385',
                                   '.L384:',
                                   'movl\t$0, %eax',
                                   '.L385:',
                                   'movl\t%eax, -4216(%rbp)',
                                   'leaq\t-4112(%rbp), %rax',
                                   'movq\t%rax, -4168(%rbp)',
                                   'jmp\t.L386',
                                   '.L389:',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t8(%rax), %rax',
                                   'movq\t%rax, %rdx',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t(%rax), %rax',
                                   'subq\t%rax, %rdx',
                                   'movq\t%rdx, %rax',
                                   'cmpq\t$1024, %rax',
                                   'jle\t.L387',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t8(%rax), %rsi',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t(%rax), %rax',
                                   'movl\t-4216(%rbp), %ecx',
                                   'movl\t-4212(%rbp), %edx',
                                   'movq\t%rax, %rdi',
                                   'call\trs_sort_bed',
                                   'jmp\t.L388',
                                   '.L387:',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t8(%rax), %rax',
                                   'movq\t%rax, %rdx',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t(%rax), %rax',
                                   'subq\t%rax, %rdx',
                                   'movq\t%rdx, %rax',
                                   'cmpq\t$16, %rax',
                                   'jle\t.L388',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t8(%rax), %rdx',
                                   'movq\t-4168(%rbp), %rax',
                                   'movq\t(%rax), %rax',
                                   'movq\t%rdx, %rsi',
                                   'movq\t%rax, %rdi',
                                   'call\trs_insertsort_bed',
                                   '.L388:',
                                   'addq\t$16, -4168(%rbp)',
                                   '.L386:',
                                   'movq\t-4168(%rbp), %rax',
                                   'cmpq\t-4152(%rbp), %rax',
                                   'jne\t.L389',
                                   '.L391:',
                                   'nop',
                                   'movq\t-8(%rbp), %rax',
                                   'xorq\t%fs:40, %rax',
                                   'je\t.L390',
                                   'call\t__stack_chk_fail@PLT',
                                   '.L390:',
                                   'leave',
                                   '.cfi_def_cfa 7, 8',
                                   'ret',
                                   '.cfi_endproc',
                                   '.LFE49:',
                                   '.size\trs_sort_bed, .-rs_sort_bed',
                                   '.globl\tradix_sort_bed',
                                   '.type\tradix_sort_bed, @function']},
 'worker_pipeline:': {'code': ['.LFB35:',
                               '.cfi_startproc',
                               'pushq\t%rbp',
                               '.cfi_def_cfa_offset 16',
                               '.cfi_offset 6, -16',
                               'movq\t%rsp, %rbp',
                               '.cfi_def_cfa_register 6',
                               'pushq\t%rbx',
                               'subq\t$152, %rsp',
                               '.cfi_offset 3, -24',
                               'movq\t%rdi, -136(%rbp)',
                               'movl\t%esi, -140(%rbp)',
                               'movq\t%rdx, -152(%rbp)',
                               'movq\t-136(%rbp), %rax',
                               'movq\t%rax, -88(%rbp)',
                               'cmpl\t$0, -140(%rbp)',
                               'jne\t.L234',
                               'movq\t-88(%rbp), %rax',
                               'movq\t16(%rax), %rdx',
                               'movq\t-88(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'cmpq\t%rax, %rdx',
                               'jbe\t.L235',
                               'movl\t$0, %eax',
                               'jmp\t.L236',
                               '.L235:',
                               'movl\t$40, %esi',
                               'movl\t$1, %edi',
                               'call\tcalloc@PLT',
                               'movq\t%rax, -56(%rbp)',
                               'movq\t-56(%rbp), %rdx',
                               'movq\t-88(%rbp), %rax',
                               'movl\t(%rax), %esi',
                               'movq\t-88(%rbp), %rax',
                               'movq\t24(%rax), %rax',
                               'movq\t%rdx, %rcx',
                               'movl\t$0, %edx',
                               'movq\t%rax, %rdi',
                               'call\tmm_bseq_read@PLT',
                               'movq\t%rax, %rdx',
                               'movq\t-56(%rbp), %rax',
                               'movq\t%rdx, 8(%rax)',
                               'movq\t-56(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'testq\t%rax, %rax',
                               'je\t.L237',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t16(%rax), %eax',
                               'movl\t%eax, %edx',
                               'movq\t-56(%rbp), %rax',
                               'movl\t(%rax), %eax',
                               'cltq',
                               'addq\t%rax, %rdx',
                               'movl\t$4294967295, %eax',
                               'cmpq\t%rax, %rdx',
                               'jbe\t.L238',
                               'leaq\t__PRETTY_FUNCTION__.4945(%rip), %rcx',
                               'movl\t$291, %edx',
                               'leaq\t.LC8(%rip), %rsi',
                               'leaq\t.LC11(%rip), %rdi',
                               'call\t__assert_fail@PLT',
                               '.L238:',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t16(%rax), %eax',
                               'movl\t%eax, -108(%rbp)',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t16(%rax), %edx',
                               'movq\t-56(%rbp), %rax',
                               'movl\t(%rax), %eax',
                               'addl\t%edx, %eax',
                               'movl\t%eax, -104(%rbp)',
                               'subl\t$1, -104(%rbp)',
                               'movl\t-104(%rbp), %eax',
                               'shrl\t%eax',
                               'orl\t%eax, -104(%rbp)',
                               'movl\t-104(%rbp), %eax',
                               'shrl\t$2, %eax',
                               'orl\t%eax, -104(%rbp)',
                               'movl\t-104(%rbp), %eax',
                               'shrl\t$4, %eax',
                               'orl\t%eax, -104(%rbp)',
                               'movl\t-104(%rbp), %eax',
                               'shrl\t$8, %eax',
                               'orl\t%eax, -104(%rbp)',
                               'movl\t-104(%rbp), %eax',
                               'shrl\t$16, %eax',
                               'orl\t%eax, -104(%rbp)',
                               'addl\t$1, -104(%rbp)',
                               'subl\t$1, -108(%rbp)',
                               'movl\t-108(%rbp), %eax',
                               'shrl\t%eax',
                               'orl\t%eax, -108(%rbp)',
                               'movl\t-108(%rbp), %eax',
                               'shrl\t$2, %eax',
                               'orl\t%eax, -108(%rbp)',
                               'movl\t-108(%rbp), %eax',
                               'shrl\t$4, %eax',
                               'orl\t%eax, -108(%rbp)',
                               'movl\t-108(%rbp), %eax',
                               'shrl\t$8, %eax',
                               'orl\t%eax, -108(%rbp)',
                               'movl\t-108(%rbp), %eax',
                               'shrl\t$16, %eax',
                               'orl\t%eax, -108(%rbp)',
                               'addl\t$1, -108(%rbp)',
                               'movl\t-108(%rbp), %eax',
                               'cmpl\t-104(%rbp), %eax',
                               'je\t.L239',
                               'movl\t-104(%rbp), %edx',
                               'movq\t%rdx, %rax',
                               'addq\t%rax, %rax',
                               'addq\t%rdx, %rax',
                               'salq\t$3, %rax',
                               'movq\t%rax, %rsi',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t24(%rax), %rcx',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t56(%rax), %rax',
                               'movq\t-88(%rbp), %rdx',
                               'movq\t32(%rdx), %rbx',
                               'movq\t%rsi, %rdx',
                               'movq\t%rcx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\tkrealloc@PLT',
                               'movq\t%rax, 24(%rbx)',
                               '.L239:',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t12(%rax), %eax',
                               'andl\t$2, %eax',
                               'testl\t%eax, %eax',
                               'jne\t.L240',
                               'movl\t$0, -116(%rbp)',
                               'movq\t$0, -96(%rbp)',
                               'jmp\t.L241',
                               '.L242:',
                               'movq\t-56(%rbp), %rax',
                               'movq\t8(%rax), %rcx',
                               'movl\t-116(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t%rdx, %rax',
                               'salq\t$2, %rax',
                               'addq\t%rdx, %rax',
                               'salq\t$3, %rax',
                               'addq\t%rcx, %rax',
                               'movl\t(%rax), %eax',
                               'cltq',
                               'addq\t%rax, -96(%rbp)',
                               'addl\t$1, -116(%rbp)',
                               '.L241:',
                               'movq\t-56(%rbp), %rax',
                               'movl\t(%rax), %eax',
                               'cmpl\t%eax, -116(%rbp)',
                               'jl\t.L242',
                               'movq\t-88(%rbp), %rax',
                               'movq\t16(%rax), %rax',
                               'addq\t$7, %rax',
                               'shrq\t$3, %rax',
                               'movq\t%rax, -48(%rbp)',
                               'movq\t-88(%rbp), %rax',
                               'movq\t16(%rax), %rdx',
                               'movq\t-96(%rbp), %rax',
                               'addq\t%rdx, %rax',
                               'addq\t$7, %rax',
                               'shrq\t$3, %rax',
                               'movq\t%rax, -40(%rbp)',
                               'subq\t$1, -48(%rbp)',
                               'movq\t-48(%rbp), %rax',
                               'shrq\t%rax',
                               'orq\t%rax, -48(%rbp)',
                               'movq\t-48(%rbp), %rax',
                               'shrq\t$2, %rax',
                               'orq\t%rax, -48(%rbp)',
                               'movq\t-48(%rbp), %rax',
                               'shrq\t$4, %rax',
                               'orq\t%rax, -48(%rbp)',
                               'movq\t-48(%rbp), %rax',
                               'shrq\t$8, %rax',
                               'orq\t%rax, -48(%rbp)',
                               'movq\t-48(%rbp), %rax',
                               'shrq\t$16, %rax',
                               'orq\t%rax, -48(%rbp)',
                               'movq\t-48(%rbp), %rax',
                               'shrq\t$32, %rax',
                               'orq\t%rax, -48(%rbp)',
                               'addq\t$1, -48(%rbp)',
                               'subq\t$1, -40(%rbp)',
                               'movq\t-40(%rbp), %rax',
                               'shrq\t%rax',
                               'orq\t%rax, -40(%rbp)',
                               'movq\t-40(%rbp), %rax',
                               'shrq\t$2, %rax',
                               'orq\t%rax, -40(%rbp)',
                               'movq\t-40(%rbp), %rax',
                               'shrq\t$4, %rax',
                               'orq\t%rax, -40(%rbp)',
                               'movq\t-40(%rbp), %rax',
                               'shrq\t$8, %rax',
                               'orq\t%rax, -40(%rbp)',
                               'movq\t-40(%rbp), %rax',
                               'shrq\t$16, %rax',
                               'orq\t%rax, -40(%rbp)',
                               'movq\t-40(%rbp), %rax',
                               'shrq\t$32, %rax',
                               'orq\t%rax, -40(%rbp)',
                               'addq\t$1, -40(%rbp)',
                               'movq\t-48(%rbp), %rax',
                               'cmpq\t-40(%rbp), %rax',
                               'je\t.L240',
                               'movq\t-40(%rbp), %rax',
                               'leaq\t0(,%rax,4), %rcx',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t-88(%rbp), %rdx',
                               'movq\t32(%rdx), %rbx',
                               'movq\t%rcx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\trealloc@PLT',
                               'movq\t%rax, 32(%rbx)',
                               'movq\t-40(%rbp), %rax',
                               'subq\t-48(%rbp), %rax',
                               'leaq\t0(,%rax,4), %rdx',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t-48(%rbp), %rcx',
                               'salq\t$2, %rcx',
                               'addq\t%rcx, %rax',
                               'movl\t$0, %esi',
                               'movq\t%rax, %rdi',
                               'call\tmemset@PLT',
                               '.L240:',
                               'movl\t$0, -116(%rbp)',
                               'jmp\t.L243',
                               '.L249:',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t24(%rax), %rdx',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t16(%rax), %eax',
                               'movl\t%eax, %ecx',
                               'movq\t%rcx, %rax',
                               'addq\t%rax, %rax',
                               'addq\t%rcx, %rax',
                               'salq\t$3, %rax',
                               'addq\t%rdx, %rax',
                               'movq\t%rax, -32(%rbp)',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t12(%rax), %eax',
                               'andl\t$4, %eax',
                               'testl\t%eax, %eax',
                               'jne\t.L244',
                               'movq\t-56(%rbp), %rax',
                               'movq\t8(%rax), %rcx',
                               'movl\t-116(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t%rdx, %rax',
                               'salq\t$2, %rax',
                               'addq\t%rdx, %rax',
                               'salq\t$3, %rax',
                               'addq\t%rcx, %rax',
                               'movq\t8(%rax), %rax',
                               'movq\t%rax, %rdi',
                               'call\tstrlen@PLT',
                               'leaq\t1(%rax), %rdx',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t56(%rax), %rax',
                               'movq\t%rdx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\tkmalloc@PLT',
                               'movq\t%rax, %rdx',
                               'movq\t-32(%rbp), %rax',
                               'movq\t%rdx, (%rax)',
                               'movq\t-56(%rbp), %rax',
                               'movq\t8(%rax), %rcx',
                               'movl\t-116(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t%rdx, %rax',
                               'salq\t$2, %rax',
                               'addq\t%rdx, %rax',
                               'salq\t$3, %rax',
                               'addq\t%rcx, %rax',
                               'movq\t8(%rax), %rdx',
                               'movq\t-32(%rbp), %rax',
                               'movq\t(%rax), %rax',
                               'movq\t%rdx, %rsi',
                               'movq\t%rax, %rdi',
                               'call\tstrcpy@PLT',
                               'jmp\t.L245',
                               '.L244:',
                               'movq\t-32(%rbp), %rax',
                               'movq\t$0, (%rax)',
                               '.L245:',
                               'movq\t-56(%rbp), %rax',
                               'movq\t8(%rax), %rcx',
                               'movl\t-116(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t%rdx, %rax',
                               'salq\t$2, %rax',
                               'addq\t%rdx, %rax',
                               'salq\t$3, %rax',
                               'addq\t%rcx, %rax',
                               'movl\t(%rax), %eax',
                               'movl\t%eax, %edx',
                               'movq\t-32(%rbp), %rax',
                               'movl\t%edx, 16(%rax)',
                               'movq\t-88(%rbp), %rax',
                               'movq\t16(%rax), %rdx',
                               'movq\t-32(%rbp), %rax',
                               'movq\t%rdx, 8(%rax)',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t12(%rax), %eax',
                               'andl\t$2, %eax',
                               'testl\t%eax, %eax',
                               'jne\t.L246',
                               'movl\t$0, -112(%rbp)',
                               'jmp\t.L247',
                               '.L248:',
                               'movq\t-88(%rbp), %rax',
                               'movq\t16(%rax), %rdx',
                               'movl\t-112(%rbp), %eax',
                               'addq\t%rdx, %rax',
                               'movq\t%rax, -24(%rbp)',
                               'movq\t-56(%rbp), %rax',
                               'movq\t8(%rax), %rcx',
                               'movl\t-116(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t%rdx, %rax',
                               'salq\t$2, %rax',
                               'addq\t%rdx, %rax',
                               'salq\t$3, %rax',
                               'addq\t%rcx, %rax',
                               'movq\t16(%rax), %rdx',
                               'movl\t-112(%rbp), %eax',
                               'addq\t%rdx, %rax',
                               'movzbl\t(%rax), %eax',
                               'movzbl\t%al, %eax',
                               'movslq\t%eax, %rdx',
                               'leaq\tseq_nt4_table(%rip), %rax',
                               'movzbl\t(%rdx,%rax), %eax',
                               'movzbl\t%al, %eax',
                               'movl\t%eax, -100(%rbp)',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t-24(%rbp), %rdx',
                               'shrq\t$3, %rdx',
                               'salq\t$2, %rdx',
                               'addq\t%rdx, %rax',
                               'movl\t(%rax), %edx',
                               'movl\t-100(%rbp), %esi',
                               'movq\t-24(%rbp), %rax',
                               'sall\t$2, %eax',
                               'andl\t$28, %eax',
                               'movl\t%eax, %ecx',
                               'sall\t%cl, %esi',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t-24(%rbp), %rcx',
                               'shrq\t$3, %rcx',
                               'salq\t$2, %rcx',
                               'addq\t%rcx, %rax',
                               'orl\t%esi, %edx',
                               'movl\t%edx, (%rax)',
                               'addl\t$1, -112(%rbp)',
                               '.L247:',
                               'movq\t-32(%rbp), %rax',
                               'movl\t16(%rax), %eax',
                               'cmpl\t%eax, -112(%rbp)',
                               'jb\t.L248',
                               '.L246:',
                               'movq\t-88(%rbp), %rax',
                               'movq\t16(%rax), %rdx',
                               'movq\t-32(%rbp), %rax',
                               'movl\t16(%rax), %eax',
                               'movl\t%eax, %eax',
                               'addq\t%rax, %rdx',
                               'movq\t-88(%rbp), %rax',
                               'movq\t%rdx, 16(%rax)',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t16(%rax), %edx',
                               'leal\t1(%rdx), %ecx',
                               'movl\t%ecx, 16(%rax)',
                               'movq\t-56(%rbp), %rax',
                               'movq\t8(%rax), %rsi',
                               'movl\t-116(%rbp), %eax',
                               'movslq\t%eax, %rcx',
                               'movq\t%rcx, %rax',
                               'salq\t$2, %rax',
                               'addq\t%rcx, %rax',
                               'salq\t$3, %rax',
                               'addq\t%rsi, %rax',
                               'movl\t%edx, 4(%rax)',
                               'addl\t$1, -116(%rbp)',
                               '.L243:',
                               'movq\t-56(%rbp), %rax',
                               'movl\t(%rax), %eax',
                               'cmpl\t%eax, -116(%rbp)',
                               'jl\t.L249',
                               'movq\t-56(%rbp), %rax',
                               'jmp\t.L236',
                               '.L237:',
                               'movq\t-56(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tfree@PLT',
                               'jmp\t.L250',
                               '.L234:',
                               'cmpl\t$1, -140(%rbp)',
                               'jne\t.L251',
                               'movq\t-152(%rbp), %rax',
                               'movq\t%rax, -72(%rbp)',
                               'movl\t$0, -116(%rbp)',
                               'jmp\t.L252',
                               '.L255:',
                               'movq\t-72(%rbp), %rax',
                               'movq\t8(%rax), %rcx',
                               'movl\t-116(%rbp), %eax',
                               'movslq\t%eax, %rdx',
                               'movq\t%rdx, %rax',
                               'salq\t$2, %rax',
                               'addq\t%rdx, %rax',
                               'salq\t$3, %rax',
                               'addq\t%rcx, %rax',
                               'movq\t%rax, -64(%rbp)',
                               'movq\t-64(%rbp), %rax',
                               'movl\t(%rax), %eax',
                               'testl\t%eax, %eax',
                               'jle\t.L253',
                               'movq\t-72(%rbp), %rax',
                               'leaq\t16(%rax), %r8',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t12(%rax), %eax',
                               'andl\t$1, %eax',
                               'movl\t%eax, %edi',
                               'movq\t-64(%rbp), %rax',
                               'movl\t4(%rax), %eax',
                               'movl\t%eax, %r9d',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t8(%rax), %esi',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t4(%rax), %ecx',
                               'movq\t-64(%rbp), %rax',
                               'movl\t(%rax), %edx',
                               'movq\t-64(%rbp), %rax',
                               'movq\t16(%rax), %rax',
                               'pushq\t%r8',
                               'pushq\t%rdi',
                               'movl\t%esi, %r8d',
                               'movq\t%rax, %rsi',
                               'movl\t$0, %edi',
                               'call\tmm_sketch@PLT',
                               'addq\t$16, %rsp',
                               'jmp\t.L254',
                               '.L253:',
                               'movl\tmm_verbose(%rip), %eax',
                               'cmpl\t$1, %eax',
                               'jle\t.L254',
                               'movq\t-64(%rbp), %rax',
                               'movq\t8(%rax), %rdx',
                               'movq\tstderr(%rip), %rax',
                               'leaq\t.LC12(%rip), %rsi',
                               'movq\t%rax, %rdi',
                               'movl\t$0, %eax',
                               'call\tfprintf@PLT',
                               '.L254:',
                               'movq\t-64(%rbp), %rax',
                               'movq\t16(%rax), %rax',
                               'movq\t%rax, %rdi',
                               'call\tfree@PLT',
                               'movq\t-64(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movq\t%rax, %rdi',
                               'call\tfree@PLT',
                               'addl\t$1, -116(%rbp)',
                               '.L252:',
                               'movq\t-72(%rbp), %rax',
                               'movl\t(%rax), %eax',
                               'cmpl\t%eax, -116(%rbp)',
                               'jl\t.L255',
                               'movq\t-72(%rbp), %rax',
                               'movq\t8(%rax), %rax',
                               'movq\t%rax, %rdi',
                               'call\tfree@PLT',
                               'movq\t-72(%rbp), %rax',
                               'movq\t$0, 8(%rax)',
                               'movq\t-72(%rbp), %rax',
                               'jmp\t.L236',
                               '.L251:',
                               'cmpl\t$2, -140(%rbp)',
                               'jne\t.L250',
                               'movq\t-152(%rbp), %rax',
                               'movq\t%rax, -80(%rbp)',
                               'movq\t-80(%rbp), %rax',
                               'movq\t32(%rax), %rdx',
                               'movq\t-80(%rbp), %rax',
                               'movq\t16(%rax), %rax',
                               'movl\t%eax, %ecx',
                               'movq\t-88(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movl\t%ecx, %esi',
                               'movq\t%rax, %rdi',
                               'call\tmm_idx_add',
                               'movq\t-80(%rbp), %rax',
                               'movq\t32(%rax), %rax',
                               'movq\t%rax, %rsi',
                               'movl\t$0, %edi',
                               'call\tkfree@PLT',
                               'movq\t-80(%rbp), %rax',
                               'movq\t%rax, %rdi',
                               'call\tfree@PLT',
                               '.L250:',
                               'movl\t$0, %eax',
                               '.L236:',
                               'movq\t-8(%rbp), %rbx',
                               'leave',
                               '.cfi_def_cfa 7, 8',
                               'ret',
                               '.cfi_endproc',
                               '.LFE35:',
                               '.size\tworker_pipeline, .-worker_pipeline',
                               '.section\t.rodata',
                               '.align 8',
                               '.LC13:',
                               '.string\t"[M::%s::%.3f*%.2f] collected '
                               'minimizers\\n"',
                               '.align 8',
                               '.LC14:',
                               '.string\t"[M::%s::%.3f*%.2f] sorted '
                               'minimizers\\n"',
                               '.text',
                               '.globl\tmm_idx_gen',
                               '.type\tmm_idx_gen, @function'],
                      'fCalled': ['calloc@PLT:',
                                  'mm_bseq_read@PLT:',
                                  '__assert_fail@PLT:',
                                  'krealloc@PLT:',
                                  'realloc@PLT:',
                                  'memset@PLT:',
                                  'strlen@PLT:',
                                  'kmalloc@PLT:',
                                  'strcpy@PLT:',
                                  'free@PLT:',
                                  'mm_sketch@PLT:',
                                  'fprintf@PLT:',
                                  'free@PLT:',
                                  'free@PLT:',
                                  'free@PLT:',
                                  'mm_idx_add:',
                                  'kfree@PLT:',
                                  'free@PLT:'],
                      'fNames': ['mm_idx_add:'],
                      'mm_idx_add:': ['.LFB34:',
                                      '.cfi_startproc',
                                      'pushq\t%rbp',
                                      '.cfi_def_cfa_offset 16',
                                      '.cfi_offset 6, -16',
                                      'movq\t%rsp, %rbp',
                                      '.cfi_def_cfa_register 6',
                                      'subq\t$48, %rsp',
                                      'movq\t%rdi, -24(%rbp)',
                                      'movl\t%esi, -28(%rbp)',
                                      'movq\t%rdx, -40(%rbp)',
                                      'movq\t-24(%rbp), %rax',
                                      'movl\t(%rax), %eax',
                                      'movl\t$1, %edx',
                                      'movl\t%eax, %ecx',
                                      'sall\t%cl, %edx',
                                      'movl\t%edx, %eax',
                                      'subl\t$1, %eax',
                                      'movl\t%eax, -12(%rbp)',
                                      'movl\t$0, -16(%rbp)',
                                      'jmp\t.L228',
                                      '.L232:',
                                      'movq\t-24(%rbp), %rax',
                                      'movq\t40(%rax), %rcx',
                                      'movl\t-16(%rbp), %eax',
                                      'cltq',
                                      'salq\t$4, %rax',
                                      'movq\t%rax, %rdx',
                                      'movq\t-40(%rbp), %rax',
                                      'addq\t%rdx, %rax',
                                      'movq\t(%rax), %rax',
                                      'shrq\t$8, %rax',
                                      'movq\t%rax, %rdx',
                                      'movl\t-12(%rbp), %eax',
                                      'cltq',
                                      'andq\t%rax, %rdx',
                                      'movq\t%rdx, %rax',
                                      'addq\t%rax, %rax',
                                      'addq\t%rdx, %rax',
                                      'salq\t$4, %rax',
                                      'addq\t%rcx, %rax',
                                      'movq\t%rax, -8(%rbp)',
                                      'movq\t-8(%rbp), %rax',
                                      'movq\t(%rax), %rdx',
                                      'movq\t-8(%rbp), %rax',
                                      'movq\t8(%rax), %rax',
                                      'cmpq\t%rax, %rdx',
                                      'jne\t.L229',
                                      'movq\t-8(%rbp), %rax',
                                      'movq\t8(%rax), %rax',
                                      'testq\t%rax, %rax',
                                      'je\t.L230',
                                      'movq\t-8(%rbp), %rax',
                                      'movq\t8(%rax), %rax',
                                      'leaq\t(%rax,%rax), %rdx',
                                      'jmp\t.L231',
                                      '.L230:',
                                      'movl\t$2, %edx',
                                      '.L231:',
                                      'movq\t-8(%rbp), %rax',
                                      'movq\t%rdx, 8(%rax)',
                                      'movq\t-8(%rbp), %rax',
                                      'movq\t8(%rax), %rax',
                                      'salq\t$4, %rax',
                                      'movq\t%rax, %rdx',
                                      'movq\t-8(%rbp), %rax',
                                      'movq\t16(%rax), %rax',
                                      'movq\t%rax, %rsi',
                                      'movl\t$0, %edi',
                                      'call\tkrealloc@PLT',
                                      'movq\t%rax, %rdx',
                                      'movq\t-8(%rbp), %rax',
                                      'movq\t%rdx, 16(%rax)',
                                      '.L229:',
                                      'movl\t-16(%rbp), %eax',
                                      'cltq',
                                      'salq\t$4, %rax',
                                      'movq\t%rax, %rdx',
                                      'movq\t-40(%rbp), %rax',
                                      'leaq\t(%rdx,%rax), %rsi',
                                      'movq\t-8(%rbp), %rax',
                                      'movq\t16(%rax), %rdi',
                                      'movq\t-8(%rbp), %rax',
                                      'movq\t(%rax), %rax',
                                      'leaq\t1(%rax), %rcx',
                                      'movq\t-8(%rbp), %rdx',
                                      'movq\t%rcx, (%rdx)',
                                      'salq\t$4, %rax',
                                      'leaq\t(%rdi,%rax), %rcx',
                                      'movq\t(%rsi), %rax',
                                      'movq\t8(%rsi), %rdx',
                                      'movq\t%rax, (%rcx)',
                                      'movq\t%rdx, 8(%rcx)',
                                      'addl\t$1, -16(%rbp)',
                                      '.L228:',
                                      'movl\t-16(%rbp), %eax',
                                      'cmpl\t-28(%rbp), %eax',
                                      'jl\t.L232',
                                      'nop',
                                      'leave',
                                      '.cfi_def_cfa 7, 8',
                                      'ret',
                                      '.cfi_endproc',
                                      '.LFE34:',
                                      '.size\tmm_idx_add, .-mm_idx_add',
                                      '.section\t.rodata',
                                      '.align 8',
                                      '.LC11:',
                                      '.string\t"(uint64_t)p->mi->n_seq + '
                                      's->n_seq <= UINT32_MAX"',
                                      '.align 8',
                                      '.LC12:',
                                      '.string\t"[WARNING] the length database '
                                      'sequence \'%s\' is 0\\n"',
                                      '.text',
                                      '.type\tworker_pipeline, @function']},
 'worker_post:': {'code': ['.LFB32:',
                           '.cfi_startproc',
                           'pushq\t%rbp',
                           '.cfi_def_cfa_offset 16',
                           '.cfi_offset 6, -16',
                           'movq\t%rsp, %rbp',
                           '.cfi_def_cfa_register 6',
                           'addq\t$-128, %rsp',
                           'movq\t%rdi, -104(%rbp)',
                           'movq\t%rsi, -112(%rbp)',
                           'movl\t%edx, -116(%rbp)',
                           'movq\t%fs:40, %rax',
                           'movq\t%rax, -8(%rbp)',
                           'xorl\t%eax, %eax',
                           'movq\t-104(%rbp), %rax',
                           'movq\t%rax, -40(%rbp)',
                           'movq\t-40(%rbp), %rax',
                           'movq\t40(%rax), %rcx',
                           'movq\t-112(%rbp), %rdx',
                           'movq\t%rdx, %rax',
                           'addq\t%rax, %rax',
                           'addq\t%rdx, %rax',
                           'salq\t$4, %rax',
                           'addq\t%rcx, %rax',
                           'movq\t%rax, -32(%rbp)',
                           'movq\t-32(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'testq\t%rax, %rax',
                           'je\t.L225',
                           'movq\t-32(%rbp), %rax',
                           'movq\t16(%rax), %rdx',
                           'movq\t-32(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'salq\t$4, %rax',
                           'addq\t%rax, %rdx',
                           'movq\t-32(%rbp), %rax',
                           'movq\t16(%rax), %rax',
                           'movq\t%rdx, %rsi',
                           'movq\t%rax, %rdi',
                           'call\tradix_sort_128x@PLT',
                           'movq\t$1, -64(%rbp)',
                           'movl\t$1, -80(%rbp)',
                           'movl\t$0, -76(%rbp)',
                           'movq\t-32(%rbp), %rax',
                           'movl\t$0, 24(%rax)',
                           'jmp\t.L205',
                           '.L210:',
                           'movq\t-32(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'cmpq\t%rax, -64(%rbp)',
                           'je\t.L206',
                           'movq\t-32(%rbp), %rax',
                           'movq\t16(%rax), %rax',
                           'movq\t-64(%rbp), %rdx',
                           'salq\t$4, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t(%rax), %rax',
                           'shrq\t$8, %rax',
                           'movq\t%rax, %rcx',
                           'movq\t-32(%rbp), %rax',
                           'movq\t16(%rax), %rax',
                           'movq\t-64(%rbp), %rdx',
                           'salq\t$4, %rdx',
                           'subq\t$16, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t(%rax), %rax',
                           'shrq\t$8, %rax',
                           'cmpq\t%rax, %rcx',
                           'je\t.L207',
                           '.L206:',
                           'addl\t$1, -76(%rbp)',
                           'cmpl\t$1, -80(%rbp)',
                           'jle\t.L208',
                           'movq\t-32(%rbp), %rax',
                           'movl\t24(%rax), %edx',
                           'movl\t-80(%rbp), %eax',
                           'addl\t%eax, %edx',
                           'movq\t-32(%rbp), %rax',
                           'movl\t%edx, 24(%rax)',
                           '.L208:',
                           'movl\t$1, -80(%rbp)',
                           'jmp\t.L209',
                           '.L207:',
                           'addl\t$1, -80(%rbp)',
                           '.L209:',
                           'addq\t$1, -64(%rbp)',
                           '.L205:',
                           'movq\t-32(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'cmpq\t%rax, -64(%rbp)',
                           'jbe\t.L210',
                           'call\tkh_init_idx',
                           'movq\t%rax, -24(%rbp)',
                           'movl\t-76(%rbp), %edx',
                           'movq\t-24(%rbp), %rax',
                           'movl\t%edx, %esi',
                           'movq\t%rax, %rdi',
                           'call\tkh_resize_idx',
                           'movq\t-32(%rbp), %rax',
                           'movl\t24(%rax), %eax',
                           'cltq',
                           'movl\t$8, %esi',
                           'movq\t%rax, %rdi',
                           'call\tcalloc@PLT',
                           'movq\t%rax, %rdx',
                           'movq\t-32(%rbp), %rax',
                           'movq\t%rdx, 32(%rax)',
                           'movq\t$1, -64(%rbp)',
                           'movl\t$1, -80(%rbp)',
                           'movq\t$0, -48(%rbp)',
                           'movq\t-48(%rbp), %rax',
                           'movq\t%rax, -56(%rbp)',
                           'jmp\t.L211',
                           '.L221:',
                           'movq\t-32(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'cmpq\t%rax, -64(%rbp)',
                           'je\t.L212',
                           'movq\t-32(%rbp), %rax',
                           'movq\t16(%rax), %rax',
                           'movq\t-64(%rbp), %rdx',
                           'salq\t$4, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t(%rax), %rax',
                           'shrq\t$8, %rax',
                           'movq\t%rax, %rcx',
                           'movq\t-32(%rbp), %rax',
                           'movq\t16(%rax), %rax',
                           'movq\t-64(%rbp), %rdx',
                           'salq\t$4, %rdx',
                           'subq\t$16, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t(%rax), %rax',
                           'shrq\t$8, %rax',
                           'cmpq\t%rax, %rcx',
                           'je\t.L213',
                           '.L212:',
                           'movq\t-32(%rbp), %rax',
                           'movq\t16(%rax), %rax',
                           'movq\t-64(%rbp), %rdx',
                           'salq\t$4, %rdx',
                           'subq\t$16, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t%rax, -16(%rbp)',
                           'movq\t-16(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'shrq\t$8, %rax',
                           'movq\t%rax, %rdx',
                           'movq\t-40(%rbp), %rax',
                           'movl\t(%rax), %eax',
                           'movl\t%eax, %ecx',
                           'shrq\t%cl, %rdx',
                           'movq\t%rdx, %rax',
                           'leaq\t(%rax,%rax), %rcx',
                           'leaq\t-84(%rbp), %rdx',
                           'movq\t-24(%rbp), %rax',
                           'movq\t%rcx, %rsi',
                           'movq\t%rax, %rdi',
                           'call\tkh_put_idx',
                           'movl\t%eax, -68(%rbp)',
                           'movl\t-84(%rbp), %eax',
                           'testl\t%eax, %eax',
                           'je\t.L214',
                           'movl\t-80(%rbp), %eax',
                           'movslq\t%eax, %rdx',
                           'movq\t-56(%rbp), %rax',
                           'addq\t%rdx, %rax',
                           'cmpq\t%rax, -64(%rbp)',
                           'je\t.L224',
                           '.L214:',
                           'leaq\t__PRETTY_FUNCTION__.4571(%rip), %rcx',
                           'movl\t$222, %edx',
                           'leaq\t.LC8(%rip), %rsi',
                           'leaq\t.LC9(%rip), %rdi',
                           'call\t__assert_fail@PLT',
                           '.L224:',
                           'cmpl\t$1, -80(%rbp)',
                           'jne\t.L216',
                           'movq\t-24(%rbp), %rax',
                           'movq\t24(%rax), %rax',
                           'movl\t-68(%rbp), %edx',
                           'salq\t$3, %rdx',
                           'addq\t%rdx, %rax',
                           'movq\t(%rax), %rdx',
                           'movq\t-24(%rbp), %rax',
                           'movq\t24(%rax), %rax',
                           'movl\t-68(%rbp), %ecx',
                           'salq\t$3, %rcx',
                           'addq\t%rcx, %rax',
                           'orq\t$1, %rdx',
                           'movq\t%rdx, (%rax)',
                           'movq\t-24(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movl\t-68(%rbp), %edx',
                           'salq\t$3, %rdx',
                           'addq\t%rax, %rdx',
                           'movq\t-16(%rbp), %rax',
                           'movq\t8(%rax), %rax',
                           'movq\t%rax, (%rdx)',
                           'jmp\t.L217',
                           '.L216:',
                           'movl\t$0, -72(%rbp)',
                           'jmp\t.L218',
                           '.L219:',
                           'movq\t-32(%rbp), %rax',
                           'movq\t16(%rax), %rax',
                           'movl\t-72(%rbp), %edx',
                           'movslq\t%edx, %rcx',
                           'movq\t-56(%rbp), %rdx',
                           'addq\t%rcx, %rdx',
                           'salq\t$4, %rdx',
                           'leaq\t(%rax,%rdx), %rcx',
                           'movq\t-32(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movl\t-72(%rbp), %edx',
                           'movslq\t%edx, %rsi',
                           'movq\t-48(%rbp), %rdx',
                           'addq\t%rsi, %rdx',
                           'salq\t$3, %rdx',
                           'addq\t%rax, %rdx',
                           'movq\t8(%rcx), %rax',
                           'movq\t%rax, (%rdx)',
                           'addl\t$1, -72(%rbp)',
                           '.L218:',
                           'movl\t-72(%rbp), %eax',
                           'cmpl\t-80(%rbp), %eax',
                           'jl\t.L219',
                           'movq\t-32(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movl\t-80(%rbp), %edx',
                           'movslq\t%edx, %rcx',
                           'movq\t-48(%rbp), %rdx',
                           'addq\t%rcx, %rdx',
                           'salq\t$3, %rdx',
                           'addq\t%rax, %rdx',
                           'movq\t-32(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movq\t-48(%rbp), %rcx',
                           'salq\t$3, %rcx',
                           'addq\t%rcx, %rax',
                           'movq\t%rdx, %rsi',
                           'movq\t%rax, %rdi',
                           'call\tradix_sort_64@PLT',
                           'movq\t-48(%rbp), %rax',
                           'salq\t$32, %rax',
                           'movq\t%rax, %rsi',
                           'movl\t-80(%rbp), %eax',
                           'movslq\t%eax, %rdx',
                           'movq\t-24(%rbp), %rax',
                           'movq\t32(%rax), %rax',
                           'movl\t-68(%rbp), %ecx',
                           'salq\t$3, %rcx',
                           'addq\t%rcx, %rax',
                           'orq\t%rsi, %rdx',
                           'movq\t%rdx, (%rax)',
                           'movl\t-80(%rbp), %eax',
                           'cltq',
                           'addq\t%rax, -48(%rbp)',
                           '.L217:',
                           'movq\t-64(%rbp), %rax',
                           'movq\t%rax, -56(%rbp)',
                           'movl\t$1, -80(%rbp)',
                           'jmp\t.L220',
                           '.L213:',
                           'addl\t$1, -80(%rbp)',
                           '.L220:',
                           'addq\t$1, -64(%rbp)',
                           '.L211:',
                           'movq\t-32(%rbp), %rax',
                           'movq\t(%rax), %rax',
                           'cmpq\t%rax, -64(%rbp)',
                           'jbe\t.L221',
                           'movq\t-32(%rbp), %rax',
                           'movq\t-24(%rbp), %rdx',
                           'movq\t%rdx, 40(%rax)',
                           'movq\t-32(%rbp), %rax',
                           'movl\t24(%rax), %eax',
                           'movq\t-48(%rbp), %rdx',
                           'cmpl\t%edx, %eax',
                           'je\t.L222',
                           'leaq\t__PRETTY_FUNCTION__.4571(%rip), %rcx',
                           'movl\t$238, %edx',
                           'leaq\t.LC8(%rip), %rsi',
                           'leaq\t.LC10(%rip), %rdi',
                           'call\t__assert_fail@PLT',
                           '.L222:',
                           'movq\t-32(%rbp), %rax',
                           'movq\t16(%rax), %rax',
                           'movq\t%rax, %rsi',
                           'movl\t$0, %edi',
                           'call\tkfree@PLT',
                           'movq\t-32(%rbp), %rax',
                           'movq\t$0, 8(%rax)',
                           'movq\t-32(%rbp), %rax',
                           'movq\t8(%rax), %rdx',
                           'movq\t-32(%rbp), %rax',
                           'movq\t%rdx, (%rax)',
                           'movq\t-32(%rbp), %rax',
                           'movq\t$0, 16(%rax)',
                           'jmp\t.L202',
                           '.L225:',
                           'nop',
                           '.L202:',
                           'movq\t-8(%rbp), %rax',
                           'xorq\t%fs:40, %rax',
                           'je\t.L223',
                           'call\t__stack_chk_fail@PLT',
                           '.L223:',
                           'leave',
                           '.cfi_def_cfa 7, 8',
                           'ret',
                           '.cfi_endproc',
                           '.LFE32:',
                           '.size\tworker_post, .-worker_post',
                           '.type\tmm_idx_post, @function'],
                  'fCalled': ['radix_sort_128x@PLT:',
                              'kh_init_idx:',
                              'kh_resize_idx:',
                              'calloc@PLT:',
                              'kh_put_idx:',
                              '__assert_fail@PLT:',
                              'radix_sort_64@PLT:',
                              '__assert_fail@PLT:',
                              'kfree@PLT:',
                              '__stack_chk_fail@PLT:'],
                  'fNames': ['kh_init_idx:', 'kh_resize_idx:', 'kh_put_idx:'],
                  'kh_init_idx:': ['.LFB10:',
                                   '.cfi_startproc',
                                   'pushq\t%rbp',
                                   '.cfi_def_cfa_offset 16',
                                   '.cfi_offset 6, -16',
                                   'movq\t%rsp, %rbp',
                                   '.cfi_def_cfa_register 6',
                                   'movl\t$40, %edx',
                                   'movl\t$1, %esi',
                                   'movl\t$0, %edi',
                                   'call\tkcalloc@PLT',
                                   'popq\t%rbp',
                                   '.cfi_def_cfa 7, 8',
                                   'ret',
                                   '.cfi_endproc',
                                   '.LFE10:',
                                   '.size\tkh_init_idx, .-kh_init_idx',
                                   '.type\tkh_destroy_idx, @function'],
                  'kh_put_idx:': ['.file\t"index.c"',
                                  '.text',
                                  '.section\t.rodata',
                                  '.align 8',
                                  '.type\t__ac_HASH_UPPER, @object',
                                  '.size\t__ac_HASH_UPPER, 8'],
                  'kh_resize_idx:': ['.file\t"index.c"',
                                     '.text',
                                     '.section\t.rodata',
                                     '.align 8',
                                     '.type\t__ac_HASH_UPPER, @object',
                                     '.size\t__ac_HASH_UPPER, 8']}}
